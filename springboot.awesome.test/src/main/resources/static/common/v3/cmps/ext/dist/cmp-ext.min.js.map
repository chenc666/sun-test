{"version":3,"sources":["Color.js","AjaxProxy.js","Dates.js","KeyMap.js","Record.js","TableModel.js","ArrayTableModel.js","FlowItem.js","Flow.js","SelectionModel.js","RowSelectionModel.js","CheckboxSelectionModel.js","Column.js","ColumnModel.js","GridView.js","Row.js","RowModel.js","GridPanel.js","Layout.js","FormLayout.js","TreeNodeView.js","TreeNode.js","TreeView.js","TreePanel.js","Button.js","Contaner.js","DateList.js","Dialog.js","Dialogs.js","PagingBar.js","Panel.js","Tooltip.js","WindowMng.js","Window.js","Field.js","TextField.js","Trigger.js","DateField.js","DateRange.js","ComboBox.js","Checkbox.js","CheckboxGroup.js"],"names":["VU","Cmp","util","ValueHelper","parse","s","toLowerCase","indexOf","parseWeb","index","parseRgb","parseRgba","substring","length","r","g","b","v","parseInt","ix","vs","split","toInteger","a","toFloat","Math","round","Color","me","this","red","greed","blue","alpha","getRed","getGreen","getBlue","getAlpha","isS","isN","PRO","prototype","valueOf","floor","getWebValue","rel","push","toString","join","getRgbValue","getRgbaValue","replaceAlpha","PK","mingle","color","offset","isF","mc","cc","web","rgb","rgba","define","factory","limitTaskCount","timeoutTimes","retryTimes","taskList","toUrlParamString","o","n","flag","isB","isA","isO","JSON","stringify","isD","getFullYear","getMonth","getDate","sv","getHours","getMinutes","getSeconds","HttpRequest","method","url","paramString","headerConfig","cb","_request","_isLowVer","createHttpRequest","window","XMLHttpRequest","ActiveXObject","requst","open","setRequestHeader","send","onreadystatechange","readyState","status","result","responseText","error","Task","cfg","param","undefined","_requsting","_runTime","_tryTime","_timeout","_querySeq","timeoutTask","DelayedTask","handler","putLog","startRequst","invoke","callback","scope","doRequst","seq","Date","getTime","type","cancel","run","delay","execute","timeout","tryTime","executeTask","shift","Proxy","setTimeout","setRetryTime","time","setMaxTaskCount","count","get","task","post","Rel","toDateStringForCh","date","toMonthStringForCh","toDateString","getDaysOfMonth","year","month","target","keyEventName","prevented","bingedKeyEvent","keyMaps","eventProxy","EventProxy","onKeyEvent","ev","c","keyCode","args","concat","apply","fire","preventDefault","bindKeyEvent","on","releaseKeyEvent","un","preventKeyEvent","unpreventKeyEvent","distory","destory","addListener","removeListener","addKey","i","removeKey","len","Record","extend","Observable","constructor","config","listeners","editBatch","data","keies","allowKeies","editing","addEvents","superclass","call","putByInner","key","value","k","ov","slice","removeByInner","ind","isEmpty","put","inkove","params","fireEvent","remove","values","entrys","beginEdit","cancelEdit","commit","batchs","splice","endEdit","UV","sort","records","sortInfo","d","dir","r1","r2","v1","v2","compare","filter","comp","each","av","doInsert","rid","createRecord","onRecordChanged","idKey","idValues","filterInfo","resultValues","doRemove","ri","idk","idvs","purgeListeners","EDIT_HANDLER","insert","compareFilter","of","nf","getNames","ms","oms","nms","compareArray","nv","requires","ext","reqs","superClass","idIndex","rs","removeByIndex","ci","crs","reload","isArray","getRecords","limit","end","info","find","callFn","getAt","getById","recordId","commitEdit","bs","isEditing","emptyFn","RecordClass","ks","HTML","cls","setLabel","label","labelBox","update","setAnchorText","text","anchorBox","anchor","active","setState","disable","enable","state","el","removeClass","addClass","initComponent","unshift","doRender","dom","allowedClick","setAttribute","firstChild","childNodes","onClick","FlowItem","setActiveIndex","activeIndex","it","flowItems","its","stepItems","iits","itemWidth","width","anchorText","render","SelectionModel","inited","initStyle","grid","isAllowedSelect","noselect","getCount","selections","clearSelection","setSelections","sels","getSelections","getSelected","bindRowEvent","releaseRowEvent","bindCellEvent","releaseCellEvent","arguments","rows","row","onClickRow","event","getId","selected","_removeSelection","unSelected","_addSelection","toSelected","record","single","selectedRow","ss","rowCount","getRowModel","headCls","headBox","getColumnWidth","columnWidth","renderHead","box","colIndex","onClickHeadBox","setWidth","getWidth","getRows","renderCell","rowIndex","SORT_BOX_HTML","Object","Column","sortable","sortBox","createChild","html","onClickHead","changeSotrStyle","textBox","tag","setStyle","onDataChanged","nm","dataIndex","displayTooltip","style","sortDir","nnm","ndir","ColumnModel","columns","cols","getColumn","DH","DomHelper","EMPTY_TABEL_HTML","view","getSelectionModel","renderBody","layoutRows","GridView","body","hideHeader","headWarp","bodyBox","footer","footBox","sm","striped","scrollLeft","bindDataEvent","releaseDataEvent","includHead","cm","getColumnModel","rw","getScrollWidth","bw","rm","w","getRowsHeight","getHeight","setRowWidth","bd","tr","td","inner","createDom","parentNode","renderRows","Row","cells","events","eventName","en","rendered","onEvent","id","getRowClass","cs","rowClass","RowModel","h","clearRows","renderRow","viewClass","selModelClass","colModelClass","rowModelClass","getView","selModel","columnModel","rowModel","Layout","getItemAt","items","cmp","getItemCount","layout","contaner","getLayoutTarget","beforeLayout","renderItem","relayout","appendItem","item","removeItem","destroy","create","HTML_TMP","buildId","TreeNodeView","node","isExtended","extended","collend","itemBox","childrenBox","hide","show","isSelected","select","unselect","showLoding","oldCls","nodeIconBox","className","hideLoading","getChildrenBox","setHideModal","clearChilden","childViews","addChild","isRenderedForChildren","subDom","cns","lv","getTreeLayer","iconBox","getIcon","setClass","getText","isLeaf","arrowBox","stopPropagation","onClickArrow","onClickNode","onDbClickNode","TreeNode","_tree","leaf","async","alwaysReload","children","parent","isAsync","isAlwaysReload","bindTree","tree","getTree","icon","setIcon","setText","t","editCache","updateNodeView","getParent","treeLayer","p","getChildren","loader","getLoader","load","os","startEdit","submitEdit","nodeClazz","nodeViewClazz","TreeView","nodeViews","delayClick","finishDaleyByClick","clickDaley","treeBox","useArrow","mask","rootView","renderTreeNode","root","hidderRoot","doExtendNode","createTreeNodeView","getNodeView","doCollectNode","acv","activedView","nodeView","cn","renderEmptyChild","extendNodes","nodes","superClazz","treeViewClazz","treeLoader","ens","extendNode","SP","actived","unactive","removeAttribute","disabled","setTooltip","tooltip","tagName","textCls","btnCls","onClickButton","layoutClazz","layoutReady","getLayout","addItem","removeItemAt","ly","require","clz","lyo","layoutConfig","fireLayoutReady","doLayout","onReadyCreateLayout","fn","readLayoutListeners","DATALIST_BOX_HTML","buildDayRow","rowClss","DayButtom","textEl","currentMonth","setValue","day","noCurrentMonth","nowDay","isDisabled","compareOfDay","d1","d2","buildBtnObject","buildDayBtn","onClickDayBtn","refreshCmps","cmps","dayBtns","minDay","minYear","minMonth","maxDay","maxYear","maxMonth","setSelectedStatus","btn","dv","y","m","setDisabledStatus","forwardYearBtn","forwardMonthBtn","nextYearBtn","nextMonthBtn","currentMonthBox","lm","startDay","mds","di","dayOfWeek","getDay","refresh","currentYear","setValueRange","min","max","minValue","maxValue","subDoms","onClickForwardYear","onClickForwardMonth","onClickNextYear","onClickNextMonth","j","sd","doChangeValue","BTNS_CONFIG","ok","btnClz","updateBody","bodyHtml","dlgCls","definedCls","showBoth","title","btns","showTitle","showBottom","hideBoth","hideTitle","hideBottom","hiddenTitie","titleBox","hiddenBottom","bottons","createDelegate","buttonBox","getBodyMask","bodyMask","getBody","createMask","dlg","biuldWaitHtml","msg","showWait","showWarn","showSuccess","showSuccessForOkcanel","showSuccessForYesNo","showConfirm","NUMBER_CODE","getDiForNumber","updateBtnStyle","isShow","pageIndex","createButtonHandler","getValue","tx","refreshByStandardWithInrange","pageTotal","pageBtns","pix","pi","lastBtn","refreshByStandardWithOverflow","pmi","pma","refreshByStandard","lastPageIndex","backwardBtn","forwardBtn","msgBox","pageIndexInput","jumpPageBtn","firstBtn","maxLength","buttonClazz","KeyMap","setDataResult","tl","pageSize","getPageIndex","getPageLimit","pageLimit","pageSizeOptions","doRenderByStandard","btnBox","appendBtn","onBackwardPage","onFirstPage","onPageIndex","onLastPage","onForwardPage","keyMap","onJumpPage","hidePageSizeSelect","fireLimitChangeEvent","activePageSizeBtn","hanlder","fireIndexChangeEvent","MASK_HTML","showMask","maskMsg","hideMask","shadow","frame","topBox","titleIconBox","titleTextBox","centerBox","tbarBox","bbarBox","bottomBox","renderTop","renderCenter","renderBottom","autoSize","noborder","tbar","bbar","buttons","getTooltipPosInfoByRT","txy","tsz","sz","xy","arrowCls","POS_HANDLERS","height","bl","br","lt","lb","rt","rb","getTooltipPosInfoByAuto","getTooltipPosInfo","pos","showArrow","getSize","isE","document","getElementById","getXY","showBy","ps","_arrowCls","left","top","autoHideTask","tip","ic","initTip","closable","autoCloseDelay","closeBox","onClickClose","activeWin","getDefaultXY","win","bh","x","setWinLeftAndTop","isCenter","winArray","sortWindowLayer","wid","pop","getCmp","modal","getActiveMask","activeMask","getWindowsBox","zIndex","activeWindow","showWindow","hideWindow","windowBox","WindowMng","onMouseDownByResize","dm","mk","resizeCache","sx","getStyleNumber","sy","sw","sh","mx","clientX","my","clientY","onMouseMoveByResize","onMouseUpByResize","getStyle","off","MIN_WIDTH","MIN_HEIGHT","offX","offY","fireResizeEvent","onMouseDownByMove","moveCache","onMouseMoveByMove","onMouseUpByMove","Button","setTitle","head","showAt","noCenter","close","hideHead","resizeble","initHead","initBody","initFoot","initResizeEvent","boxDom","ddom","titleWarp","titleInner","toolBox","movesable","content","innerHTML","foot","els","l","resizeBoxs","doDestroy","onResize","doEnable","doDisable","hideLabel","lw","labelWidth","paddingLeft","inputBox","renderInput","errorBox","minWidth","showError","_hasError","updateErrorMsg","hideError","input","setReadOnly","readOnly","atts","placeholder","emptyText","name","onInputBlur","ICON_MAP","search","right","up","down","calendar","gear","btnIcon","btnType","trigetBtn","onClickTrigger","disaebed","doClickTrigger","dateList","getDateList","listClazz","warp","dataList","showed","invokeCallback","isShowed","equals","dateListClazz","setMinValue","setMaxValue","doCollect","doExtend","list","doListCallback","toNextDay","toBackDay","dateFieldClazz","range","startInput","endInput","start","inputWidth","startBox","endBox","startEmptyText","endEmptyText","onStartValueChanged","onEndValueChanged","newValue","oldValue","field","modelClazz","setOptions","ops","options","valueIndex","textIndex","optionItems","activeOption","getTextByValue","collect","setLeftTop","renderOptionItems","renderOptionView","styleCls","sizeCls","renderOptionItem","clickItem","checkMode","toCheckedMode","toHalfCheckedMode","toUncheckedMode","isCheckeded","isHalfChecked","isUnchecked","checked","checkbox","onClickInput","checkboxClazz","op","vv","ip","ips","inputs","inputCount","allInput","appendCheckbox","selectCount","onValueChangeding","fo","allInputBox","onAllSelectChanged","optionBox","onOptionValueChanged","checkModue","onOptionValueChanging","onAllSelectChanging"],"mappings":"CAUA,WAEA,IAAAA,GAAAC,IAAAC,KAAAC,YAMAC,MAAA,SAAAC,GAEA,OAAA,KADAA,EAAAA,EAAAC,eACAC,QAAA,KACAC,SAAAH,GAEA,IAAAA,EAAAI,MAAA,QACAC,SAAAL,GAEA,IAAAA,EAAAI,MAAA,UACAE,UAAAN,IASAG,SAAA,SAAAH,GAEA,GAAA,KADAA,EAAAA,EAAAO,UAAA,IACAC,QAAA,IAAAR,EAAAQ,OACA,OAAA,EAGA,IACAC,EAAAC,EAAAC,EADAC,EAAAC,SAAAb,EAAA,IAEA,OAAA,IAAAY,EACAA,GAEA,IAAAZ,EAAAQ,QAEAC,IADAA,GAAA,KAAAG,IAAA,IACA,GAAAH,EAEAC,IADAA,GAAA,IAAAE,IAAA,IACA,GAAAF,EAEAC,IADAA,EAAA,GAAAC,IACA,GAAAD,IAGAF,GAAA,SAAAG,IAAA,GACAF,GAAA,MAAAE,IAAA,EACAD,EAAA,IAAAC,IAGAH,EAAAC,EAAAC,EAAA,OAMAN,SAAA,SAAAL,GAEA,IAAAc,IADAd,EAAAA,EAAAO,UAAA,IACAL,QAAA,KACAY,IAAA,IACAd,EAAAA,EAAAO,UAAA,EAAAO,KAEA,IAAAC,GAAAf,EAAAgB,MAAA,KACA,GAAA,GAAAD,GAAAP,OACA,OAAA,EAEA,IAAAC,EAAAd,GAAAsB,UAAAF,GAAA,IAAA,GACAL,EAAAf,GAAAsB,UAAAF,GAAA,IAAA,GACAJ,EAAAhB,GAAAsB,UAAAF,GAAA,IAAA,GACA,OAAA,IAAAN,IAAA,IAAAC,IAAA,IAAAC,IAGAF,GAAA,IACAC,GAAA,IACAC,GAAA,KACAF,EAAAC,EAAAC,EAAA,OAMAL,UAAA,SAAAN,GAEA,IAAAc,IADAd,EAAAA,EAAAO,UAAA,IACAL,QAAA,KACAY,IAAA,IACAd,EAAAA,EAAAO,UAAA,EAAAO,KAEA,IAAAC,GAAAf,EAAAgB,MAAA,KACA,GAAA,GAAAD,GAAAP,OACA,OAAA,EAEA,IAAAC,EAAAd,GAAAsB,UAAAF,GAAA,IAAA,GACAL,EAAAf,GAAAsB,UAAAF,GAAA,IAAA,GACAJ,EAAAhB,GAAAsB,UAAAF,GAAA,IAAA,GACAG,EAAAvB,GAAAwB,QAAAJ,GAAA,IAAA,GACA,OAAA,IAAAN,IAAA,IAAAC,IAAA,IAAAC,IACA,IAAAO,IAGAT,GAAA,IACAC,GAAA,IACAC,GAAA,IACAO,EAAAE,KAAAC,MAAA,IAAAH,GAAA,KAEAT,EAAAC,EAAAC,EAAAO,KAUAI,MAAA,SAAAb,EAAAC,EAAAC,EAAAO,GACA,IAAAK,GAAAC,KACAC,IAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IAgCA,GA1BAL,GAAAM,OAAA,WACA,OAAAJ,KAMAF,GAAAO,SAAA,WACA,OAAAJ,OAMAH,GAAAQ,QAAA,WACA,OAAAJ,MAMAJ,GAAAS,SAAA,WACA,OAAAJ,OAIAK,IAAAxB,GAAA,CACA,IAAAM,GAAAhB,MAAAU,GACAM,KACAU,IAAAV,GAAA,GACAW,MAAAX,GAAA,GACAY,KAAAZ,GAAA,GACAa,MAAAb,GAAA,SAGAmB,IAAAzB,KACAgB,IAAAhB,EAAA,IACAiB,MAAAQ,IAAAxB,GAAAA,EAAA,IAAA,IACAiB,KAAAO,IAAAvB,GAAAA,EAAA,IAAA,IACAiB,MAAAM,IAAAhB,GAAAA,EAAA,IAAA,MAiIAiB,IA1HAb,MAAAc,WAIAC,QAAA,WACA,IAAAd,GAAAC,KACAN,EAAAK,GAAAS,WACApB,EAAAW,GAAAM,UAAA,GAAAN,GAAAO,YAAA,EAAAP,GAAAQ,UAQA,OAPA,MAAAb,EACAN,GAAA,KAAA,GAEA,IAAAM,IAEAN,IADAM,EAAAE,KAAAkB,MAAApB,EAAA,IAAA,OACA,IAEAN,GAMA2B,YAAA,WACA,IAAAhB,GAAAC,KACAf,EAAAc,GAAAM,SACAnB,EAAAa,GAAAO,WACAnB,EAAAY,GAAAQ,UACAS,KAAA,KAIA,OAHAA,IAAAC,KAAAhC,EAAAiC,SAAA,KACAF,IAAAC,KAAA/B,EAAAgC,SAAA,KACAF,IAAAC,KAAA9B,EAAA+B,SAAA,KACAF,IAAAG,KAAA,KAKAC,YAAA,WACA,IAAArB,GAAAC,KACAf,EAAAc,GAAAM,SACAnB,EAAAa,GAAAO,WACAnB,EAAAY,GAAAQ,UACAS,KAAA,QAOA,OANAA,IAAAC,KAAAhC,GACA+B,IAAAC,KAAA,KACAD,IAAAC,KAAA/B,GACA8B,IAAAC,KAAA,KACAD,IAAAC,KAAA9B,GACA6B,IAAAC,KAAA,KACAD,IAAAG,KAAA,KAKAE,aAAA,WACA,IAAAtB,GAAAC,KACAf,EAAAc,GAAAM,SACAnB,EAAAa,GAAAO,WACAnB,EAAAY,GAAAQ,UACAb,EAAAK,GAAAS,WACAQ,KAAA,SASA,OARAA,IAAAC,KAAAhC,GACA+B,IAAAC,KAAA,KACAD,IAAAC,KAAA/B,GACA8B,IAAAC,KAAA,KACAD,IAAAC,KAAA9B,GACA6B,IAAAC,KAAA,KACAD,IAAAC,KAAAvB,EAAA,KACAsB,IAAAC,KAAA,KACAD,IAAAG,KAAA,KAOAG,aAAA,SAAAlB,OACA,IAAAL,GAAAC,KACA,OAAA,IAAAuB,GAAAzB,MAAAC,GAAAM,SAAAN,GAAAO,WAAAP,GAAAQ,UAAAH,QASAoB,OAAA,SAAAC,MAAAC,QACA,IAAAD,OAAAE,IAAAF,MAAApB,QACA,OAAA,KAGA,IAAAN,GAAAC,KACA,GAAA,KAFA0B,OAAAhB,IAAAgB,QAAAA,OAAA,IAAA,IAGA,OAAA,IAAAH,GAAAzB,MAAAC,GAAAM,SAAAN,GAAAO,WAAAP,GAAAQ,UAAAR,GAAAS,YAEA,GAAA,MAAAkB,OACA,OAAA,IAAAH,GAAAzB,MAAA2B,MAAApB,SAAAoB,MAAAnB,WAAAmB,MAAAlB,UAAAkB,MAAAjB,YAEA,IAAAoB,IAAA,IAAAF,QAAA,IACAG,GAAAH,OAAA,IAEAzC,EAAAW,KAAAC,MAAAE,GAAAM,SAAAuB,GAAAH,MAAApB,SAAAwB,IACA3C,EAAAU,KAAAC,MAAAE,GAAAO,WAAAsB,GAAAH,MAAAnB,WAAAuB,IACA1C,EAAAS,KAAAC,MAAAE,GAAAQ,UAAAqB,GAAAH,MAAAlB,UAAAsB,IACAnC,EAAAK,GAAAS,WAAAoB,GAAAH,MAAAjB,WAAAqB,GAEA,OAAA,IAAA/B,MAAAb,EAAAC,EAAAC,EAAAO,IAKAwB,SAAA,WACA,IAAAnB,GAAAC,KAEA,OAAA,MADAD,GAAAS,WAEAT,GAAAgB,cAGAhB,GAAAsB,iBAUAV,IAAAmB,IAAAnB,IAAAI,YAIAJ,IAAAoB,IAAApB,IAAAS,YAIAT,IAAAqB,KAAArB,IAAAU,aAOAvB,MAAAvB,MAAA,SAAAC,GACA,IAAAe,GAAAhB,MAAAC,GACA,GAAAe,GACA,OAAA,IAAAgC,GAAAzB,MAAAP,GAAA,GAAAA,GAAA,GAAAA,GAAA,GAAAA,GAAA,KAIAnB,IAAA6D,OAAA,kBACAC,QAAA,WACA,OAAApC,YCpUA,WAGA,IAAAqC,eAAA,GAEAC,aAAA,IAEAC,WAAA,EAIAC,YAEAC,iBAAA,SAAAC,GACA,IAAAC,EAAArD,EAAAZ,EAAAwC,OAAA0B,MAAA,EACA,IAAAD,KAAAD,EACAE,KACA1B,IAAAC,KAAA,KAGAyB,MAAA,EAEAtD,EAAAoD,EAAAC,GACAzB,IAAAC,KAAAwB,GACAzB,IAAAC,KAAA,KACAR,IAAArB,IAAAsB,IAAAtB,GACA4B,IAAAC,KAAA7B,GAEAuD,IAAAvD,GACA4B,IAAAC,KAAA7B,EAAA,OAAA,SAEAwD,IAAAxD,GACA4B,IAAAC,KAAA7B,EAAA+B,KAAA,MAEA0B,IAAAzD,GACA4B,IAAAC,KAAA6B,KAAAC,UAAA3D,IAEA4D,IAAA5D,KAEA4B,IAAAC,KAAA7B,EAAA6D,eAEAjC,IAAAC,KAAA,MACAzC,EAAAY,EAAA8D,WAAA,GACA,IACAlC,IAAAC,KAAA,KAEAD,IAAAC,KAAAzC,GAEAwC,IAAAC,KAAA,KACAzC,EAAAY,EAAA+D,UACAC,GAAA,IACApC,IAAAC,KAAA,KAEAD,IAAAC,KAAAzC,GAEAwC,IAAAC,KAAA,MACAzC,EAAAY,EAAAiE,YACA,IACArC,IAAAC,KAAA,KAEAD,IAAAC,KAAAzC,GAEAwC,IAAAC,KAAA,MACAzC,EAAAY,EAAAkE,cACA,IACAtC,IAAAC,KAAA,KAEAD,IAAAC,KAAAzC,GAEAwC,IAAAC,KAAA,MACAzC,EAAAY,EAAAmE,cACA,IACAvC,IAAAC,KAAA,KAEAD,IAAAC,KAAAzC,IAIA,OAAAwC,IAAAG,KAAA,KAaAqC,YAAA,SAAAC,OAAAC,IAAAC,YAAAC,aAAAC,IACA,IACAC,SACAC,WAAA,EAGAC,kBAAA,WACAC,OAAAC,eACAJ,SAAA,IAAAI,eAEAD,OAAAE,gBAEAL,SAAA,IAAAK,cAAA,qBACAJ,WAAA,IAZA/D,KAeAoE,OAAA,WACAJ,oBACAF,SAAAO,KAAAZ,QAAA,MAAAC,KAAA,GACA,SAAAD,QAAAhD,IAAAkD,aACAG,SAAAQ,iBAAA,eAAA,oDAGAR,SAAAQ,iBAAA,eAAA,iBAEAR,SAAAS,KAAAZ,aACAG,SAAAU,mBAAA,WACA,GAAAV,SAAAW,YAGAZ,GADA,KAAAC,SAAAY,QAEAC,OAAAb,SAAAc,cAIAd,SAAAY,QAAA,KAAAZ,SAAAY,OAAA,KAEAG,MAAA,YAKAA,MAAA,gBASAC,KAAA,SAAAC,KACA,IAAAhF,GAAAC,KACA2D,YAAAd,IAAAkC,IAAAC,OAAAzC,iBAAAwC,IAAAC,YAAAC,EACAC,YAAA,EACAC,SAAA,EACAC,SAAA,EACAC,SAAA,EACAC,UAAA,EAuBAvF,GAAAwF,YAAA,IAAAnH,IAAAC,KAAAmH,aACAC,QAfA,YACA,IAAAP,aACAC,SAAAC,UACAM,OAAA,iBAAAP,SAAA,GACAQ,eAGAvH,IAAAwH,OAAAb,IAAAc,SAAAd,IAAAe,QACAjB,MAAA,YAQAiB,MAAA/F,KAGA,IAAAgG,SAAA,SAAAC,KAEA,IAAAtC,KAAAqB,IAAArB,KAEAqB,IAAArB,IAAAhF,QAAA,MAAA,EACAgF,IAAAzC,KAAA,UAGAyC,IAAAzC,KAAA,UAEAyC,IAAAzC,MAAA,IAAAgF,MAAAC,WACA,IAAA1C,YAAAuB,IAAAoB,KAAAzC,IAAAvC,KAAA,IAAAwC,eAAA,SAAAgB,QACAW,YAAAU,MACAjG,GAAAwF,YAAAa,SACAlB,YAAA,EACA9G,IAAAwH,OAAAb,IAAAc,SAAAd,IAAAe,OAAAnB,YAGAP,UAGAuB,YAAA,WACAR,WACAY,WAAAT,WACAvF,GAAAwF,YAAAc,KAAAC,MAAAjB,YAQAtF,GAAAwG,QAAA,SAAAC,QAAAC,SACA,GAAAvB,WACA,OAAA,EAEAA,YAAA,EACAE,SAAAqB,QACApB,SAAAmB,QACAb,gBASAe,YAAA,WAxNA,EAyNAvE,gBAAAG,SAAAtD,OAAA,GACAsD,SAAAqE,QACAJ,QAAAnE,aAAAC,aAIAuE,OAKAC,WAAA,SAAAL,SAEApE,aADA1B,IAAA8F,UAAAA,QAAA,IACAA,QAGA,KAOAM,aAAA,SAAAC,MAEA1E,WADA3B,IAAAqG,OAAAA,KAAA,EACAA,KAGA,GAOAC,gBAAA,SAAAC,OAEA9E,eADAzB,IAAAuG,QAAAA,MAAA,EACAA,MAGA,IAcAC,IAAA,SAAAxD,IAAAsB,MAAAa,SAAAC,OAEA,IAAA9E,KAAA0C,KAGAb,IAAAmC,SACAtB,IAAAhF,QAAA,MAAA,EACAsC,IAAAC,KAAA,KAGAD,IAAAC,KAAA,KAEAD,IAAAC,KAAAsB,iBAAAyC,SAGA,IAAAmC,KAAA,IAAArC,MACAqB,KAAA,MACAzC,IAAA1C,IAAAG,KAAA,IACA6D,WAAAC,EACAY,SAAAA,SACAC,MAAAA,QAEAxD,SAAArB,KAAAkG,MACAT,eAaAU,KAAA,SAAA1D,IAAAsB,MAAAa,SAAAC,OACA,IAAAqB,KAAA,IAAArC,MACAqB,KAAA,OACAzC,IAAAA,IACAsB,MAAAA,MACAa,SAAAA,SACAC,MAAAA,QAEAxD,SAAArB,KAAAkG,MACAT,gBAKAtI,IAAA6D,OAAA,sBACAC,QAAA,WACA,OAAA0E,YC7UA,WAGA,IAAAS,KAOAC,kBAAA,SAAAC,MACA,IAAAvE,IAAAuE,MACA,MAAA,GAEA,IAAAnI,EAAA4B,OAkBA,OAhBAA,IAAAC,KAAAsG,KAAAtE,eACAjC,IAAAC,KAAA,MAEA7B,EAAAmI,KAAArE,WAAA,GACA,IACAlC,IAAAC,KAAA,KAEAD,IAAAC,KAAA7B,GACA4B,IAAAC,KAAA,MAEA7B,EAAAmI,KAAApE,WACA,IACAnC,IAAAC,KAAA,KAEAD,IAAAC,KAAA7B,GACA4B,IAAAC,KAAA,KACAD,IAAAG,KAAA,KAOAqG,mBAAA,SAAAD,MACA,IAAAvE,IAAAuE,MACA,MAAA,GAEA,IAAAnI,EAAA4B,OAWA,OATAA,IAAAC,KAAAsG,KAAAtE,eACAjC,IAAAC,KAAA,MAEA7B,EAAAmI,KAAArE,WAAA,GACA,IACAlC,IAAAC,KAAA,KAEAD,IAAAC,KAAA7B,GACA4B,IAAAC,KAAA,KACAD,IAAAG,KAAA,KAOAsG,aAAA,SAAAF,MACA,IAAAvE,IAAAuE,MACA,MAAA,GAEA,IAAAnI,EAAA4B,OAiBA,OAfAA,IAAAC,KAAAsG,KAAAtE,eAEAjC,IAAAC,KAAA,MACA7B,EAAAmI,KAAArE,WAAA,GACA,IACAlC,IAAAC,KAAA,KAEAD,IAAAC,KAAA7B,GAEA4B,IAAAC,KAAA,MACA7B,EAAAmI,KAAApE,WACA,IACAnC,IAAAC,KAAA,KAEAD,IAAAC,KAAA7B,GACA4B,IAAAG,KAAA,KAOAuG,eAAA,SAAAC,KAAAC,OACA,OAAAA,OAEA,KAAA,EAEA,KAAA,EAEA,KAAA,EAEA,KAAA,GACA,OAAA,GAEA,KAAA,EACA,OAAA,GAAAD,KAAA,KAAA,GAAAA,KAAA,KAAA,GAAAA,KAAA,EAEA,GAIA,GAGA,QACA,OAAA,MAKAvJ,IAAA6D,OAAA,kBACAC,QAAA,WACA,OAAAmF,UCtHA,WAOA,IAAAA,IAAA,SAAAQ,OAAAC,cACA,IAAA/H,GAAAC,KAEA+H,WAAA,EAEAC,gBAAA,EACAjI,GAAAkI,WACAlI,GAAAmI,WAAA,IAAA9J,IAAAC,KAAA8J,WAMA,IAAAC,WAAA,SAAAC,IACA,IAAAC,EAAAD,GAAAE,QAIA,GAHAD,IAAAA,GAAAA,EAAA,GAEAA,EAAAvI,GAAAkI,QAAAK,GAEA,GAAA3G,IAAA2G,EAAA7C,SAAA,CACA,IAAA+C,MAAAH,GAAAR,QACAjF,IAAA0F,EAAAE,QACAA,KAAAA,KAAAC,OAAAH,EAAAE,QAEA,IAAAF,EAAA7C,QAAAiD,MAAAJ,EAAAxC,OAAA7B,OAAAuE,OACAzI,GAAAmI,WAAAS,KAAAN,GAAAR,aAIA9H,GAAAmI,WAAAS,KAAAN,GAAAR,aAGAE,UAIAM,GAAAO,iBAHA7I,GAAAmI,WAAAS,KAAAN,GAAAR,SAUA9H,GAAA8I,aAAA,WACAb,iBACAA,gBAAA,EACAH,OAAAiB,GAAAhB,aAAAM,WAAArI,MAMAA,GAAAgJ,gBAAA,WACAf,iBACAA,gBAAA,EACAH,OAAAmB,GAAAlB,aAAAM,WAAArI,MAQAA,GAAAkJ,gBAAA,WACAlB,WAAA,GAMAhI,GAAAmJ,kBAAA,WACAnB,WAAA,GAMAhI,GAAAoJ,QAAA,WACApJ,GAAAgJ,kBAEAhJ,GAAAmI,WAAAkB,iBAEArJ,GAAAkI,eACAlI,GAAAmI,cAIAb,IAAAzG,WAQAyI,YAAA,SAAA5D,QAAAK,OACAnE,IAAA8D,UACAzF,KAAAkI,WAAAmB,YAAA5D,QAAAK,QAQAwD,eAAA,SAAA7D,QAAAK,OACAnE,IAAA8D,UACAzF,KAAAkI,WAAAoB,eAAA7D,QAAAK,QAYAyD,OAAA,SAAAhB,QAAA9C,QAAAK,MAAA0C,MACA,IAAAzI,GAAAC,KACA,GAAA6C,IAAA0F,SAAA,CACAzC,MAAAyC,QAAAzC,MACA0C,KAAAD,QAAAC,KACA,IAAAgB,EAAApK,EACA,IAAAoK,KAAAjB,QACA,UAAAiB,GACA,SAAAA,IAGApK,EAAAmJ,QAAAiB,GACAA,GAAA,GACAzJ,GAAAkI,QAAAuB,IACA/D,QAAArG,EACA0G,MAAAA,MACA0C,KAAAA,YAIA9H,IAAA6H,UAAA9H,IAAA8H,YACAA,SAAA,GACAxI,GAAAkI,QAAAM,UACA9C,QAAAA,QACAK,MAAAA,MACA0C,KAAAA,QAQAiB,UAAA,SAAAlB,SACA,IAAAxI,GAAAC,KAEA,GAAA4C,IAAA2F,SACA,IAAA,IAAA9F,EAAA+G,EAAA,EAAAE,IAAAnB,QAAAvJ,OAAAwK,EAAAE,IAAAF,IACA/G,EAAA8F,QAAAiB,GAAA,UACAzJ,GAAAkI,QAAAxF,QAGA/B,IAAA6H,UAAA9H,IAAA8H,YACAA,SAAA,UACAxI,GAAAkI,QAAAM,aAIAO,GAAAzB,IAAAzG,UAAAyI,YACAhC,IAAAzG,UAAAoI,GAAA3B,IAAAzG,UAAA0I,eAEAlL,IAAA6D,OAAA,mBACAC,QAAA,WACA,OAAAmF,UChLA,WACA,IAAAsC,OAAAvL,IAAAwL,OAAAxL,IAAAC,KAAAwL,YAWAC,YAAA,SAAAC,OAAAC,WACA,IAWAC,UAXAlK,GAAAC,KAEAkK,QAEAC,SAEAC,YAAA,EAEApL,OAAA,EAEAqL,SAAA,EAGAtK,GAAAuK,UAUA,WAGAX,OAAAY,WAAAT,YAAAU,KAAAzK,IACAiK,UAAAA,YAWA,IAAAS,WAAA,SAAAC,IAAAC,OACA,IAAAC,EAAAxL,EAAAoK,EAAAqB,GAAAvC,GAAA,EACA7H,IAAAiK,QACAG,OACAH,KAAAC,MACAD,IAAAG,IAEA,IAAAD,KAAAF,KACAtL,EAAAsL,IAAAE,OACAC,GAAAX,KAAAU,OAEAR,YAAAA,WAAA1L,QAAAkM,IAAA,KACApB,EAAAW,MAAAzL,QAAAkM,QACA3F,IAAA7F,UACA8K,KAAAU,GACApB,GAAA,IACAW,MAAAW,MAAAtB,EAAA,GACAxK,YAIAkL,KAAAU,GAAAxL,EACAoK,EAAA,IACAW,MAAAlJ,KAAA2J,GACA5L,WAGAsJ,GAAA,GAIA,OAAAA,GASAyC,cAAA,SAAAL,KACA,IAAAM,IAAAJ,EAAAC,GAAAvC,EAAAtH,IACA,GAAAP,IAAAiK,KAAA,CAGA,GAFAG,GAAAX,KAAAQ,YACAR,KAAAQ,UACAzF,IAAA4F,GACA,OAOA,OALAG,IAAAb,MAAAzL,QAAAgM,OACA,IACAP,MAAAW,MAAAE,IAAA,GACAhM,UAEA6L,GAEA,GAAAjI,IAAA8H,KAAA,CACA1J,OACAsH,GAAA,EACA,IAAA,IAAAkB,EAAA,EAAAE,IAAAgB,IAAA1L,OAAAwK,EAAAE,IAAAF,IACAoB,EAAAF,IAAAlB,GACAqB,GAAAX,KAAAU,UACAV,KAAAQ,UACAzF,IAAA4F,GACA7J,IAAAC,UAAAgE,IAGAjE,IAAAC,KAAA4J,IACAvC,GAAA,GACA0C,IAAAb,MAAAzL,QAAAkM,KACA,IACAT,MAAAW,MAAAE,IAAA,GACAhM,WAKA,OAAAsJ,EAAAtH,SAAAiE,GAsLA,GA9KAlF,GAAAkL,QAAA,WACA,OAAA,IAAAjM,QAQAe,GAAAmH,IAAA,SAAAwD,KACA,OAAAR,KAAAQ,MAWA3K,GAAAmL,IAAA,SAAAR,IAAAC,OAaA,OAZAN,QACAJ,UAAAhJ,MACAkK,OAAA,aACAC,QAAAV,IAAAC,SAIAF,WAAAC,IAAAC,QAEA5K,GAAAsL,UAAA,UAAAtL,IAGAA,IASAA,GAAAuL,OAAA,SAAAZ,KACA,IAAAL,QAAA,CAQA,IAAA/B,EAAAyC,cAAAL,KAIA,OAHApC,GACAvI,GAAAsL,UAAA,UAAAtL,IAEAuI,EAXA2B,UAAAhJ,MACAkK,OAAA,gBACAC,QAAAV,QAeA3K,GAAAkH,MAAA,WACA,OAAAjI,QAMAe,GAAAoK,MAAA,WACA,OAAAA,MAAAW,MAAA,IAMA/K,GAAAwL,OAAA,WACA,IAAA/B,EAAAxI,OACA,IAAAwI,KAAAU,KACAlJ,IAAAC,KAAAiJ,KAAAV,IAEA,OAAAxI,KAOAjB,GAAAyL,OAAA,WACA,IAAAhC,EAAAxI,OACA,IAAAwI,KAAAU,KACAlJ,IAAAC,MACAyJ,IAAAlB,EACAmB,MAAAT,KAAAV,MASAzJ,GAAAmK,KAAA,WACA,OAAA9L,IAAAsK,SAAAwB,OAQAnK,GAAA0L,UAAA,WAKA,OAJA,IAAApB,UACAJ,cAEAI,SAAA,EACAtK,IAMAA,GAAA2L,WAAA,WAGA,OAFAzB,eAAAhF,EACAoF,SAAA,EACAtK,IAOAA,GAAA4L,OAAA,WACA,IAAA,IAAAtB,QAAA,CAMA,IALA,IAGAlL,EAHAqK,EAAA,EACAoC,OAAA3B,UAAA4B,OAAA,GACAnC,IAAAkC,OAAA5M,OACAsJ,GAAA,EAEAkB,EAAAE,IAAAF,IAEA,mBADArK,EAAAyM,OAAApC,IACA2B,YACAlG,IAAA8F,cAAA5L,EAAAiM,OAAA,MACA9C,GAAA,GAGA,eAAAnJ,EAAAgM,SACA,IAAAV,WAAAtL,EAAAiM,OAAA,GAAAjM,EAAAiM,OAAA,MACA9C,GAAA,GAIA,GAAAA,EAEA,OADAvI,GAAAsL,UAAA,UAAAtL,KACA,EAIA,OAAA,GAKAA,GAAA+L,QAAA,WACA/L,GAAA4L,SACA5L,GAAA2L,cAKA9I,IAAAmH,OAAAK,aAAAL,OAAAK,WAAApL,OAAA,IACAoL,WAAAL,OAAAK,WAAAU,MAAA,IAGAjI,IAAAkH,OAAAY,OAAA,CACA,IAAA,IAAAC,KAAAb,OAAAY,QACAP,YAAAA,WAAA1L,QAAAkM,IAAA,KACAV,KAAAU,GAAAb,OAAAY,MAAAC,GACAT,MAAAlJ,KAAA2J,IAGA5L,OAAAmL,MAAAnL,WAMAZ,IAAA6D,OAAA,mBACAC,QAAA,WACA,OAAAyH,aChUA,WACA,IACAA,OADAoC,GAAA3N,IAAAC,KAAAC,YAOA0N,KAAA,SAAAC,QAAAC,UACA,IAAAtJ,IAAAqJ,UAAA,GAAAA,QAAAjN,SACAkN,WAAAA,SAAAxB,IACA,OAAAuB,QAGA,IAAArB,EAAAsB,SAAAxB,IACAyB,EAAA,QAAAD,SAAAE,IAMA,OALAH,QAAAD,KAAA,SAAAK,GAAAC,IACA,IAAAC,GAAAF,GAAAnF,IAAA0D,GACA4B,GAAAF,GAAApF,IAAA0D,GACA,OAAAuB,GAAAJ,GAAAU,QAAAF,GAAAC,IAAAT,GAAAU,QAAAF,GAAAC,MAEAP,SAYAS,OAAA,SAAAT,QAAAS,QACA,IAAA9J,IAAAqJ,UAAA,GAAAA,QAAAjN,OACA,SAEA,IAAA0N,OACA,OAAAT,QAAAnB,MAAA,GAGA,IACA6B,KAAAD,OAAAD,QACA,GAAA9K,IAAAgL,MAOA,OANA3L,OACA5C,IAAAwO,KAAAX,QAAA,SAAAhN,GACA0N,KAAAnC,KAAAkC,OAAA5G,UAAA7G,IACA+B,IAAAC,KAAAhC,KAGA+B,IAQA,GALAP,IAAAiM,OAAAhC,QACAlI,MACAkK,OAAAhC,KAAAgC,OAAA/B,MACA+B,OAAAhC,IAAAlI,GAEAK,IAAA6J,OAAAhC,KAAA,CACA,IAAAlB,EAAApK,EAAAyN,GAAAvE,EACA9F,EAAAkK,OAAAhC,IACA1J,OAcA,OAbA5C,IAAAwO,KAAAX,QAAA,SAAAhN,GACAqJ,GAAA,EACA,IAAAkB,KAAAhH,EACAqK,GAAArK,EAAAgH,GACApK,EAAAH,EAAAiI,IAAAsC,GACA,IAAAuC,GAAAU,QAAArN,EAAAyN,MACAvE,GAAA,GAGAA,GACAtH,IAAAC,KAAAhC,KAGA+B,IAGA,OAAAiL,QAAAnB,MAAA,IAUAgC,SAAA,SAAAvB,QAKA,GAHA1I,IAAA0I,UAAA3I,IAAA2I,UACAA,QAAAA,UAEA3I,IAAA2I,QACA,OAAA,EAQA,IANA,IAIAtM,EAAA8N,IAJAhN,GAAAC,KACAwJ,EAAA,EACAE,IAAA6B,OAAAvM,OACAgC,OAGAwI,EAAAE,IAAAF,KACAvK,EAAAc,GAAAiN,aAAAzB,OAAA/B,OAIAvK,EAAA6J,GAAA,UAAAmE,gBAAAlN,KAEA,IAAAA,GAAAsK,SAEApL,EAAAwM,YAEA1L,GAAAwL,OAAAtK,KAAAhC,GACA+B,IAAAC,KAAAhC,IACA,IAAAc,GAAAmN,QACAH,IAAA9N,EAAAiI,IAAAnH,GAAAmN,OACAnN,GAAAoN,SAAAJ,KAAA9N,IAmBA,OAfAc,GAAAqN,aACApM,IAAA0L,OAAA1L,IAAAjB,GAAAqN,aAIArN,GAAAsN,cAAArM,IAAAhC,OAAA,IACAZ,IAAAwO,KAAA5L,IAAA,SAAA/B,GACAc,GAAAsN,aAAApM,KAAAhC,KAGAc,GAAAmM,WACAnM,GAAAsN,aAAArB,KAAAjM,GAAAsN,aAAAtN,GAAAmM,YAIA,IAAAlL,IAAAhC,QAAAgC,KAOAsM,SAAA,SAAArB,SAMA,IAJAxL,IAAAwL,UACAA,mBAAAtC,UACAsC,SAAAA,WAEArJ,IAAAqJ,SACA,OAAA,EAYA,IATA,IAOA7M,EAAAH,EAAAsO,GAPAxN,GAAAC,KACAT,GAAAQ,GAAAwL,OACAiC,IAAAzN,GAAAmN,MACAO,KAAA1N,GAAAoN,SACA3D,EAAA,EACAE,IAAAuC,QAAAjN,OACAgC,OAGAwI,EAAAE,IAAAF,IACApK,EAAA6M,QAAAzC,GACA/I,IAAArB,GACAH,IAAAwO,MAAAA,KAAArO,GAEAA,aAAAuK,SACA1K,EAAAG,EACAA,IAAAoO,KAAAvO,EAAAiI,IAAAsG,OAIAD,GAAAhO,GAAAb,QAAAO,KACA,IACAM,GAAAsM,OAAA0B,GAAA,GAEAE,aACAA,KAAArO,GAIAH,EAAAyO,iBAGA1M,IAAAC,KAAAhC,IAIA,OAAA+B,IAAAhC,OAAA,IAEAe,GAAAsN,aAAAX,OAAA3M,GAAAwL,OAAAxL,GAAAqN,YAEArN,GAAAsN,aAAArB,KAAAjM,GAAAsN,aAAAtN,GAAAmM,UACAlL,MAWAiM,gBAAA,SAAAhO,GACA,IAAAc,GAAAC,MACA,IAAAD,GAAAsK,UAIAtK,GAAAsN,aAAAX,OAAA3M,GAAAwL,OAAAxL,GAAAqN,YAEArN,GAAAsN,aAAArB,KAAAjM,GAAAsN,aAAAtN,GAAAmM,UAEAnM,GAAAsL,UAAA,OAAAtL,GAAAd,GACAc,GAAAsL,UAAA,UAAA,OAAAtL,GAAAd,KAMA0O,cACAC,OAAAd,SACAxB,OAAAgC,UAQAO,cAAA,SAAAC,GAAAC,IACA,GAAAD,IAAAC,GACA,OAAA,EAEA,QAAA9I,GAAA6I,SAAA7I,GAAA8I,GACA,OAAA,EAGA,IAAAC,SAAA,SAAAxL,GACA,IAAAyL,MACA,IAAA,IAAAzE,KAAAhH,EACAyL,GAAAhN,KAAAuI,GAEA,OAAAyE,IAGAC,IAAAF,SAAAF,IACAK,IAAAH,SAAAD,IAEA,IAAAhC,GAAAqC,aAAAF,IAAAC,KACA,OAAA,EAGA,IAAA,IADA1L,EAAAoI,GAAAwD,GACA7E,EAAA,EAAAE,IAAAwE,IAAAlP,OAAAwK,EAAAE,IAAAF,IAIA,GAHA/G,EAAAyL,IAAA1E,GACAqB,GAAAiD,GAAArL,GACA4L,GAAAN,GAAAtL,GACA,IAAAsJ,GAAAU,QAAA5B,GAAAwD,IACA,OAAA,EAGA,OAAA,GAEAjQ,IAAA6D,OAAA,uBACA2H,OAAA,sBACA0E,UACA,mBAEApM,QAAA,SAAAqM,IAAAC,MACA,IAAAC,WAAAF,IAAA3N,UAEA,OADA+I,OAAA6E,KAAA,GACApQ,IAAAwL,OAAA2E,KAuBAzE,YAAA,SAAAC,QACA,IAAAhK,GAAAC,KACA+J,OAAAA,WACAhK,GAAAoK,MAAAvH,IAAAmH,OAAAI,OAAAJ,OAAAI,SACApK,GAAAwL,UAGAxL,GAAAmN,OAAA,EAEAnN,GAAAoN,UAAA,EAEAzM,IAAAqJ,OAAA2E,UAAA3E,OAAA2E,QAAA3O,GAAAoK,MAAAnL,SACAe,GAAAoN,YACApN,GAAAmN,MAAAnN,GAAAoK,MAAAJ,OAAA2E,UAGA5B,SAAAtC,KAAAzK,GAAAgK,OAAAwB,QAEAxL,GAAAsN,aAAAX,OAAA3M,GAAAwL,OAAAxB,OAAA2C,QACA3M,GAAAqN,WAAArD,OAAA2C,OAEA3M,GAAAsN,aAAArB,KAAAjM,GAAAsN,aAAAtD,OAAAiC,MACAjM,GAAAmM,SAAAnC,OAAAiC,KAGAjM,GAAAuK,UAMA,OAMA,SAOA,OAOA,SAQA,SAMA,SAaA,WAEAmE,WAAA3E,YAAAU,KAAAzK,GAAAgK,SAYA6D,OAAA,SAAArC,QACA,IAAAxL,GAAAC,KAEA,IAAA,IAAAD,GAAAsK,QACAtK,GAAAkK,UAAAhJ,MACA2E,OAAA,SACAwF,OAAAG,aAGA,CACA,IAAAoD,GAAA7B,SAAAtC,KAAAzK,GAAAwL,QACAoD,KACA5O,GAAAsL,UAAA,SAAAtL,GAAA4O,IACA5O,GAAAsL,UAAA,UAAA,SAAAtL,GAAA4O,KAGA,OAAA5O,IAWAuL,OAAA,SAAAW,SACA,IAAAlM,GAAAC,KACA,IAAA,IAAAD,GAAAsK,QACAtK,GAAAkK,UAAAhJ,MACAqK,OAAA,SACAC,OAAAU,cAGA,CACA,IAAA0C,GAAArB,SAAA9C,KAAAzK,GAAAkM,SACA0C,KACA5O,GAAAsL,UAAA,SAAAtL,GAAA4O,IACA5O,GAAAsL,UAAA,UAAA,SAAAtL,GAAA4O,KAGA,OAAA5O,IAWA6O,cAAA,SAAAhQ,OACA,IAAAmB,GAAAC,KACA,IAAA,IAAAD,GAAAsK,QAAA,CACAzL,MAAA8B,IAAA9B,QAAAA,OAAAA,MAQA,IAPA,IAKAiQ,GALAF,MACAnF,EAAA,EACAE,IAAA9G,IAAAhE,OAAAA,MAAAI,OAAA,EACA8P,IAAA/O,GAAAsN,aACApG,MAAA6H,IAAA9P,OAGAwK,EAAAE,IAAAF,KACAqF,GAAAjQ,MAAA4K,KACA,GAAAqF,GAAA5H,OACA0H,GAAA1N,KAAA6N,IAAAD,MAIAF,GAAArB,SAAA9C,KAAAzK,GAAA4O,OAEA5O,GAAAsL,UAAA,SAAAtL,GAAA4O,IACA5O,GAAAsL,UAAA,UAAA,SAAAtL,GAAA4O,KAGA,OAAA5O,IAcAgP,OAAA,SAAAxD,QACA,IAAAxL,GAAAC,MAEA,IAAAD,GAAAsK,SAEAtK,GAAAkK,UAAA4B,OAAA,EAAA9L,GAAAkK,UAAAjL,QAMA,IAFA,IAAAO,GAAAQ,GAAAwL,OACA7B,IAAAnK,GAAAP,OACA0K,OACAnK,GAAAmK,KAAAgE,iBAQA,OANA3N,GAAAmN,QACAnN,GAAAoN,aAEApN,GAAAwL,UACAxL,GAAAsN,gBAEAjP,IAAA4Q,QAAAzD,SAAA,GAAAA,OAAAvM,QAMA8N,SAAAtC,KAAAzK,GAAAwL,UAEAxL,GAAAsL,UAAA,SAAAtL,IACAA,GAAAsL,UAAA,UAAA,SAAAtL,KAGAA,KAXAA,GAAAsL,UAAA,SAAAtL,IACAA,GAAAsL,UAAA,UAAA,SAAAtL,IACAA,KAkBAkP,WAAA,SAAArQ,MAAAsQ,OACA,IAEAC,IADAL,IADA9O,KACAqN,aAIA,OADAzO,MAAA8B,IAAA9B,OAAAA,MAAA,GACA,GAAAA,OAAAkQ,IAAA9P,WAKAkQ,MAAAxO,IAAAwO,OAAAA,MAAAJ,IAAA9P,QACAmQ,IAAAvQ,MAAAsQ,OACAJ,IAAA9P,SACAmQ,IAAAL,IAAA9P,QAIA8P,IAAAhE,MAAAlM,MAAAuQ,OAQAnD,KAAA,SAAAtB,IAAA0B,KACA,IAAArM,GAAAC,KACAoP,KAAArP,GAAAmM,SAIA,OAAAkD,MAAAA,KAAA1E,MAAAA,KAAA0E,KAAAhD,MAAAA,IACArM,IAEAA,GAAAmM,UACAxB,IAAAA,IACA0B,IAAAA,KAEAJ,KAAAxB,KAAAzK,GAAAA,GAAAsN,aAAAtN,GAAAmM,UACAnM,GAAAsL,UAAA,OAAAtL,IACAA,GAAAsL,UAAA,UAAA,OAAAtL,IACAA,KAcAsP,KAAA,SAAA3E,IAAAC,OACA,IAEA2E,OADAR,IADA9O,KACAqN,aAEArM,OA+BA,OA7BAP,IAAAiK,KACA4E,OAAA,SAAArQ,GACA,OAAA0L,QAAA1L,EAAAiI,IAAAwD,MAGA7H,IAAA6H,KACA4E,OAAA,SAAArQ,GACA,IAAA+B,KAAA,EACA,IAAA,IAAAwI,KAAAkB,IAEA,IADAC,MAAA1L,EAAAiI,IAAAsC,MACAkB,IAAAlB,GAAA,CACAxI,KAAA,EACA,MAGA,OAAAA,KAGAW,IAAA+I,OACA4E,OAAA5E,KAGA/I,IAAA2N,SACAlR,IAAAwO,KAAAkC,IAAA,SAAA7P,IACA,IAAAqQ,OAAArQ,IACA+B,IAAAC,KAAAhC,KAIA+B,KAcA0L,OAAA,SAAAU,YACA,IAAArN,GAAAC,KAGA,OAAA6N,cAAA9N,GAAAqN,WAAAA,YACArN,IAGAA,GAAAqN,WAAAA,WAEArN,GAAAsN,aAAAX,OAAA3M,GAAAwL,OAAAxL,GAAAqN,YAEArN,GAAAsN,aAAArB,KAAAjM,GAAAsN,aAAAtN,GAAAmM,UAGAnM,GAAAsL,UAAA,SAAAtL,IACAA,GAAAsL,UAAA,UAAA,SAAAtL,IAEAA,KAQAwP,MAAA,SAAA3Q,OACA,IACAkQ,IADA9O,KACAqN,aAEA,MADAzO,MAAA8B,IAAA9B,OAAAA,MAAA,GACA,GAKA,OAAAkQ,IAAAlQ,QASA4Q,QAAA,SAAAC,UACA,IAAA1P,GAAAC,KACA,OAAAD,GAAAoN,SAAApN,GAAAoN,SAAAsC,eAAAxK,GAKAgC,MAAA,WACA,OAAAjH,KAAAqN,aAAArO,QAQAyM,UAAA,WACA,IAAA1L,GAAAC,KACA,IAAAD,GAAAsK,QAAA,CACAtK,GAAAkK,aAGA,IADA,IAAAP,IAAA3J,GAAAwL,OAAAvM,OACA0K,OACA3J,GAAAwL,OAAA7B,KAAA+B,YAIA,OADA1L,GAAAsK,SAAA,EACAtK,IAMA2L,WAAA,WACA,IAAA3L,GAAAC,YACAD,GAAAkK,UAEA,IADA,IAAAP,IAAA3J,GAAAwL,OAAAvM,OACA0K,OACA3J,GAAAwL,OAAA7B,KAAAgC,aAGA,OADA3L,GAAAsK,SAAA,EACAtK,IAQA2P,WAAA,WACA,IAAA3P,GAAAC,KACA,IAAA,IAAAD,GAAAsK,QAAA,CAQA,IAPA,IAGAlL,EAAAqL,KAHAmF,GAAA5P,GAAAkK,UAAA4B,OAAA,EAAA9L,GAAAkK,UAAAjL,QACAwK,EAAA,EACAE,IAAAiG,GAAA3Q,OACAsJ,GAAA,EAGAoB,IAAA3J,GAAAwL,OAAAvM,OACA0K,OACA,GAAA3J,GAAAwL,OAAA7B,KAAAiC,WACArD,GAAA,GAUA,IAPAA,IAEAvI,GAAAsN,aAAAX,OAAA3M,GAAAwL,OAAAxL,GAAAqN,YAEArN,GAAAsN,aAAArB,KAAAjM,GAAAsN,aAAAtN,GAAAmM,WAGA1C,EAAAE,IAAAF,IACArK,EAAAwQ,GAAAnG,GACAgB,KAAAmD,aAAAxO,EAAAyG,QACAjE,IAAA6I,QAAA,IAAAA,KAAA9B,MAAA3I,GAAAZ,EAAAiM,UACA9C,GAAA,GAOA,OAHA,IAAAA,GACAvI,GAAAsL,UAAA,UAAA,SAAAtL,IAEAuI,EAEA,OAAA,GAQAwD,QAAA,WACA,IAAA/L,GAAAC,KACAD,GAAA2P,aACA3P,GAAA2L,cAKAkE,UAAA,WACA,OAAA,IAAA5P,KAAAqK,SAQA2C,aAAA5O,IAAAyR,gBC7wBAzR,IAAA6D,OAAA,4BACA2H,OAAA,sBACA0E,UACA,mBAEApM,QAAA,SAAAqM,IAAAC,MACAD,IAAA3N,UAAA,IACAkP,YAAAtB,KAAA,GACA,OAAApQ,IAAAwL,OAAA2E,KASAvB,aAAA,SAAArC,OACA,IAAA5K,GAAAC,KACA,GAAA4C,IAAA+H,OAAA,CACA,IAAAoF,GAAAhQ,GAAAoK,MACAX,EAAAmB,MAAA3L,OACA0K,IAAAqG,GAAA/Q,OACAwD,KAGA,IADAkH,IAAAF,EAAAE,IAAAF,EAAAE,IACAF,EAAA,EAAAA,EAAAE,IAAAF,IACAhH,EAAAuN,GAAAvG,IAAAmB,MAAAnB,GAGA,OAAA,IAAAsG,aACA1F,WAAA2F,GACApF,MAAAnI,IAGA,OAAA,QC7BA,WAEA,IAAAwN,QACAA,KAAA/O,KAAA,gCACA+O,KAAA/O,KAAA,qCACA+O,KAAA/O,KAAA,oFACA+O,KAAA/O,KAAA,UACA+O,KAAA/O,KAAA,wCACA+O,KAAAA,KAAA7O,KAAA,IAEA/C,IAAA6D,OAAA,qBACA2H,OAAA,aACAqG,KAAA,EACA/N,QAAA,SAAAqM,IAAAC,MACA,IAAAjE,WAAAgE,IAAA3N,UACA,OAAAxC,IAAAwL,OAAA2E,KAOA2B,SAAA,SAAAC,OACA,IAAApQ,GAAAC,KACAD,GAAAqQ,SACArQ,GAAAqQ,SAAAC,OAAAF,OAGApQ,GAAAoQ,MAAAA,OAQAG,cAAA,SAAAC,MACA,IAAAxQ,GAAAC,KACAD,GAAAyQ,UACAzQ,GAAAyQ,UAAAH,OAAAE,MAGAxQ,GAAA0Q,OAAAF,MAOAG,OAAA,WACA1Q,KAAA2Q,SAAA,WAMAC,QAAA,WACA5Q,KAAA2Q,SAAA,aAMAE,OAAA,WACA7Q,KAAA2Q,SAAA,YAQAA,SAAA,SAAAG,OACA,IAAA/Q,GAAAC,KACA,WAAA8Q,OAAA,aAAAA,QACAA,MAAA,WAEA/Q,GAAA+Q,QAAAA,QAGA,YAAA/Q,GAAA+Q,OACA/Q,GAAAgR,GAAAC,YAAA,cAAAjR,GAAA+Q,OAEA,YAAAA,OACA/Q,GAAAgR,GAAAE,SAAA,cAAAH,OAEA/Q,GAAA+Q,MAAAA,QAMAI,cAAA,WACA,IAAAnR,GAAAC,KACAiQ,IAAAlQ,GAAAkQ,IACArN,IAAAqN,KACAA,IAAAkB,QAAA,cAGAlB,IADAxP,IAAAwP,MACA,aAAAA,KAGA,aAEAlQ,GAAAkQ,IAAAA,IACA1F,WAAA2G,cAAA1G,KAAAzK,KAMAqR,SAAA,WACA,IAAAC,IAAAjS,EAAAW,GAAAC,KACAuK,WAAA6G,SAAA5G,KAAAzK,IACAA,GAAAgR,GAAAV,OAAAL,OAEA,IAAAjQ,GAAAuR,cACAvR,GAAAgR,GAAAQ,aAAA,YAAA,aAGA,aAAAxR,GAAA+Q,MACA/Q,GAAAgR,GAAAE,SAAA,uBAEA,WAAAlR,GAAA+Q,MACA/Q,GAAAgR,GAAAE,SAAA,qBAGAlR,GAAA+Q,MAAA,UAGAO,IAAAtR,GAAAgR,GAAAM,IAAAG,WAAAC,WAAA,GAAAD,WACAzR,GAAAyQ,UAAApS,IAAA8I,IAAAmK,KAEAA,IAAAtR,GAAAgR,GAAAM,IAAAI,WAAA,GACA1R,GAAAqQ,SAAAhS,IAAA8I,IAAAmK,KAGAjS,EAAAW,GAAA0Q,cACA1Q,GAAA0Q,OACAhQ,IAAArB,IACAW,GAAAuQ,cAAAlR,GAGAA,EAAAW,GAAAoQ,aACApQ,GAAAoQ,MACA1P,IAAArB,IACAW,GAAAmQ,SAAA9Q,GAGAW,GAAAgR,GAAAjI,GAAA,QAAA/I,GAAA2R,QAAA3R,KAKA2R,QAAA,WACA,IAAA3R,GAAAC,MACA,IAAAD,GAAAuR,cAAA,YAAAvR,GAAA+Q,OAAAnP,IAAA5B,GAAA0F,UACA1F,GAAA0F,QAAA+E,KAAAzK,GAAA+F,OAAA/F,GAAAA,aC3JA3B,IAAA6D,OAAA,iBACA2H,OAAA,aACAqG,KAAA,EACA3B,UACA,qBAEApM,QAAA,SAAAqM,IAAAC,MACA,IAAAjE,WAAAgE,IAAA3N,UACA+Q,SAAAnD,KAAA,GACA,OAAApQ,IAAAwL,OAAA2E,KAKAqD,eAAA,SAAAtS,IACA,IAAAS,GAAAC,KACA,GAAAU,IAAApB,KAAAS,GAAA8R,cAAAvS,GAAA,CAIA,IADA,IAAAwS,GAAAtI,EAAA,EAAAE,IAAA9G,IAAA7C,GAAAgS,WAAAhS,GAAAgS,UAAA/S,OAAA,EACAwK,EAAAE,IAAAF,IACAsI,GAAA/R,GAAAgS,UAAAvI,GACAA,EAAAlK,GAEAwS,GAAAjB,SAEArH,IAAAlK,GAEAwS,GAAApB,SAIAoB,GAAAlB,UAGA7Q,GAAA8R,YAAAvS,KAMA4R,cAAA,WACA,IAAAnR,GAAAC,KACAiQ,IAAAlQ,GAAAkQ,IACArN,IAAAqN,KACAA,IAAAkB,QAAA,UAGAlB,IADAxP,IAAAwP,MACA,SAAAA,KAGA,SAEAlQ,GAAAkQ,IAAAA,IACA1F,WAAA2G,cAAA1G,KAAAzK,IACAA,GAAAuK,UAMA,cAOA8G,SAAA,WACA,IAAArR,GAAAC,KACAuK,WAAA6G,SAAA5G,KAAAzK,IAMA,IALA,IAGA+R,GAHAE,IAAAjS,GAAAkS,UACAzI,EAAA,EACAE,IAAA9G,IAAAoP,KAAAA,IAAAhT,OAAA,EAEAkT,QACA1I,EAAAE,IAAAF,IACAsI,GAAA1T,IAAAsK,SAAAsJ,IAAAxI,IACAzJ,GAAAoS,YACAL,GAAAM,MAAArS,GAAAoS,WAEA1R,IAAAqR,GAAAO,YAIAP,GAAArB,OAAAqB,GAAAO,WAHAP,GAAArB,OAAAjH,EAAA,EAAA,UAKAsI,GAAAO,YACAP,GAAA,IAAAH,SAAAG,KACAQ,OAAAvS,GAAAgR,IACAmB,KAAAjR,KAAA6Q,WAEA/R,GAAAkS,UACAlS,GAAAgS,UAAAG,KAEA,IAAA5S,GAAAoB,IAAAX,GAAA8R,aAAA9R,GAAA8R,YAAA,SACA9R,GAAA8R,YACA9R,GAAA6R,eAAAtS,UC3GA,WAEA,IAAAiT,eAAA,SAAAxN,KACA,IAAAhF,GAAAC,KACA+E,KACA3G,IAAAsK,MAAA3I,GAAAgF,KAEAhF,GAAAyS,QAAA,GAEAD,eAAA3R,WAKA6R,UAAA,SAAAC,MACA1S,KACA0S,KAAAA,KACAA,KAAApI,UAMA,eAOAqI,gBAAA,WACA,OAAA3S,KAAA4S,UAKAC,SAAA,WACA,IAAA9S,GAAAC,KACA,OAAAD,GAAA6S,SACA,EAEAhQ,IAAA7C,GAAA+S,YAAA/S,GAAA+S,WAAA9T,OAAA,GAMA+T,eAAA,WACA/S,KAAAgT,iBAMAA,cAAA,SAAAC,MACA,IAAAlT,GAAAC,KACAD,GAAA6S,WAGA7S,GAAA+S,WAAAG,KACAlT,GAAAsL,UAAA,aAAAtL,GAAAA,GAAA2S,QAMAQ,cAAA,WACA,IAAAnT,GAAAC,KACA,OAAAD,GAAA6S,YAGA7S,GAAA+S,YAMAK,YAAA,WACA,IAAApT,GAAAC,KACA,IAAAD,GAAA6S,SAGA,OAAAhQ,IAAA7C,GAAA+S,aAAA/S,GAAA+S,WAAA9T,OAAA,EACAe,GAAA+S,WAAA/S,GAAA+S,WAAA9T,OAAA,QAAAiG,GAMAmO,aAAAhV,IAAAyR,QAKAwD,gBAAAjV,IAAAyR,QAUAyD,cAAAlV,IAAAyR,QAOA0D,iBAAAnV,IAAAyR,QAIAxE,UAAA,WACA,IAAAqH,KAAA1S,KAAA0S,KACAA,MACAA,KAAArH,UAAA3C,MAAAgK,KAAAc,aAIApV,IAAA6D,OAAA,2BACAC,QAAA,WACA,OAAAqQ,qBC3HAnU,IAAA6D,OAAA,8BACA2H,OAAA,0BACA1H,QAAA,SAAAqM,KACA,IAAAE,WAAAF,IAAA3N,UAGA,OAAAxC,IAAAwL,OAAA2E,KAOAkE,UAAA,SAAAC,MACA,IAAA3S,GAAAC,KACAyO,WAAAgE,UAAAjI,KAAAzK,GAAA2S,MACA3S,GAAA4S,mBAAAD,MAAAA,KAAA3B,IACA2B,KAAA3B,GAAAE,SAAA,oBAEAlR,GAAA0T,SAKAL,aAAA,SAAAM,KACA,IAAA3T,GAAAC,KACAD,GAAA4S,mBACAe,IAAA5K,GAAA,QAAA/I,GAAA4T,WAAA5T,KAMAsT,gBAAA,SAAAK,KACA,IAAA3T,GAAAC,KACA0T,IAAA1K,GAAA,QAAAjJ,GAAA4T,WAAA5T,KAKA4T,WAAA,SAAAC,MAAAF,KACA,IAAA3T,GAAAC,KACA0T,IAAAG,QACAH,IAAAI,UACA/T,GAAAgU,iBAAAL,KACA3T,GAAAiU,WAAAN,OAGA3T,GAAAkU,cAAAP,KACA3T,GAAAmU,WAAAR,OAMAO,cAAA,SAAAP,KACA,IAAA3T,GAAAC,KACAf,EAAAyU,IAAAS,OACA,GAAApU,GAAAqU,OAWArU,GAAAsU,aACAtU,GAAAiU,WAAAjU,GAAAsU,aAEAtU,GAAAiT,eAAA/T,IACAc,GAAAsU,YAAAX,QAfA,CACA,IAAAY,GAAAvU,GAAAmT,gBACAoB,GACAA,GAAArT,KAAAhC,GAGAqV,IAAArV,GAEAc,GAAAiT,cAAAsB,MAaAP,iBAAA,SAAAL,KACA,IAAA3T,GAAAC,KACA,GAAAD,GAAAqU,OAEArU,GAAAiT,gBACAjT,GAAAsU,iBAAApP,MAEA,CAKA,IAAA,IAHAqP,GAAAvU,GAAAmT,gBACAjU,EAAAyU,IAAAS,OAEA3K,EAAA,EAAAE,KADA4K,GAAAA,GAAAxJ,MAAA,IACA9L,OAAAwK,EAAAE,IAAAF,IACA,GAAA8K,GAAA9K,KAAAvK,EAAA,CACAqV,GAAAzI,OAAArC,EAAA,GACA,MAGAzJ,GAAAiT,cAAAsB,MAMAJ,WAAA,SAAAR,KACAA,IAAA3C,GAAAE,SAAA,mBACAyC,IAAAI,UAAA,GAKAE,WAAA,SAAAN,KACAA,IAAA3C,GAAAC,YAAA,mBACA0C,IAAAI,UAAA,QCjHA,WACA,IAAA9D,KAAA,qBAEA5R,IAAA6D,OAAA,mCACA2H,OAAA,6BACA1H,QAAA,SAAAqM,KACA,IAAAE,WAAAF,IAAA3N,UACA,OAAAxC,IAAAwL,OAAA2E,KAIAyE,cAAA,SAAAsB,IACA,IAAAvU,GAAAC,KACAiH,MAAArE,IAAA0R,IAAAA,GAAAtV,OAAA,EACAuV,SAAAxU,GAAA2S,KAAA8B,cAAA3B,WAEA,GADApE,WAAAuE,cAAAxI,KAAAzK,GAAAuU,IACA,IAAArN,MACAlH,GAAA0U,UACA1U,GAAA2U,QAAA1D,YAAAjR,GAAA0U,SACA1U,GAAA0U,aAAAxP,QAGA,GAAAsP,WAAAtN,MAAA,CACAgJ,IAAA,0BACAlQ,GAAA0U,UAAAxE,MACAlQ,GAAA0U,SACA1U,GAAA2U,QAAA1D,YAAAjR,GAAA0U,SAEA1U,GAAA2U,QAAAzD,SAAAhB,KACAlQ,GAAA0U,QAAAxE,SAGA,CACA,IAAAA,IAAA,0BACAlQ,GAAA0U,UAAAxE,MACAlQ,GAAA0U,SACA1U,GAAA2U,QAAA1D,YAAAjR,GAAA0U,SAEA1U,GAAA2U,QAAAzD,SAAAhB,KACAlQ,GAAA0U,QAAAxE,OAOA0E,eAAA,WACA,OAAA3U,KAAA4U,aAAA,GASAC,WAAA,SAAAC,IAAAC,SAAA7K,MACA,IAAAnK,GAAAC,KACA8U,IAAA7D,SAAA,uBACA,IAAAlR,GAAAqU,SACAU,IAAAzE,OAAAL,MACA8E,IAAAhM,GAAA,QAAA/I,GAAAiV,eAAAjV,KAGAW,IAAAX,GAAAqS,SACArS,GAAAqS,MAAArS,GAAAqS,MAAA,MAEA3R,IAAAV,GAAAqS,QACA0C,IAAAG,SAAAlV,GAAAqS,OAEArS,GAAA6U,YAAAE,IAAAI,WACAnV,GAAA2U,QAAAI,KAKAE,eAAA,SAAA3M,IACA,IAEApJ,EAFAc,GAAAC,KACAyT,KAAA1T,GAAA2S,KAAA8B,cAAAW,UACA3L,EAAA,EAAAE,IAAA+J,KAAAzU,OACA,GAAA,4BAAAe,GAAA0U,QAAA,CAEA,KAAAjL,EAAAE,IAAAF,IACAzJ,GAAAiU,WAAAP,KAAAjK,IAGAzJ,GAAAgT,qBAEA,CAGA,IADA,IAAAuB,MACA9K,EAAAE,IAAAF,IACAvK,EAAAwU,KAAAjK,GACAzJ,GAAAmU,WAAAjV,GACAqV,GAAArT,KAAAhC,EAAAkV,QAEApU,GAAAiT,cAAAsB,MAeAc,WAAA,SAAAN,IAAAX,OAAAT,IAAA2B,SAAAN,SAAA7K,MACA,IAAAnK,GAAAC,KACA8U,IAAA7D,SAAA,sBACA6D,IAAAzE,OAAAL,MACAvP,IAAAV,GAAAqS,QACA0C,IAAAG,SAAAlV,GAAAqS,gBCtHA,WACA,IAAAkD,iBACAC,OAAA3U,UAAAM,SAEAoU,cAAArU,KAAA,0DACAqU,cAAArU,KAAA,8DACAqU,cAAAA,cAAAnU,KAAA,IAEA,IAAAqU,OAAA,SAAAzL,QACA,IAAAhK,GAAAC,KACA+J,QACA3L,IAAAsK,MAAA3I,GAAAgK,QAGAhK,GAAAqS,MAAA1R,IAAAX,GAAAqS,OAAArS,GAAAqS,MAAA,KAAArS,GAAAqS,OAEAoD,OAAA5U,WA2CA+T,eAAA,WACA,OAAA3U,KAAA4U,aAAA,GASAC,WAAA,SAAAC,IAAAC,SAAA7K,MACA,IAAAnK,GAAAC,MAEA,IAAAD,GAAA0V,UACA1V,GAAA2V,QAAAZ,IAAAa,aACA1F,IAAA,iBACA2F,KAAAN,gBAEAR,IAAAhM,GAAA,QAAA,WACA/I,GAAA8V,YAAA3L,QAEAnK,GAAA+V,gBAAA5L,KAAAgC,WAGA4I,IAAA7D,SAAA,iBAIAlR,GAAAgW,QAAAjB,IAAAa,aACAK,IAAA,SACAJ,KAAA7V,GAAAwQ,MAAA,KAEA9P,IAAAV,GAAAqS,QACA0C,IAAAmB,SAAA,QAAAlW,GAAAqS,OAGArS,GAAA6U,YAAAE,IAAAI,WAEAhL,KAAApB,GAAA,UAAA/I,GAAAmW,cAAAnW,KAaAqV,WAAA,SAAAN,IAAAX,OAAAT,IAAA2B,SAAAN,SAAA7K,MACA,IAGA0L,KAHA7V,GAAAC,KACAmW,GAAApW,GAAAqW,UACAhX,EAAA+W,GAAAhC,OAAAjN,IAAAiP,SAAAlR,EA6BA,OAxBA2Q,KAFAjU,IAAA5B,GAAAuS,SACAsD,KAAA7V,GAAAuS,OAAA9H,KAAAzK,GAAA+F,OAAA7B,OAAA7E,EAAA+U,OAAAkB,SAAAN,SAAA7K,QACA,GAGA9K,EAAAA,EAAA,GAAA,GAEA0V,IAAAzE,OAAAuF,OAEA,IAAA7V,GAAAsW,gBACAvB,IAAAvD,aAAA,QAAAqE,MAGAnV,IAAAV,GAAAqS,QACA0C,IAAAmB,SAAA,QAAAlW,GAAAqS,OAGArS,GAAAuW,eACAV,KAAA7V,GAAAuW,OAEAlE,MACA0C,IAAAmB,SAAAL,OAEA7V,GAAA6U,cACA7U,GAAA6U,YAAAE,IAAAI,YAEA9V,GAEA8W,cAAA,SAAA/P,KAAA+D,MACAlK,KAAA8V,gBAAA5L,KAAAgC,WAKA4J,gBAAA,SAAA9J,MACA,IAAAjM,GAAAC,KACAmW,GAAApW,GAAAqW,UACAhK,IAAArM,GAAAwW,QACAC,MAAAxK,MAAAA,KAAAtB,IACA+L,KAAAzK,KAAAA,KAAAI,IAAA,MACArM,GAAA2V,UAIAS,KAAAK,KAEApK,KACArM,GAAA2V,QAAA1E,YAAA,SAAA5E,IAAA,mBAAA,kBAEArM,GAAAwW,SAAA,IAIAE,OAAArK,MACArM,GAAA2V,QAAA1E,YAAA,SAAA5E,IAAA,mBAAA,kBACArM,GAAA2V,QAAAzE,SAAA,SAAAwF,KAAA,mBAAA,mBAEA1W,GAAAwW,QAAAE,QAMAZ,YAAA,SAAA3L,MACA,IAAAnK,GAAAC,KACAmW,GAAApW,GAAAqW,UACAhK,IAAArM,GAAAwW,QACAJ,IACAjM,KAAA8B,KAAAmK,GAAA,QAAA/J,IAAA,OAAA,SAIAhO,IAAA6D,OAAA,mBACAC,QAAA,WACA,OAAAsT,aC7LA,WAIA,IAAAA,OAKAkB,YAAA,SAAAC,SACA,IAAA5W,GAAAC,KACA,GAAA4C,IAAA+T,SAAA,CAEA,IADA,IAAArO,EAAAkB,EAAA,EAAAE,IAAAiN,QAAA3X,OAAA4X,QACApN,EAAAE,IAAAF,IACAlB,EAAAqO,QAAAnN,GACA3G,IAAAyF,KACA3G,IAAA2G,EAAAuM,cACAvM,EAAA,IAAAkN,OAAAlN,IAEAsO,KAAA3V,KAAAqH,IAGAvI,GAAA4W,QAAAC,UAGA7W,GAAA4W,YAGAD,YAAA9V,WAIAiS,SAAA,WACA,OAAA7S,KAAA2W,QAAA3X,QAOA6X,UAAA,SAAA9B,UACA,OAAA/U,KAAA2W,QAAA5B,YAIA3W,IAAA6D,OAAA,wBACAqM,UAAA,mBACApM,QAAA,SAAAqM,IAAAC,MAEA,OADAgH,OAAAhH,KAAA,GACAkI,kBCjDA,WAIA,IAAAI,GAAA1Y,IAAAC,KAAA0Y,UAEAC,kBAAA,2CACAA,iBAAA/V,KAAA,2BACA+V,iBAAAA,iBAAA7V,KAAA,IAMA,IAAA+U,cAAA,WACA,IAAAnW,GAAAC,KACAiX,KAAAlX,GAAAkX,KACAvE,KAAA3S,GAAA2S,KACAA,KAAAwE,oBAAAnE,iBACAkE,KAAAE,WAAAzE,MACAuE,KAAAG,WAAA1E,OAKA2E,SAAA,SAAAtS,KACA,IAAAhF,GAAAC,KACA6C,IAAAkC,MACA3G,IAAAsK,MAAA3I,GAAAgF,MAGAsS,SAAAzW,WAKA0R,OAAA,SAAAI,MACA,IAEA3B,GAAAvO,EAFAzC,GAAAC,KACA8U,IAAApC,KAAA4E,MAAA5E,KAAA3B,IAIA,IAAA2B,KAAA6E,YACAxG,GAAA+D,IAAAa,aACA1F,IAAA,cACA2F,KAAA,mCAEAlD,KAAAgC,QAAAtW,IAAA8I,IAAA6J,GAAAM,IAAAG,YACAzR,GAAA8U,WAAAnC,MACAA,KAAA8E,SAAAzG,IAGA+D,IAAA7D,SAAA,mBAGAF,GAAA+D,IAAAa,aACA1F,IAAA,cACA2F,KAAA,uCAEAlD,KAAA+E,QAAArZ,IAAA8I,IAAA6J,GAAAM,IAAAG,YACAzR,GAAAoX,WAAAzE,OAGAlQ,EAAAkQ,KAAAgF,UAEA7U,IAAAL,KACAb,IAAAa,EAAA8P,UAEA9P,GAAA,GAEAA,GAAAb,IAAAa,EAAA8P,UACA9P,GAAA,IAIAA,GACAuO,GAAA+D,IAAAa,aACA1F,IAAA,cACA2F,KAAA,uCAEAlD,KAAAiF,QAAAvZ,IAAA8I,IAAA6J,GAAAM,IAAAG,YACAhP,EAAA8P,OAAAI,KAAAiF,SACAjF,KAAAgF,OAAAlV,GAGAsS,IAAA7D,SAAA,iBAGA,IAAA2G,GAAAlF,KAAAwE,oBACAU,IACAjW,IAAAiW,GAAAnF,YACAmF,GAAAnF,UAAAC,MAGAA,KAAAmF,SACA/C,IAAA7D,SAAA,kBAIAyB,KAAA8E,UACA9E,KAAA+E,QAAA3O,GAAA,SAAA,WACA4J,KAAA8E,SAAAnG,IAAAyG,WAAApF,KAAA+E,QAAApG,IAAAyG,aAGA/X,GAAAgY,cAAArF,MAEA3S,GAAAqX,WAAA1E,MAAA,IAKAqF,cAAA,SAAArF,MACAA,KAAAxI,MAAAvI,IAAA+Q,KAAAxI,KAAApB,KACA4J,KAAAxI,KAAApB,GAAA,UAAAoN,eACAe,KAAAjX,KACA0S,KAAAA,QAOAsF,iBAAA,SAAAtF,MACAA,KAAAxI,MAAAvI,IAAA+Q,KAAAxI,KAAAlB,KACA0J,KAAAxI,KAAAlB,GAAA,UAAAkN,eACAe,KAAAjX,KACA0S,KAAAA,QAOA0E,WAAA,SAAA1E,KAAAuF,YAQA,IAPA,IAAAC,GAAAxF,KAAAyF,iBACA3O,EAAA,EAAAE,IAAAwO,GAAArF,WACAuF,GAAA1F,KAAA+E,QAAAY,iBACAC,GAAA5F,KAAA+E,QAAAvC,WACAqD,GAAA7F,KAAA8B,cACAgE,EAAA,EAEAhP,EAAAE,IAAAF,IAEAgP,GADAN,GAAArB,UAAArN,GACAmL,iBAGA4D,GAAAE,gBAAA/F,KAAA+E,QAAAiB,cACAJ,IAAAF,IAGAI,EAAAF,GAAAE,EAAAF,GAAAE,EAGAD,GAAAI,YAAAH,GAEAP,YACAvF,KAAAgC,QAAAO,SAAAuD,EAAAJ,KAQAvD,WAAA,SAAAnC,MACA,IAAAkG,GAAAV,GAAAW,GAAAC,GAAAC,MAAAjE,IAAApC,KAAAgC,QACA,GAAAI,IAAA,CAGAA,IAAAzE,OAAA2G,kBACA4B,GAAA9D,IAAAzD,IAAAG,WAAAA,WAEA,IAAAlJ,EAAAkB,EAAA,EAAAE,KADAwO,GAAAxF,KAAAyF,kBACAtF,WAEA,IADAgG,GAAA/B,GAAAkC,WAAAhD,IAAA,KAAAiD,WAAAL,KACApP,EAAAE,IAAAF,IACAlB,EAAA4P,GAAArB,UAAArN,GACAsP,GAAAhC,GAAAkC,WAAAhD,IAAA,KAAAiD,WAAAJ,KACAE,MAAA3a,IAAA8I,IAAA4P,GAAAkC,WAAAhD,IAAA,MAAAiD,WAAAH,GAAA7I,IAAA,iBACA3H,EAAAuM,WAAAkE,MAAAvP,EAAAkJ,KAAAxI,QAOAiN,WAAA,SAAAzE,MACA,IACAoC,IAAApC,KAAA+E,QACAc,GAAA7F,KAAA8B,cACAtK,KAAAwI,KAAAxI,KACAyE,GAAAzE,MAAAvI,IAAAuI,KAAA+E,YAAA/E,KAAA+E,gBACAsJ,GAAAW,WAAApE,IAAAnG,MAMAvQ,IAAA6D,OAAA,qBACAC,QAAA,WACA,OAAAmV,eCxMA,WAEA,IAAAP,GAAA1Y,IAAAC,KAAA0Y,UACAC,kBAAA,2CACAA,iBAAA/V,KAAA,2BACA+V,iBAAAA,iBAAA7V,KAAA,IAEA,IAAAgY,IAAA,SAAAhF,OAAAkB,SAAA3C,MACA,IAAA3S,GAAAC,KACAD,GAAAoU,OAAAA,OACApU,GAAAsV,SAAAA,SACAtV,GAAA2S,KAAAA,KACA3S,GAAAqZ,SACArZ,GAAAsZ,YAEAF,IAAAvY,WAQAyI,YAAA,SAAAiQ,UAAA7T,QAAAK,OACA,GAAAwT,WAAA3X,IAAA8D,SAAA,CAGA,IAAA1F,GAAAC,KACAuZ,GAAAxZ,GAAAsZ,OAAAC,WAEAC,KACAA,GAAA,IAAAnb,IAAAC,KAAA8J,WACApI,GAAAsZ,OAAAC,WAAAC,GAEAxZ,GAAAyZ,UACAzZ,GAAAgR,GAAAjI,GAAAwQ,UAAAvZ,GAAA0Z,QAAA1Z,KAIAwZ,GAAAlQ,YAAA5D,QAAAK,SAQAwD,eAAA,SAAAgQ,UAAA7T,QAAAK,OACA,GAAAwT,WAAA3X,IAAA8D,SAAA,CAGA,IACA8T,GADAvZ,KACAqZ,OAAAC,WACAC,IACAA,GAAAjQ,eAAA7D,QAAAK,SAMA4S,UAAA,WACA,IAAA3Y,GAAAC,KACA,OAAAD,GAAAgR,GACAhR,GAAAgR,GAAA2H,YAEA,GAKAzD,SAAA,SAAAuD,GACA,IAAAzY,GAAAC,KACAD,GAAAgR,IACAhR,GAAAgR,GAAAkE,SAAAuD,IAMA3E,MAAA,WACA,IAAA9T,GAAAC,KAIA,OAHAD,GAAA2Z,KACA3Z,GAAA2Z,GAAA,OAAA3Z,GAAAsV,UAEAtV,GAAA2Z,IAKApH,OAAA,SAAAwC,KACA,IAIApB,IAAAkF,GAAAC,GAAAC,GAAAC,MAJAhZ,GAAAC,KACAd,EAAAa,GAAA2S,KACAwF,GAAAhZ,EAAAiZ,iBACAP,GAAA1Y,EAAAgY,oBAEAjH,KAAA,cACA,IAAAlQ,GAAAyZ,SAAA,CAGAzZ,GAAAyZ,UAAA,EAEA7X,IAAAzC,EAAAya,eACAjG,IAAAxU,EAAAya,YAAA5Z,GAAAoU,OAAApU,GAAAsV,UACAzS,IAAA8Q,KACAzD,IAAAA,IAAAxH,OAAAiL,KAEAjT,IAAAiT,MACAzD,IAAAhP,KAAAyS,MAKAA,IAAAoB,IAAAa,aACA1F,IAAAA,IACA2F,KAAAoB,mBAEAjX,GAAAgR,GAAA2C,IACAkF,GAAAlF,IAAArC,IAAAG,WAAAA,WACAqH,GAAA/B,GAAAkC,WAAAhD,IAAA,KAAAiD,WAAAL,KAGA,IAFA,IAAAtQ,EAAAkB,EAAA,EAAAE,IAAAwO,GAAArF,WAEArJ,EAAAE,IAAAF,IACAsP,GAAAhC,GAAAkC,WAAAhD,IAAA,KAAAiD,WAAAJ,KACAE,MAAA3a,IAAA8I,IAAA4P,GAAAkC,WAAAhD,IAAA,MAAAiD,WAAAH,GAAA7I,IAAA,iBACAlQ,GAAAqZ,MAAAnY,MACA8P,GAAAgI,MACA1D,SAAAtV,GAAAsV,SACAN,SAAAvL,IAGAlB,GADAA,EAAA4P,GAAArB,UAAArN,IACA4L,WAAA2D,MAAAhZ,GAAAoU,OAAAT,IAAA3T,GAAAsV,SAAA7L,EAAAtK,EAAAgL,MACA0N,IACAA,GAAAtE,cAAAyF,MAAAzQ,EAAAvI,GAAAoU,OAAApU,GAAAsV,SAAA7L,GAIAoO,IACAA,GAAAxE,aAAArT,MAOAuL,OAAA,WACA,IAGA9B,EAAAE,IAHA3J,GAAAC,KACA4X,GAAA7X,GAAA2S,KAAAwE,oBACA0C,GAAA7Z,GAAAqZ,MAIA,GAAAxB,GAAA,CAEA,IAAApO,EAAA,EAAAE,IAAAkQ,GAAA5a,OAAAwK,EAAAE,IAAAF,IACAlB,EAAAsR,GAAApQ,GACAoO,GAAArE,iBAAAjL,EAAAyI,GAAAzI,EAAA+M,SAAA/M,EAAAyM,UAIA6C,GAAAvE,gBAAAtT,IAIA6Z,GAAA7Z,GAAAsZ,OACA,IAAA7P,KAAAoQ,GACAtR,EAAAsR,GAAApQ,GACAzJ,GAAAgR,GAAA/H,GAAAQ,EAAAzJ,GAAA0Z,QAAA1Z,IACAuI,EAAAc,UAGArJ,GAAAgR,GAAAzF,UAKAmO,QAAA,SAAApR,IACA,IAAAtI,GAAAC,KACAmG,KAAAkC,GAAAlC,KACAoT,GAAAxZ,GAAAsZ,OAAAlT,MACAoT,IACAA,GAAA5Q,KAAAN,GAAAtI,OAKA+I,GAAAqQ,IAAAvY,UAAAyI,YACA8P,IAAAvY,UAAAoI,GAAAmQ,IAAAvY,UAAA0I,eAEAlL,IAAA6D,OAAA,gBACAC,QAAA,WACA,OAAAiX,UC7LA,WACA,IAAApN,GAAA3N,IAAAC,KAAAC,YAEAF,IAAA6D,OAAA,qBACAqM,UAAA,gBACApM,QAAA,SAAAqM,IAAAC,MACA,IAAAqL,SAAArL,KAAA,GAEAsL,SAAA,SAAApH,MACA,IAAA3S,GAAAC,KACAD,GAAA2S,KAAAA,KACA3S,GAAA0T,SAmGA,OAjGAqG,SAAAlZ,WAIA6X,cAAA,WACA,IAAAsB,EAAAvQ,EAAAzJ,GAAAC,KACA,GAAA,EAAAD,GAAA8S,WACA,OAAA,EAEAkH,EAAA,EACA,IAAAvQ,KAAAzJ,GAAA0T,KAEAsG,GADAha,GAAA0T,KAAAjK,GACAkP,YAEA,OAAAqB,GAKAlH,SAAA,WACA,OAAA7S,KAAAiH,OAKAkO,QAAA,WACA,IAEA3L,EADAiK,KADAzT,KACAyT,KAEA9E,MACA,IAAAnF,KAAAiK,KACA9E,GAAA1N,KAAAwS,KAAAjK,IAQA,OALAmF,GAAA3C,KAAA,SAAAK,GAAAC,IAGA,OAFAP,GAAAtM,UAAA4M,GAAAgJ,UAAA,GACAtJ,GAAAtM,UAAA6M,GAAA+I,UAAA,KAGA1G,IAKAqL,UAAA,WACA,IAEAxQ,EAFAzJ,GAAAC,KACAyT,KAAA1T,GAAA0T,KAGA,IAAAjK,KAAAiK,KACAA,KAAAjK,GACA8B,SAEAvL,GAAA0T,QACA1T,GAAAkH,MAAA,GAOAiS,WAAA,SAAApE,IAAA7I,SACA,IACAhN,EADAc,GAAAC,KACAwJ,EAAA,EAAAE,IAAAuC,QAAAjN,QAAA,EAGA,IAFAe,GAAAia,YAEAxQ,EAAAE,IAAAF,IACAvK,EAAAc,GAAAka,UAAAnF,IAAA7I,QAAAzC,GAAAA,GACAzJ,GAAA0T,KAAAxU,EAAA4U,SAAA5U,EAEAc,GAAAkH,MAAAyC,KAKAiP,YAAA,SAAAH,GACA,IAEAhP,EADAmF,GADA3O,KACAyT,KAEA,IAAAjK,KAAAmF,GACAA,GAAAnF,GACAyL,SAAAuD,IAOAyB,UAAA,SAAAnF,IAAAX,OAAAkB,UACA,IACA3B,IAAA,IAAAmG,SAAA1F,OAAAkB,SADArV,KACA0S,MAGA,OADAgB,IAAApB,OAAAwC,KACApB,MAIAoG,eC5GA1b,IAAA6D,OAAA,sBACA2H,OAAA,aACA0E,UACA,oBACA,6BACA,uBACA,qBAEA2B,KAAA,EACA/N,QAAA,SAAAqM,IAAAC,MACA,IAAAC,WAAAF,IAAA3N,UACAsZ,UAAA1L,KAAA,GACA2L,cAAA3L,KAAA,GACA4L,cAAA5L,KAAA,GACA6L,cAAA7L,KAAA,GACA,OAAApQ,IAAAwL,OAAA2E,KAkCA+L,QAAA,WACA,IAAAva,GAAAC,KAIA,OAHAD,GAAAkX,OACAlX,GAAAkX,KAAA,IAAAiD,WAEAna,GAAAkX,MAKAC,kBAAA,WACA,OAAAlX,KAAAua,UAMArJ,cAAA,WACA,IAAAnR,GAAAC,KACAyO,WAAAyC,cAAA1G,KAAAzK,IACA,IAAAkQ,KAAA,UACAxP,IAAAV,GAAAkQ,KACAA,IAAAhP,KAAAlB,GAAAkQ,KAEArN,IAAA7C,GAAAkQ,OACAA,IAAAA,IAAAxH,OAAA1I,GAAAkQ,MAEAlQ,GAAAkQ,IAAAA,IACAlQ,GAAAoY,iBACApY,GAAAyU,cACAzU,GAAA6X,IAAA7X,GAAAwa,UACAxa,GAAAwa,SAAAxa,GAAAwa,UAAAxa,GAAA6X,GACA/U,IAAA9C,GAAAwa,UACA5Y,IAAA5B,GAAAwa,SAAAvH,iBACAjT,GAAAwa,SAAA,IAAAJ,cAAApa,GAAAwa,WAIAxa,GAAAwa,SAAA,IAAAJ,eAIApa,GAAAwa,SAAA,IAAAJ,eAAAvH,UAAA,KAMAuF,eAAA,WACA,IAAApY,GAAAC,KAIA,OAHAD,GAAAya,cACAza,GAAAya,YAAA,IAAAJ,cAAAra,GAAA4W,UAEA5W,GAAAya,aAKAhG,YAAA,WACA,IAAAzU,GAAAC,KAIA,OAHAD,GAAA0a,WACA1a,GAAA0a,SAAA,IAAAJ,cAAAta,KAEAA,GAAA0a,UAMArJ,SAAA,WACA,IAAArR,GAAAC,KACAyO,WAAA2C,SAAA5G,KAAAzK,IACAA,GAAAua,UACAhI,OAAAvS,UC3HA,WAEA,IAAA2a,OAAA,SAAA3V,KACA,IAAAhF,GAAAC,KACA6C,IAAAkC,MACA3G,IAAAsK,MAAA3I,GAAAgF,MAGA2V,OAAA9Z,WAOA+Z,UAAA,SAAA/b,OACA,IAAA4D,EAAAxC,KAAA4a,MAAAhc,OACA,OAAA4D,EAAAA,EAAAqY,SAAA5V,GAMA6V,aAAA,WACA,IAAA/a,GAAAC,KACA,OAAA4C,IAAA7C,GAAA6a,OAAA7a,GAAA6a,MAAA5b,OAAA,GAUA+b,OAAA,SAAAC,UACA,IAAAjb,GAAAC,KACA8U,IAAAkG,SAAAC,kBACA,IAAAlb,GAAAib,SAAA,CAIAjb,GAAAib,SAAAA,SACAjb,GAAA6a,SAEA7a,GAAAmb,aAAApG,KAIA,IAFA,IAAA8F,MAAAI,SAAAJ,MACApR,EAAA,EAAAE,IAAA9G,IAAAgY,OAAAA,MAAA5b,OAAA,EACAwK,EAAAE,IAAAF,IACAzJ,GAAAob,WAAAP,MAAApR,GAAAsL,IAAAtL,KAQA4R,SAAA,aASAC,WAAA,SAAAC,QASAC,WAAA,SAAA3c,OACA,IAAAmB,GAAAC,KACA8R,GAAA/R,GAAA4a,UAAA/b,OACA,QAAAkT,KAEA/R,GAAA6a,MAAA/O,OAAAjN,MAAA,GAEAkT,GAAA+I,IAAAW,UACA1J,GAAAf,GAAAzF,UACA,IAUA4P,aAAA9c,IAAAyR,QASAsL,WAAA,SAAAG,KAAAxG,IAAAlW,OACA,IAAAmB,GAAAC,KAEA+Q,GAAA+D,IAAAa,aACA1F,IAAA,cAGAlQ,GAAA6a,MAAAhc,QACAmS,GAAAA,IAGAlO,IAAAyY,MACA3Z,IAAA2Z,KAAAhJ,SAYAgJ,KAAAhJ,OAAAvS,GAAA6a,MAAAhc,OAAAmS,IACAhR,GAAA6a,MAAAhc,OAAAic,IAAAS,MAZAld,IAAAqd,OAAAH,KAAA,SAAAT,KACAhY,IAAAgY,MAAAlZ,IAAAkZ,IAAAvI,SACAuI,IAAAvI,OAAAvS,GAAA6a,MAAAhc,OAAAmS,IACAhR,GAAA6a,MAAAhc,OAAAic,IAAAA,KAGA9a,GAAA6a,MAAAhc,OAAAmS,GAAAkF,SAAA,UAAA,UAUAlW,GAAA6a,MAAAhc,OAAAmS,GAAAkF,SAAA,UAAA,UAIA7X,IAAA6D,OAAA,qBACAC,QAAA,SAAAqM,IAAAC,MACA,OAAAkM,aC1IAtc,IAAA6D,OAAA,yBACA2H,OAAA,oBACAqG,KAAA,EACA/N,QAAA,SAAAqM,IAAAC,MACAD,IAAA3N,UAEA,OAAAxC,IAAAwL,OAAA2E,KAKA2M,aAAA,SAAApG,KACAA,IAAA7D,SAAA,sBCbA,WAEA,IAIAyK,SAJA1V,IAAA,IACA2V,QAAA,WACA,MAAA,SAAA3V,KAGA4P,QAGAA,KAAA3U,KAAA,iCAEA2U,KAAA3U,KAAA,+FAEA2U,KAAA3U,KAAA,kCACA2U,KAAA3U,KAAA,2FACA2U,KAAA3U,KAAA,gBACAya,SAAA9F,KAAAzU,KAAA,IAEAya,aAAA,SAAAC,MACA,IAAA9b,GAAAC,KACAD,GAAA8b,KAAAA,KACA9b,GAAA2Z,GAAAiC,WAEAC,aAAAhb,WAIAiT,MAAA,WACA,OAAA7T,KAAA0Z,IAKAoC,WAAA,WACA,QAAA9b,KAAA+b,UAKAC,QAAA,WACA,IAAAjc,GAAAC,KACAD,GAAA+b,eACA/b,GAAAkc,QAAAjL,YAAA,uBACAjR,GAAAmc,YAAAC,OACApc,GAAAgc,UAAA,IAOAnS,OAAA,WACA,IAAA7J,GAAAC,KACAD,GAAA+b,eACA/b,GAAAkc,QAAAhL,SAAA,uBACAlR,GAAAmc,YAAAE,OACArc,GAAAgc,UAAA,IAMAM,WAAA,WACA,QAAArc,KAAA8T,UAKAwI,OAAA,WACA,IAAAvc,GAAAC,KACAD,GAAAsc,eACAtc,GAAAkc,QAAAhL,SAAA,uBACAlR,GAAA+T,UAAA,IAMAyI,SAAA,WACA,IAAAxc,GAAAC,KACAD,GAAAsc,eACAtc,GAAAkc,QAAAjL,YAAA,uBACAjR,GAAA+T,UAAA,IAMA0I,WAAA,WACA,IAAAzc,GAAAC,KACAyc,OAAA1c,GAAA2c,YAAArL,IAAAsL,UAEA5c,GAAA2c,YAAArL,IAAAsL,UAAA,yBACA5c,GAAA2c,YAAAD,OAAAA,QAKAG,YAAA,WACA,IAAA7c,GAAAC,KACAD,GAAA2c,YAAArL,IAAAsL,UAAA5c,GAAA2c,YAAAD,cACA1c,GAAA2c,YAAAD,QAKAI,eAAA,WACA,IAAA9c,GAAAC,KAQA,OAPAD,GAAAmc,cACAnc,GAAAmc,YAAAnc,GAAAgR,GAAA4E,aACA1F,IAAA,wBAEAlQ,GAAAmc,YAAAY,aAAA,WACA/c,GAAAmc,YAAAC,QAEApc,GAAAmc,aAKAa,aAAA,WAKA,IAJA,IAAAhd,GAAAC,KACAT,GAAAQ,GAAAid,WACAxT,EAAA,EACAE,IAAA9G,IAAArD,IAAAA,GAAAP,OAAA,EACAwK,EAAAE,IAAAF,IACAjK,GAAAiK,GAAA8B,SAEAvL,GAAAid,gBAAA/X,GAMAqG,OAAA,WACA,IAAAvL,GAAAC,KAEAD,GAAAgd,sBAGAhd,GAAA8b,KAGA9b,GAAAgR,GAAAzF,UAOA2R,SAAA,SAAAhG,MACA,IAAAlX,GAAAC,KACA4C,IAAA7C,GAAAid,cACAjd,GAAAid,eAEAjd,GAAAid,WAAA/b,KAAAgW,OAMAiG,sBAAA,WACA,QAAAld,KAAAkc,aASA5J,OAAA,SAAAwC,IAAAmC,MACA,IAGA7X,EACAiS,IAAA8L,OAAAC,IAJArd,GAAAC,KACAyC,EAAA1C,GAAA8b,KACAwB,GAAA5a,EAAA6a,eAMAvd,GAAAgR,GAAA+D,IAAAa,aACA1F,IAAA,eAEAlQ,GAAAkc,QAAAlc,GAAAgR,GAAA4E,aACA1F,IAAA,kBACA2F,KAAA8F,WAEA2B,GAAA,GACAtd,GAAAkc,QAAAhG,SAAA,cAAA,GAAAoH,GAAA,OAIAhM,IAAAtR,GAAAkc,QAAA5K,IAAAG,WAEAzR,GAAA2c,YAAAte,IAAA8I,IAAAmK,IAAAG,WAAAC,WAAA,IAEA2L,IAAA/L,IAAAI,WAAA,GAAAD,WAAAC,WACA1R,GAAAwd,QAAAnf,IAAA8I,IAAAkW,IAAA,IACArd,GAAAgW,QAAA3X,IAAA8I,IAAAkW,IAAA,IAEAhe,EAAAqD,EAAA+a,WAEApe,EADAqB,IAAArB,IACA,OAAAA,KAEAwD,IAAAxD,IACAA,EAAA+R,QAAA,UAOApR,GAAAwd,QAAAE,SAAAre,GACAW,GAAAkc,QAAAjL,YAAA,uBAGAjR,GAAAwd,QAAAE,SAAA,QACA1d,GAAAkc,QAAAhL,SAAA,sBAEAlR,GAAAgW,QAAA1F,OAAA5N,EAAAib,WAAA,IAIAjb,EAAAkb,SACA5d,GAAAkc,QAAAhL,SAAA,oBAGAlR,GAAAkc,QAAAhL,UAAA,sBACAkM,OAAA9L,IAAAG,WAAAA,WACAzR,GAAA6d,SAAAxf,IAAA8I,IAAAiW,QACApd,GAAA6d,SAAA9U,GAAA,QAAA,SAAAT,IACAA,GAAAwV,kBACA5G,KAAA6G,aAAArb,MAKA1C,GAAAkc,QAAAnT,GAAA,QAAA,SAAAT,IACAA,GAAAwV,kBACA5G,KAAA8G,YAAAtb,KAGA1C,GAAAkc,QAAAnT,GAAA,WAAA,SAAAT,IACAA,GAAAwV,kBACA5G,KAAA+G,cAAAvb,OAKArE,IAAA6D,OAAA,yBACAC,QAAA,WACA,OAAA0Z,mBC7PA,WAIA,IAAAqC,SAAA,SAAAlZ,KAEA,IAKAmZ,MALAne,GAAAC,KACA0Z,IAFA3U,IAAAA,SAEA2U,IAAAiC,UACAwC,OAAApZ,IAAAoZ,KACAC,QAAArZ,IAAAqZ,MACAC,eAAAtZ,IAAAsZ,aAEA,IAAAD,MAAA,CAMA,IAJA,IAGA9V,EAHA8U,OACAxD,GAAA7U,IAAAuZ,SACA9U,EAAA,EAAAE,IAAA9G,IAAAgX,IAAAA,GAAA5a,OAAA,EAEAwK,EAAAE,IAAAF,IACAlB,EAAA,IAAA2V,SAAArE,GAAApQ,IACA4T,IAAAnc,KAAAqH,GACAA,EAAAiW,OAAAxe,GAEAA,GAAA0R,WAAA2L,IAGArd,GAAAmK,MAAAwP,GAAAA,IACAtb,IAAAsK,MAAA3I,GAAAmK,KAAAnF,YAEAhF,GAAAmK,KAAAiU,YACApe,GAAAmK,KAAAkU,aACAre,GAAAmK,KAAAoU,gBACAve,GAAAmK,KAAAmU,aAIAte,GAAA8T,MAAA,WACA,OAAA6F,IAMA3Z,GAAAye,QAAA,WACA,OAAAJ,OAKAre,GAAA0e,eAAA,WACA,OAAAL,OAAAC,cAMAte,GAAA4d,OAAA,WACA,OAAAQ,MAQApe,GAAA2e,SAAA,SAAAC,MACAT,MAAAS,MAMA5e,GAAA6e,QAAA,WACA,OAAAV,QAGAD,SAAArd,WAgCA4c,QAAA,WACA,OAAAxd,KAAAkK,KAAA2U,MAMAC,QAAA,SAAAD,QAOAnB,QAAA,WACA,OAAA1d,KAAAkK,KAAAqG,MAKAwO,QAAA,SAAAxO,MACA,IAAAxQ,GAAAC,KACAgf,EAAAjf,GAAA6e,UACAI,GACAjf,GAAAsK,QAEAtK,GAAAkf,UAAA1O,KAAAA,KAGAxQ,GAAAmK,KAAAqG,KAAAA,KAEAyO,EAAAE,eAAAnf,KAGAA,GAAAmK,KAAAqG,KAAAA,MAOA4O,UAAA,WACA,OAAAnf,KAAAue,QAMAjB,aAAA,WACA,IAAAvd,GAAAC,KACA,GAAAU,IAAAX,GAAAqf,WACA,OAAArf,GAAAqf,UAGA,IAAAC,EAAAtf,GAAAof,YAOA,OALApf,GAAAqf,UADAC,EACAA,EAAA/B,eAAA,EAGA,EAEAvd,GAAAqf,WAQAE,YAAA,SAAAzb,GAAAiC,OACA,IAAA/F,GAAAC,KACA,GAAAD,GAAA4d,SACAvf,IAAAwH,OAAA/B,GAAAiC,eAEA,GAAA/F,GAAAye,WAEA,IAAA5b,IAAA7C,GAAA0R,aAAA1R,GAAA0e,iBAAA,CAEA,IAAAc,OAAAxf,GAAA6e,UACA,GAAAW,SACAA,OAAAA,OAAAC,cACA7d,IAAA4d,OAAAE,MAeA,YAdAF,OAAAE,KAAA1f,GAAA,SAAA2f,IAKA,IAJA,IAEApX,EAFAkB,EAAA,EACAE,IAAA9G,IAAA8c,IAAAA,GAAA1gB,OAAA,EACAoe,OAEA5T,EAAAE,IAAAF,KACAlB,EAAA,IAAA2V,SAAAyB,GAAAlW,KACA+U,OAAAxe,GACAqd,IAAAnc,KAAAqH,GAGAvI,GAAA0R,WAAA2L,IACAhf,IAAAwH,OAAA/B,GAAAiC,OAAAsX,QAKAhf,IAAAwH,OAAA/B,GAAAiC,gBAIA1H,IAAAwH,OAAA/B,GAAAiC,OAAA/F,GAAA0R,cAMAkO,UAAA,aAMAC,WAAA,aAMA9T,QAAA,cAMA1N,IAAA6D,OAAA,qBACAC,QAAA,WACA,OAAA+b,eC5OA7f,IAAA6D,OAAA,qBACAqM,UACA,oBACA,yBAEApM,QAAA,SAAAqM,IAAAC,MACA,IAAAqR,UAAArR,KAAA,GACAsR,cAAAtR,KAAA,GAEAuR,SAAA,WACA,IAAAhgB,GAAAC,KACAD,GAAAigB,aACAjgB,GAAAkgB,YAAA,EAEAlgB,GAAAmgB,mBAAA,WACAngB,GAAAkgB,YAAA,GAIAlgB,GAAAogB,WAAA,IAAA/hB,IAAAC,KAAAmH,aACAc,MAAA,IACAb,QAAA1F,GAAAmgB,mBACApa,MAAA/F,MAkOA,OA/NAggB,SAAAnf,WAKA0R,OAAA,SAAAqM,KAAA9W,QACA,IAAA9H,GAAAC,KACA,IAAAD,GAAA4e,KAAA,CAIA5e,GAAA4e,KAAAA,KACA5e,GAAAqgB,QAAAvY,OAEA8W,KAAA0B,UACAxY,OAAAoJ,SAAA,mBAIAlR,GAAAugB,KAAAzY,OAAA8N,aACA1F,IAAA,gBAEAlQ,GAAAugB,KAAAxD,aAAA,WACA/c,GAAAugB,KAAAnE,OACA,IAAAoE,SAAAxgB,GAAAygB,eAAA7B,KAAA8B,KAAA1gB,GAAAqgB,SAEAzB,KAAA+B,aAEAH,SAAA1E,KAAAuD,WAAA,EACAmB,SAAAtE,QAAAhG,SAAA,UAAA,QACAlW,GAAA4gB,aAAAJ,aAOAC,eAAA,SAAA3E,KAAA/G,KACA,IAAA/U,GAAAC,KACA,GAAA6C,IAAAgZ,MAAA,CACAla,IAAAka,KAAAhI,SACAgI,KAAA,IAAAgE,UAAAhE,OAEAA,KAAA6C,SAAA3e,GAAA4e,MACA,IAAA1H,KAAAlX,GAAA6gB,mBAAA/E,MAGA,OAFA5E,KAAA3E,OAAAwC,IAAA/U,IACAA,GAAAigB,UAAAnE,KAAAhI,SAAAoD,KACAA,OAQA2J,mBAAA,SAAA/E,MACA,OAAA,IAAAiE,cAAAjE,OAQAgF,YAAA,SAAAhF,MACA,IAAA9b,GAAAC,KAUA,GATA6C,IAAAgZ,QAEAA,KADAla,IAAAka,KAAAhI,OACAgI,KAAAhI,QAGAgI,KAAAnC,IAIAjZ,IAAAob,MACA,OAAA9b,GAAAigB,UAAAnE,OASAiC,aAAA,SAAAjC,MACA,IAAA9b,GAAAC,KACAZ,EAAAW,GAAA8gB,YAAAhF,MACAzc,IAIAA,EAAA0c,aACA/b,GAAA+gB,cAAA1hB,GAGAW,GAAA4gB,aAAAvhB,KAOA2e,YAAA,SAAAlC,MACA,IAAA9b,GAAAC,KACAZ,EAAAW,GAAA8gB,YAAAhF,MACA,GAAAzc,IAGAW,GAAAkgB,WAAA,CAEAlgB,GAAAkgB,YAAA,EAEA,IAAAc,IAAAhhB,GAAAihB,YAEAD,KACAA,IAAAxE,WAGAwE,KAAAA,IAAAlN,UAAAzU,EAAAyU,QAKA9T,GAAAihB,iBAAA/b,GAJA7F,EAAAkd,SACAvc,GAAAihB,YAAA5hB,GAKAW,GAAA4e,KAAAtT,UAAA,iBAAAtL,GAAAihB,YAAAjhB,GAAAihB,YAAAnF,UAAA5W,EAAAlF,GAAA4e,MACA5e,GAAAogB,WAAA9Z,QAOA2X,cAAA,SAAAnC,MACA,IAAA9b,GAAAC,KACAZ,EAAAW,GAAA8gB,YAAAhF,MACAzc,GACAW,GAAA4e,KAAAtT,UAAA,eAAAjM,EAAAyc,KAAA9b,GAAA4e,OAOAgC,aAAA,SAAAM,SAAApd,GAAAiC,OACA,IAAA/F,GAAAC,KACA6b,KAAAoF,SAAApF,MAEAoF,SAAA/D,yBACArB,KAAA4C,kBAEA1e,GAAAugB,KAAAlE,OACA6E,SAAAzE,aACAX,KAAAyD,YAAA,SAAAlC,KACArd,GAAAugB,KAAAnE,OACA8E,SAAArE,cACA,IAGAsE,GAHApM,IAAAmM,SAAApE,iBACArT,EAAA,EACAE,IAAA9G,IAAAwa,KAAAA,IAAApe,OAAA,EAMA,GAFAiiB,SAAAlE,eAEArT,IAAA,EACA,KAAAF,EAAAE,IAAAF,KACA0X,GAAAnhB,GAAAygB,eAAApD,IAAA5T,GAAAsL,OAEAmM,SAAAhE,SAAAiE,SAKAA,GAAAnhB,GAAAohB,iBAAArM,IAAA+G,KAAAyB,kBAEA2D,SAAAhE,SAAAiE,IAKAD,SAAArX,SAEA7J,GAAA4e,KAAAtT,UAAA,eAAAwQ,KAAA9b,GAAA4e,MAEAhd,IAAAkC,KACAA,GAAA2G,KAAA1E,WAKAmb,SAAArX,SACA7J,GAAA4e,KAAAtT,UAAA,eAAAwQ,KAAA9b,GAAA4e,MACAhd,IAAAkC,KACAA,GAAA2G,KAAA1E,SASAgb,cAAA,SAAAG,UACA,IAAAlhB,GAAAC,KACAihB,SAAAjF,UACAjc,GAAA4e,KAAAtT,UAAA,gBAAA4V,SAAApF,KAAA9b,GAAA4e,OAOAwC,iBAAA,SAAArM,IAAAuI,IAEA7e,EAAA,IAAA6e,GAAA,GAAA,MAEAvI,IAAAa,aACA1F,IAAA,8BACA2F,KAAA,oDAAApX,EAAA,oDAIAuhB,YCzPA,WAIA,IAAAqB,YAAA,SAAAzC,KAAA0C,OAIA,IAHA,IACAjiB,EADA6X,KAAA0H,KAAArE,UACA9Q,EAAA,EAAAE,IAAA2X,MAAAriB,OAEAwK,EAAAE,IAAAF,IAEA,IADApK,EAAA6X,KAAA4J,YAAAQ,MAAA7X,OACApK,EAAA0c,aAUA,YAJA7E,KAAA0J,aAAAvhB,EAAA,WACAgiB,YAAAzC,KAAA0C,UAQAjjB,IAAA6D,OAAA,sBACA2H,OAAA,aACA0E,UACA,qBAEA2B,KAAA,EACA/N,QAAA,SAAAqM,IAAAC,MACA,IAAA8S,WAAA/S,IAAA3N,UACA2gB,cAAA/S,KAAA,GAEA,OAAApQ,IAAAwL,OAAA2E,KA0BAiR,UAAA,WACA,OAAAxf,KAAAwhB,YAMAtC,eAAA,SAAArD,QAOA3K,cAAA,WACA,IAAAnR,GAAAC,KACAiQ,IAAAlQ,GAAAkQ,IAEArN,IAAAqN,KACAA,IAAAkB,QAAA,UAGAlB,IADAxP,IAAAwP,MACA,SAAAA,KAGA,SAEAlQ,GAAAkQ,IAAAA,IACAqR,WAAApQ,cAAA1G,KAAAzK,IACAA,GAAAuK,UAOA,eAOA,iBAOA,eAOA,kBAOAgQ,QAAA,WACA,IAAAva,GAAAC,KAIA,OAHAD,GAAAkX,OACAlX,GAAAkX,KAAA,IAAAsK,eAEAxhB,GAAAkX,MAMA7F,SAAA,WACA,IAAArR,GAAAC,KACAshB,WAAAlQ,SAAA5G,KAAAzK,IACAA,GAAAua,UACAhI,OAAAvS,GAAAA,GAAAgR,IAEA,IAAA0Q,IAAAhhB,IAAAV,GAAA2hB,aAAA3hB,GAAA2hB,YAAA3hB,GAAA2hB,WACA9e,IAAA6e,MAAAA,IAAAziB,OAAA,GACAoiB,YAAArhB,GAAA0hB,YAEA1hB,GAAA2hB,YAKAvO,YAAA,WACA,IACA/T,EADAY,KACAsa,UAAA0G,YACA,GAAA5hB,EACA,OAAAA,EAAAyc,cCnJAzd,IAAA6D,OAAA,cACA2H,OAAA,aACAqG,KAAA,EAGA/N,QAAA,SAAAqM,IAAAC,MAEA,IAAAmT,GAAApT,IAAA3N,UACA,OAAAxC,IAAAwL,OAAA2E,KAIAwQ,QAAA,SAAAxO,MACA,IAAAxQ,GAAAC,KACAD,GAAAwQ,KAAAA,KACAxQ,GAAAgW,UACAhW,GAAAgW,QAAA1F,OAAAE,MAAA,IACAA,KACAxQ,GAAAgR,GAAAC,YAAA,gBAGAjR,GAAAgR,GAAAE,SAAA,kBAQA6N,QAAA,SAAAD,MACA,IAAA9e,GAAAC,KACAD,GAAA8e,OACA9e,GAAAwd,QAAAvM,YAAAjR,GAAA8e,MACAA,MAEA9e,GAAAgR,GAAAE,SAAA,iBAGA4N,OACA9e,GAAAwd,QAAAtM,SAAA4N,MACA9e,GAAA8e,MAEA9e,GAAAgR,GAAAC,YAAA,iBAGAjR,GAAA8e,KAAAA,MAKAnO,OAAA,WACA,IAAA3Q,GAAAC,KACAD,GAAA6hB,SACA7hB,GAAAgR,GAAAQ,aAAA,UAAA,WAEAxR,GAAA6hB,SAAA,GAKAC,SAAA,WACA,IAAA9hB,GAAAC,KACAD,GAAA6hB,SACA7hB,GAAAgR,GAAA+Q,gBAAA,WAEA/hB,GAAA6hB,SAAA,GAKA/Q,OAAA,WACA,IAAA9Q,GAAAC,KACAD,GAAAgiB,WACAhiB,GAAAgiB,UAAA,EACAhiB,GAAAgR,KACAhR,GAAAgR,GAAAC,YAAA,kBACAjR,GAAAgR,GAAAM,IAAA0Q,UAAA,KAOAnR,QAAA,WACA,IAAA7Q,GAAAC,KACAD,GAAAgiB,WACAhiB,GAAAgiB,UAAA,EACAhiB,GAAAgR,KACAhR,GAAAgR,GAAAE,SAAA,kBACAlR,GAAAgR,GAAAM,IAAA0Q,UAAA,KAQAC,WAAA,SAAAC,SACA,IAAAliB,GAAAC,KACAD,GAAAgR,GACAhR,GAAAgR,GAAAQ,aAAA,QAAA0Q,SAAA,IAGAliB,GAAAkiB,QAAAA,SAOA/Q,cAAA,WACA,IAAAnR,GAAAC,KACA2hB,GAAAzQ,cAAA1G,KAAAzK,IACAA,GAAAmiB,QAAA,SACA,IAAAjS,KAAA,SACAxP,IAAAV,GAAAkQ,KACAA,IAAAhP,KAAAlB,GAAAkQ,KAEArN,IAAA7C,GAAAkQ,OACAA,IAAAA,IAAAxH,OAAA1I,GAAAkQ,MAEAlQ,GAAAkQ,IAAAA,KAMAmB,SAAA,WACA,IAAArR,GAAAC,KACA2hB,GAAAvQ,SAAA5G,KAAAzK,IACAA,GAAAgR,GAAA+L,aAAA,WACA/c,GAAAwd,QAAAxd,GAAAgR,GAAA4E,aACAK,IAAA,MAEAjW,GAAA8e,KACA9e,GAAAwd,QAAAtM,SAAAlR,GAAA8e,MAGA9e,GAAAgR,GAAAE,SAAA,gBAEAlR,GAAAgW,QAAAhW,GAAAgR,GAAA4E,aACAK,IAAA,IACA/F,IAAAlQ,GAAAoiB,cAAAld,IAGAlF,GAAAwQ,KACAxQ,GAAAgW,QAAA1F,OAAAtQ,GAAAwQ,MAGAxQ,GAAAgR,GAAAE,SAAA,gBAGAlR,GAAAkiB,SACAliB,GAAAgR,GAAAQ,aAAA,QAAAxR,GAAAkiB,UAGAxhB,IAAAV,GAAAqiB,SAAAxf,IAAA7C,GAAAqiB,UACAriB,GAAAgR,GAAAE,SAAAlR,GAAAqiB,QAEAriB,GAAAgiB,WAAAhiB,GAAAgiB,SACAhiB,GAAAgiB,WACAhiB,GAAAgR,GAAAE,SAAA,kBACAlR,GAAAgR,GAAAM,IAAA0Q,UAAA,GAGAhiB,GAAA6hB,UAAA7hB,GAAA6hB,QACA7hB,GAAA6hB,SACA7hB,GAAAgR,GAAAQ,aAAA,WAAA,GAGAxR,GAAAgR,GAAAjI,GAAA,QAAA/I,GAAAsiB,cAAAtiB,KAKAsiB,cAAA,WACA,IAAAtiB,GAAAC,MACAD,GAAAgiB,UAAApgB,IAAA5B,GAAA0F,UACA1F,GAAA0F,QAAA+E,KAAAzK,GAAA+F,OAAA/F,GAAAA,UC9KA3B,IAAA6D,OAAA,gBACA2H,OAAA,aACA0E,UACA,qBAEApM,QAAA,SAAAqM,IAAAC,MACA,IAAA8S,WAAA/S,IAAA3N,UACA0hB,YAAA9T,KAAA,GAEA,OAAApQ,IAAAwL,OAAA2E,KAOAoM,UAAA,SAAA/b,OACA,IAAAmB,GAAAC,KACA,OAAAD,GAAAwiB,YACAxiB,GAAAyiB,YAAA7H,UAAA/b,YAGA,GAOAkc,aAAA,WACA,IAAA/a,GAAAC,KACA,OAAAD,GAAAwiB,YACAxiB,GAAAyiB,YAAA1H,eAGAlY,IAAA7C,GAAA6a,OAAA7a,GAAA6a,MAAA5b,OAAA,GASAyjB,QAAA,SAAAnH,MACA,IAAAvb,GAAAC,KACA,GAAAD,GAAAwiB,YACA,OAAAxiB,GAAAyiB,YAAAnH,WAAAC,MAGA1Y,IAAA7C,GAAA6a,OACA7a,GAAA6a,MAAA3Z,KAAAqa,MAEAzY,IAAA9C,GAAA6a,OACA7a,GAAA6a,OAAA7a,GAAA6a,MAAAU,MAGAvb,GAAA6a,OAAAU,OAUAoH,aAAA,SAAA9jB,OACA,OAAAoB,KAAAwiB,YAAAjH,WAAA3c,QAMAsS,cAAA,WACA,IAAAnR,GAAAC,KACA2iB,GAAA5iB,GAAAgb,OACAuG,WAAApQ,cAAA1G,KAAAzK,IACAA,GAAAwiB,aAAA,EAEA9hB,IAAAkiB,IAEAvkB,IAAAwkB,QAAAD,GAAA,SAAAE,KACA,GAAAlhB,IAAAkhB,KAAA,CACA,IAAAC,IAAA,IAAAD,IAAA9iB,GAAAgjB,kBACAphB,IAAAmhB,IAAA/H,SACAhb,GAAAgb,OAAA+H,IACA/iB,GAAAwiB,aAAA,EACAxiB,GAAAijB,oBAGAtd,OAAA,yCAAA5C,KAAAC,UAAA4f,KACA5iB,GAAAgb,OAAA,IAAAuH,YAAAviB,GAAAgjB,kBACAhjB,GAAAwiB,aAAA,EACAxiB,GAAAijB,wBAIAtd,OAAA,iCAAAid,IACA5iB,GAAAgb,OAAA,IAAAuH,YAAAviB,GAAAgjB,kBACAhjB,GAAAwiB,aAAA,EACAxiB,GAAAijB,oBAIAngB,IAAA8f,MACAhhB,IAAAghB,GAAA5H,SACAhb,GAAAgb,OAAA4H,GACA5iB,GAAAwiB,aAAA,EACAxiB,GAAAijB,mBAGA5kB,IAAAqd,OAAAkH,GAAA,SAAAG,KACAnhB,IAAAmhB,IAAA/H,SACAhb,GAAAgb,OAAA+H,IACA/iB,GAAAwiB,aAAA,EACAxiB,GAAAijB,oBAGAtd,OAAA,8BAAA5C,KAAAC,UAAA4f,KACA5iB,GAAAgb,OAAA,IAAAuH,YAAAviB,GAAAgjB,kBACAhjB,GAAAwiB,aAAA,EACAxiB,GAAAijB,uBASA/H,gBAAA,WACA,OAAAjb,KAAA+Q,IAMAyR,UAAA,WACA,OAAAxiB,KAAA+a,QAMA3J,SAAA,WACA,IAAArR,GAAAC,KACAshB,WAAAlQ,SAAA5G,KAAAzK,IACAA,GAAAwiB,YACAxiB,GAAAkjB,WAGAljB,GAAAmjB,oBAAAnjB,GAAAkjB,SAAAljB,KAMAkjB,SAAA,WACA,IAAAljB,GAAAC,KACAD,GAAAyiB,YAAAzH,OAAAhb,KAKAmjB,oBAAA,SAAAC,GAAArd,OACA,IAAA/F,GAAAC,KACAD,GAAAwiB,YACAnkB,IAAAwH,OAAAud,GAAArd,QAGA/F,GAAAqjB,sBACArjB,GAAAqjB,wBAEArjB,GAAAqjB,oBAAAniB,MACAkiB,GAAAA,GACArd,MAAAA,UAOAkd,gBAAA,WAIA,IAHA,IACAxgB,EADAzC,GAAAC,KACAwJ,EAAA,EACAE,IAAA9G,IAAA7C,GAAAqjB,qBAAArjB,GAAAqjB,oBAAApkB,OAAA,EACAwK,EAAAE,IAAAF,IACAhH,EAAAzC,GAAAqjB,oBAAA5Z,GACApL,IAAAwH,OAAApD,EAAA2gB,GAAA3gB,EAAAsD,aCnMA,WAEA,IAAAud,qBAYA3b,eAAA,SAAAC,KAAAC,OACA,OAAAA,OAEA,KAAA,EAEA,KAAA,EAEA,KAAA,EAEA,KAAA,GACA,OAAA,GACA,KAAA,EACA,OAAA,GAAAD,KAAA,KAAA,GAAAA,KAAA,KAAA,GAAAA,KAAA,EAEA,GAIA,GAGA,QACA,OAAA,KAIA2b,YAAA,SAAAC,SACA,IAAA3N,QAaA,OAZAA,KAAA3U,KAAA,+BACA2U,KAAA3U,KAAAsiB,SACA3N,KAAA3U,KAAA,MACA2U,KAAA3U,KAAA,kGACA2U,KAAA3U,KAAA,kGACA2U,KAAA3U,KAAA,kGACA2U,KAAA3U,KAAA,kGACA2U,KAAA3U,KAAA,kGACA2U,KAAA3U,KAAA,kGACA2U,KAAA3U,KAAA,kGAEA2U,KAAA3U,KAAA,UACA2U,KAAAzU,KAAA,KAGAyU,QAEAA,KAAA3U,KAAA,iCACA2U,KAAA3U,KAAA,sCACA2U,KAAA3U,KAAA,0EACA2U,KAAA3U,KAAA,0EACA2U,KAAA3U,KAAA,UACA2U,KAAA3U,KAAA,8CACA2U,KAAA3U,KAAA,uCACA2U,KAAA3U,KAAA,yEACA2U,KAAA3U,KAAA,yEACA2U,KAAA3U,KAAA,gBAGA2U,KAAA3U,KAAA,iCAEA2U,KAAA3U,KAAAqiB,YAAA,oBAEA,IAAA,IAAA9Z,EAAA,EAAAA,EAAA,EAAAA,IACAoM,KAAA3U,KAAAqiB,YAAA,mBAEA1N,KAAA3U,KAAA,UAEAoiB,kBAAAzN,KAAAzU,KAAA,IAKA,IAAAqiB,UAAA,SAAAnS,IAAA5L,QAAAK,OACA,IAAA/F,GAAAC,KACAD,GAAAgR,GAAA3S,IAAA8I,IAAAmK,KACAtR,GAAA0jB,OAAArlB,IAAA8I,IAAAmK,IAAAG,YACAzR,GAAAgiB,UAAA,EACAhiB,GAAA+T,UAAA,EACA/T,GAAA2jB,cAAA,EACA3jB,GAAA0F,QAAAA,QACA1F,GAAA+F,MAAAA,MAEA/F,GAAAgR,GAAAjI,GAAA,QAAA/I,GAAA2R,QAAA3R,KAGAyjB,UAAA5iB,WAOA+iB,SAAA,SAAAC,IAAAC,eAAAC,QACA,IAAA/jB,GAAAC,KACAgf,EAAA4E,IAAA,GAEA5E,EAAA,KACAA,EAAA,IAAAA,GAEAjf,GAAA0jB,OAAApT,OAAA2O,GACAjf,GAAA4K,MAAAiZ,IACAC,iBAAA,IAAA9jB,GAAA2jB,cACA3jB,GAAAgR,GAAAE,SAAA,wBACAlR,GAAA2jB,cAAA,GAEAG,iBAAA,IAAA9jB,GAAA2jB,eACA3jB,GAAAgR,GAAAC,YAAA,wBACAjR,GAAA2jB,cAAA,GAGAE,IAAA,KAAAE,OAAA,IACAF,IAAA,KAAAE,OAAA,IACAF,IAAA,KAAAE,OAAA,GACA/jB,GAAAgR,GAAAE,SAAA,oBAGAlR,GAAAgR,GAAAC,YAAA,qBAMAqL,WAAA,WACA,QAAArc,KAAA8T,UAKAwI,OAAA,WACA,IAAAvc,GAAAC,KACAD,GAAAsc,eACAtc,GAAAgR,GAAAE,SAAA,uBACAlR,GAAA+T,UAAA,IAOAyI,SAAA,WACA,IAAAxc,GAAAC,KACAD,GAAAsc,eACAtc,GAAAgR,GAAAC,YAAA,uBACAjR,GAAA+T,UAAA,IAMAiQ,WAAA,WACA,QAAA/jB,KAAA+hB,UAKAnR,QAAA,WACA,IAAA7Q,GAAAC,KACAD,GAAAgkB,eACAhkB,GAAAgR,GAAAE,SAAA,2BACAlR,GAAAgR,GAAAQ,aAAA,YAAA,GACAxR,GAAAgiB,UAAA,IAMAlR,OAAA,WACA,IAAA9Q,GAAAC,KACAD,GAAAgkB,eACAhkB,GAAAgR,GAAAC,YAAA,2BACAjR,GAAAgR,GAAA+Q,gBAAA,YACA/hB,GAAAgiB,UAAA,IAMArQ,QAAA,WACA,IAAA3R,GAAAC,MACAD,GAAAgkB,cAAApiB,IAAA5B,GAAA0F,UACA1F,GAAA0F,QAAA+E,KAAAzK,GAAA+F,MAAA/F,GAAA4K,MAAA5K,MAUA,IAAAikB,aAAA,SAAAC,GAAAC,IACA,IAAA,IAAA9kB,EAAAoK,EAAA,EAAAA,EAAA,EAAAA,IAEA,GAAA,IADApK,EAAA6kB,GAAAza,GAAA0a,GAAA1a,IAEA,OAAApK,EAGA,OAAA,GASA+kB,eAAA,SAAA9S,IAAA5L,QAAAkF,OACA,IAAA5K,GAAAC,KACAgB,KACA+P,GAAA3S,IAAA8I,IAAAmK,KACA0Q,UAAA,EACAtc,QAAAA,QACAK,MAAA/F,GACA4K,MAAAA,OAsBA,OAnBA3J,IAAA+P,GAAAjI,GAAA,QAAA,YACA,IAAA9H,IAAA+gB,UACA/gB,IAAAyE,QAAA+E,KAAAxJ,IAAA8E,OAAA/F,GAAAiB,IAAA2J,SAIA3J,IAAA4P,QAAA,YACA,IAAA5P,IAAA+gB,WACA/gB,IAAA+P,GAAAE,SAAA,+BACAjQ,IAAA+gB,UAAA,IAGA/gB,IAAA6P,OAAA,YACA,IAAA7P,IAAA+gB,WACA/gB,IAAA+P,GAAAC,YAAA,+BACAhQ,IAAA+gB,UAAA,IAIA/gB,KAMAojB,YAAA,SAAA/S,KACA,IAAAtR,GAAAC,KACA,OAAA,IAAAwjB,UAAAnS,IAAAtR,GAAAskB,cAAAtkB,KAQAukB,YAAA,SAAA3c,KAAAC,OACA,IAAA7H,GAAAC,KACAukB,KAAAxkB,GAAAwkB,KACAC,QAAAD,KAAAC,QACAC,QAAA1kB,GAAA2kB,QAAA3kB,GAAA4kB,SAAA5kB,GAAA0kB,QACAG,QAAA7kB,GAAA8kB,QAAA9kB,GAAA+kB,SAAA/kB,GAAA6kB,QACAd,OAAA,IAAA7d,KACA6d,QACAA,OAAA7gB,cACA6gB,OAAA5gB,WACA4gB,OAAA3gB,WAEA,IAAA4hB,kBAAA,SAAAC,IAAAC,IACA,GAAAllB,GAAA4K,MAGA,CACA,IAAAua,EAAAnlB,GAAA4K,MAAA1H,cACAkiB,EAAAplB,GAAA4K,MAAAzH,WACAiJ,EAAApM,GAAA4K,MAAAxH,UAEA8hB,GAAA,KAAAC,GAAAD,GAAA,KAAAE,GAAAF,GAAA,KAAA9Y,EACA6Y,IAAA1I,SAGA0I,IAAAzI,gBAXAyI,IAAAzI,YAeA6I,kBAAA,SAAAJ,IAAAC,IACAA,GAAA,GAAAA,GAAA,GAAAA,GAAA,GACAjB,aAAAS,OAAAQ,IAAA,GACAjB,aAAAY,OAAAK,KAAA,EACAD,IAAAnU,SAGAmU,IAAApU,WAMA7Q,GAAA2kB,UAAA/c,MACA4c,KAAAc,eAAAzU,UACA7Q,GAAA4kB,UAAA/c,MACA2c,KAAAe,gBAAA1U,UAGA2T,KAAAe,gBAAAzU,UAGA9Q,GAAA2kB,QAAA/c,MACA4c,KAAAc,eAAAzU,UACA2T,KAAAe,gBAAA1U,YAGA2T,KAAAc,eAAAxU,SACA0T,KAAAe,gBAAAzU,UAIA9Q,GAAA8kB,QAAAld,MACA4c,KAAAgB,YAAA1U,SACA0T,KAAAiB,aAAA3U,UAEA9Q,GAAA8kB,UAAAld,MACA4c,KAAAgB,YAAA3U,UACA7Q,GAAA+kB,UAAAld,MACA2c,KAAAiB,aAAA5U,UAGA2T,KAAAiB,aAAA3U,WAIA0T,KAAAgB,YAAA3U,UACA2T,KAAAiB,aAAA5U,WAIA2T,KAAAkB,gBAAApV,OAAA1I,KAAA,MAAAC,MAAA,GAAA,KAGA,IAIA+a,GAAA+C,GACAC,SAEAC,IACAtmB,GAAAkK,EAAAE,IAAAmc,GAAA1Z,EAPA2Z,UADA,IAAA7f,KAAA0B,KAAAC,MAAA,GACAme,SAwBA,IAfAD,UAAA,GAAAA,UAAA,EAAAA,UAGAle,MAAA,GACA+a,GAAAhb,KACA+d,GAAA9d,MAAA,IAGA+a,GAAAhb,KAAA,EACA+d,GAAA,IAKAC,UADAC,IAAAle,eAAAib,GAAA+C,KACAI,UACAtc,EAAA,EAAAE,IAAAoc,UAAAtc,EAAAE,IAAAF,IAEA2C,GAAAwW,GAAA+C,GAAAC,SAAA,EAAAnc,IADAqc,GAAArB,QAAAhb,IAEAma,SAAAxX,GAAA,EAAA2X,QACAiB,kBAAAc,GAAA1Z,GACAiZ,kBAAAS,GAAA1Z,GAKA,IAAA3C,EAAA,EAAAE,IADAkc,IAAAle,eAAAC,KAAAC,OACA4B,EAAAE,IAAAF,IAGA2C,GAAAxE,KAAAC,MAAA4B,EAAA,IADAqc,GAAArB,QADAllB,GAAAwmB,UAAAtc,IAGAma,SAAAxX,GAAA,EAAA2X,QACAiB,kBAAAc,GAAA1Z,GACAiZ,kBAAAS,GAAA1Z,GAWA,GAPA,IAAAvE,OACA+a,GAAAhb,KAAA,EAAA+d,GAAA,IAGA/C,GAAAhb,KAAA+d,GAAA9d,MAAA,GAEA8B,IAAAkc,IAAAE,UACAtB,QAAAxlB,OAAA0K,IAEA,IADAF,EAAAE,IAAAA,IAAA8a,QAAAxlB,OAAAM,GAAA,EACAkK,EAAAE,IAAAF,IAAAlK,KAEA6M,GAAAwW,GAAA+C,GAAApmB,KADAumB,GAAArB,QAAAhb,IAEAma,SAAAxX,GAAA,EAAA2X,QACAiB,kBAAAc,GAAA1Z,GACAiZ,kBAAAS,GAAA1Z,IAKA/N,IAAA6D,OAAA,gBACA2H,OAAA,aACAqG,KAAA,EACA/N,QAAA,SAAAqM,IAAAC,MACA,IAAA8S,WAAA/S,IAAA3N,UAEA,OAAAxC,IAAAwL,OAAA2E,KAMAoV,SAAA,SAAApc,KAAAye,SACA,IAAAjmB,GAAAC,KACA,IAAAD,GAAA4K,QAAApD,MAAAye,WAGAjmB,GAAA4K,MAAApD,KACAxH,GAAAwkB,MAAA,CACA,IAAAW,EAAAC,EACAniB,IAAAuE,OACA2d,EAAA3d,KAAAtE,cACAkiB,EAAA5d,KAAArE,aAIAgiB,GADA3d,KAAA,IAAAtB,MACAhD,cACAkiB,EAAA5d,KAAArE,YAEAnD,GAAAkmB,YAAAf,EACAnlB,GAAA2jB,aAAAyB,EAEAb,YAAA9Z,KAAAzK,GAAAmlB,EAAAC,KASAe,cAAA,SAAAC,IAAAC,KACA,IAAAhnB,EAAAW,GAAAC,KACAgD,IAAAmjB,MAAAnjB,IAAAojB,MACAD,IAAAjgB,UAAAkgB,IAAAlgB,YACA9G,EAAA+mB,IACAA,IAAAC,IACAA,IAAAhnB,GAGA4D,IAAAmjB,MAMApmB,GAAA2kB,QAAAyB,IAAAljB,cACAlD,GAAA4kB,SAAAwB,IAAAjjB,WACAnD,GAAA0kB,OAAA0B,IAAAhjB,YAPApD,GAAA2kB,QAAA,KACA3kB,GAAA4kB,SAAA,EACA5kB,GAAA0kB,OAAA,GAOAzhB,IAAAojB,MAMArmB,GAAA8kB,QAAAuB,IAAAnjB,cACAlD,GAAA+kB,SAAAsB,IAAAljB,WACAnD,GAAA6kB,OAAAwB,IAAAjjB,YAPApD,GAAA8kB,QAAA,KACA9kB,GAAA+kB,SAAA,GACA/kB,GAAA6kB,OAAA,KAYA1T,cAAA,WACA,IAAAnR,GAAAC,KAAAZ,EAAAW,GAAAkQ,IAEArN,IAAAxD,GACAA,EAAA+R,QAAA,cAGA/R,EADAqB,IAAArB,IACA,aAAAA,GAGA,aAEAW,GAAAkQ,IAAA7Q,EACAkiB,WAAApQ,cAAA1G,KAAAzK,IAEAA,GAAAmmB,cAAAnmB,GAAAsmB,SAAAtmB,GAAAumB,iBACAvmB,GAAAsmB,gBACAtmB,GAAAumB,SAEAvmB,GAAAuK,UAOA,WAMA,oBAOA8G,SAAA,WACA,IACAmV,QAAAxV,GADAhR,GAAAC,KAEAukB,QACAjD,WAAAlQ,SAAA5G,KAAAzK,IAEAgR,GAAAhR,GAAAgR,GAAA4E,aACA1F,IAAA,iBACA2F,KAAAyN,oBAEAtjB,GAAAgR,GAAA4E,aACA1F,IAAA,qBAGAsW,QADAxV,GAAAM,IAAAG,WACAC,WACA8S,KAAAc,eAAAlB,eAAA3Z,KAAAzK,GAAAwmB,QAAA,GAAA/U,WAAAzR,GAAAymB,oBACAjC,KAAAe,gBAAAnB,eAAA3Z,KAAAzK,GAAAwmB,QAAA,GAAA9U,WAAA,GAAA1R,GAAA0mB,qBAEAlC,KAAAkB,gBAAArnB,IAAA8I,IAAAqf,QAAA,IACAhC,KAAAgB,YAAApB,eAAA3Z,KAAAzK,GAAAwmB,QAAA,GAAA/U,WAAAzR,GAAA2mB,iBACAnC,KAAAiB,aAAArB,eAAA3Z,KAAAzK,GAAAwmB,QAAA,GAAA9U,WAAA,GAAA1R,GAAA4mB,kBAKAJ,QADAxV,GAAAM,IAAAI,WAAA,GACAA,WAEA,IADA,IAAAmV,EAAAC,GAAArd,EAAA,EAAAgb,WACAhb,EAAA,EAAAA,IAGA,IADAqd,GADAN,QAAA/c,GACAiI,WACAmV,EAAA,EAAAA,EAAA,EAAAA,IACApC,QAAAvjB,KAAAmjB,YAAA5Z,KAAAzK,GAAA8mB,GAAAD,KAGArC,KAAAC,QAAAA,QACAzkB,GAAAwkB,KAAAA,KACA,IAAAnlB,EAAAW,GAAA4K,MACA5K,GAAA4K,OAAA,EACA5K,GAAA4jB,SAAAvkB,IAMAonB,mBAAA,WACA,IAAAzmB,GAAAC,KACAklB,EAAAnlB,GAAAkmB,YAAA,EACAd,EAAAplB,GAAA2jB,aAEA3jB,GAAA2kB,UAAAQ,GAAAnlB,GAAA4kB,SAAAQ,IACAA,EAAAplB,GAAA4kB,UAGA5kB,GAAAkmB,YAAAf,EACAnlB,GAAA2jB,aAAAyB,EACAb,YAAA9Z,KAAAzK,GAAAmlB,EAAAC,IAMAsB,oBAAA,WACA,IACAvB,EAAAC,EADAplB,GAAAC,KAGA,IAAAD,GAAA2jB,cACAyB,EAAA,GACAD,EAAAnlB,GAAAkmB,YAAA,IAGAd,EAAAplB,GAAA2jB,aAAA,EACAwB,EAAAnlB,GAAAkmB,aAGAlmB,GAAAkmB,YAAAf,EACAnlB,GAAA2jB,aAAAyB,EACAb,YAAA9Z,KAAAzK,GAAAmlB,EAAAC,IAMAuB,gBAAA,WACA,IAAA3mB,GAAAC,KACAklB,EAAAnlB,GAAAkmB,YAAA,EACAd,EAAAplB,GAAA2jB,aAGA3jB,GAAA8kB,UAAAK,GAAAnlB,GAAA+kB,SAAAK,IACAA,EAAAplB,GAAA+kB,UAGA/kB,GAAAkmB,YAAAf,EACAnlB,GAAA2jB,aAAAyB,EACAb,YAAA9Z,KAAAzK,GAAAmlB,EAAAC,IAMAwB,iBAAA,WACA,IACAzB,EAAAC,EADAplB,GAAAC,KAGA,KAAAD,GAAA2jB,cACAyB,EAAA,EACAD,EAAAnlB,GAAAkmB,YAAA,IAGAd,EAAAplB,GAAA2jB,aAAA,EACAwB,EAAAnlB,GAAAkmB,aAGAlmB,GAAAkmB,YAAAf,EACAnlB,GAAA2jB,aAAAyB,EACAb,YAAA9Z,KAAAzK,GAAAmlB,EAAAC,IAOA2B,cAAA,SAAAlD,KACA,IAAA7jB,GAAAC,KACAklB,EAAAtB,IAAA,GACAuB,EAAAvB,IAAA,GACAzX,EAAA,IAAAlG,KAAAif,EAAAC,EAAAvB,IAAA,KAEA,IAAA7jB,GAAAsL,UAAA,WAAAc,EAAApM,MACAA,GAAA4K,OAAA5K,GAAA4K,MAAA1H,gBAAAiiB,GACAnlB,GAAA4K,MAAAzH,aAAAiiB,GACAplB,GAAA4K,MAAAxH,YAAAygB,IAAA,KAIA7jB,GAAA4K,MAAAwB,EACAmY,YAAA9Z,KAAAzK,GAAAmlB,EAAAC,GACAplB,GAAAsL,UAAA,kBAAAc,MAQAkY,cAAA,SAAAT,IAAAoB,KACA,IAAAjlB,GAAAC,KACAklB,EAAAtB,IAAA,GACAuB,EAAAvB,IAAA,GAEAsB,IAAAnlB,GAAAkmB,aAAAd,IAAAplB,GAAA2jB,aAEA3jB,GAAA+mB,cAAAlD,KAEAsB,IAAAnlB,GAAAkmB,YAEAd,EAAAplB,GAAA2jB,aACA3jB,GAAA4mB,mBAGA5mB,GAAA0mB,sBAKAvB,EAAAnlB,GAAAkmB,YACAlmB,GAAA4mB,mBAGA5mB,GAAA0mB,+BCzrBA,WAEA,IAAA/K,YACAA,SAAAza,KAAA,2BAEAya,SAAAza,KAAA,mEAEAya,SAAAza,KAAA,0EAGAya,SAAAza,KAAA,0EAEAya,SAAAza,KAAA,UAEAya,SAAAA,SAAAva,KAAA,IAEA,IAAA4lB,aACAC,IACAzW,KAAA,MAEAnK,QACAmK,KAAA,OAIAnS,IAAA6D,OAAA,cACA2H,OAAA,aACA0E,UACA,cAEA2B,KAAA,EACA/N,QAAA,SAAAqM,IAAAC,MACA,IAAAC,WAAAF,IAAA3N,UACAqmB,OAAAzY,KAAA,GACA,OAAApQ,IAAAwL,OAAA2E,KAQA2Y,WAAA,SAAAC,SAAAC,QACA,IACAb,QADAxmB,GAAAC,KAKA,IADAumB,QAAAxmB,GAAAuX,KAAAjG,IAAAI,aACA8U,QAAAvnB,OAAA,EACA,KAAAunB,QAAAvnB,OAAA,GACAZ,IAAA8I,IAAAqf,QAAAA,QAAAvnB,OAAA,IACAsM,SAGAvL,GAAAsnB,YACAtnB,GAAAgR,GAAAC,YAAAjR,GAAAsnB,YAGAtnB,GAAAuX,KAAAjH,OAAA8W,UACApnB,GAAAgR,GAAAE,SAAAmW,QACArnB,GAAAsnB,WAAAD,QASAE,SAAA,SAAAC,MAAAC,MACA,IAAAznB,GAAAC,KACAD,GAAA0nB,UAAAF,OACAxnB,GAAA2nB,WAAAF,OAKAG,SAAA,WACA,IAAA5nB,GAAAC,KACAD,GAAA6nB,YACA7nB,GAAA8nB,cAKAD,UAAA,WACA,IAAA7nB,GAAAC,KACAD,GAAA+nB,cACA/nB,GAAA+nB,aAAA,EACA/nB,GAAAgR,GAAAE,SAAA,iBAMAwW,UAAA,SAAAF,OACA,IAAAxnB,GAAAC,KACAD,GAAA+nB,cACA/nB,GAAA+nB,aAAA,EACA/nB,GAAAgR,GAAAC,YAAA,gBAEAjR,GAAAgoB,SAAA1X,OAAAkX,OAAA,KAKAG,WAAA,SAAAF,MACA,IACAhe,EAAAE,IAAAlH,EAAAwiB,IAAAjgB,IADAhF,GAAAC,KAEAD,GAAAioB,eACAjoB,GAAAioB,cAAA,EACAjoB,GAAAgR,GAAAC,YAAA,mBAGA,IAAAxH,KAAAzJ,GAAAkoB,SACAjD,IAAAjlB,GAAAkoB,QAAAze,IACA2S,OAGA,GAAAvZ,IAAA4kB,OAAAA,KAAAxoB,OAAA,EACA,IAAAwK,EAAA,EAAAE,IAAA8d,KAAAxoB,OAAAwK,EAAAE,IAAAF,IACAhH,EAAAglB,KAAAhe,IACAwb,IAAAjlB,GAAAkoB,QAAAzlB,EAAAkX,OAEA3U,IAAAgiB,YAAAvkB,EAAAkX,IAEAjZ,IAAA+B,EAAA+N,MACAyU,IAAAjG,QAAAvc,EAAA+N,MAGAyU,IAAAjG,QAAAha,IAAAwL,MAIA5O,IAAAa,EAAAiD,SACAuf,IAAAvf,QAAAjD,EAAAiD,QAAAyiB,eAAA1lB,EAAAsD,OAAAtD,EAAAkX,KAGAsL,IAAAvf,aAAAR,EAGA+f,IAAA5I,SAQAyL,WAAA,WACA,IAAA9nB,GAAAC,KACAD,GAAAioB,eACAjoB,GAAAioB,cAAA,EACAjoB,GAAAgR,GAAAE,SAAA,oBAOAC,cAAA,WACA,IAAAnR,GAAAC,KACAyO,WAAAyC,cAAA1G,KAAAzK,IACA,IAAAkQ,KAAA,SACAxP,IAAAV,GAAAkQ,KACAA,IAAAhP,KAAAlB,GAAAkQ,KAEArN,IAAA7C,GAAAkQ,OACAA,IAAAA,IAAAxH,OAAA1I,GAAAkQ,MAEAlQ,GAAAkQ,IAAAA,KAMAmB,SAAA,WACA,IAAAC,IAAA8L,OAAApd,GAAAC,KACAyO,WAAA2C,SAAA5G,KAAAzK,IACAA,GAAAgR,GAAA+L,aAAA,WACA/c,GAAAgR,GAAAV,OAAAqL,UAIAyB,QAFA9L,IAAAtR,GAAAgR,GAAAM,IAAAG,YAEAC,WAAA,GAAAD,WACAzR,GAAAgoB,SAAA3pB,IAAA8I,IAAAiW,QAEAA,OAAA9L,IAAAI,WAAA,GAAAD,WACAzR,GAAAuX,KAAAlZ,IAAA8I,IAAAiW,QAEAA,OAAA9L,IAAAI,WAAA,GAAAD,WACAzR,GAAAooB,UAAA/pB,IAAA8I,IAAAiW,QACA,IAAAqK,QACAA,KAAAR,GAAA,IAAAC,QACAhX,IAAA,WACAM,KAAA,OAEAiX,KAAAR,GAAA1U,OAAAvS,GAAAooB,WACAX,KAAAR,GAAAjW,GAAA+L,aAAA,WAEA0K,KAAAphB,OAAA,IAAA6gB,QACAhX,IAAA,eACAM,KAAA,OAEAiX,KAAAphB,OAAAkM,OAAAvS,GAAAooB,WACAX,KAAAphB,OAAA2K,GAAA+L,aAAA,WAEA/c,GAAAkoB,QAAAT,MAMApL,KAAA,WACA,IAAArc,GAAAC,KACAyO,WAAA2N,KAAA5R,KAAAzK,IACAA,GAAAqoB,cAAAhM,QAMAD,KAAA,WACA,IAAApc,GAAAC,KACAyO,WAAA0N,KAAA3R,KAAAzK,IACAA,GAAAqoB,cAAAjM,QAEAiM,YAAA,WACA,IAAAroB,GAAAC,KAKA,OAJAD,GAAAsoB,WACAtoB,GAAAsoB,SAAAjqB,IAAAkqB,UAAAC,WAAA,aAAA,KACAxoB,GAAAsoB,SAAApX,SAAA,eAEAlR,GAAAsoB,kBC9OA,WACA,IAAAG,IAKAC,cAAA,SAAAC,KACA,IAAA9S,QAKA,OAJAA,KAAA3U,KAAA,mCACA2U,KAAA3U,KAAA,gEACA2U,KAAA3U,KAAAynB,KACA9S,KAAA3U,KAAA,gBACA2U,KAAAzU,KAAA,KAGAkG,KAIA8U,KAAA,WACAqM,KACAA,IAAArM,QAOAwM,SAAA,SAAAD,KACAF,MACAA,IAAAb,WACAa,IAAAtB,WAAAuB,cAAAC,KAAA,eACAF,IAAApM,SAQAwM,SAAA,SAAAF,IAAAnB,OACAiB,MACAA,IAAAlB,SAAAC,OAAA,KAAA7N,GAAA,KAAAnJ,KAAA,KAAA9K,QAAA,WACA+iB,IAAArM,WAEAqM,IAAAtB,WAAAuB,cAAAC,KAAA,eACAF,IAAApM,SAWAyM,YAAA,SAAAH,IAAAnB,MAAA1hB,SAAAC,OACA0iB,MACAA,IAAAlB,SAAAC,OAAA,KAAA7N,GAAA,KAAAnJ,KAAA,KAAA9K,QAAA,WACA+iB,IAAArM,OACA/d,IAAAwH,OAAAC,SAAAC,WAEA0iB,IAAAtB,WAAAuB,cAAAC,KAAA,kBACAF,IAAApM,SAYA0M,sBAAA,SAAAJ,IAAAnB,MAAA1hB,SAAAC,OACA0iB,MACAA,IAAAlB,SAAAC,OAAA,KACA7N,GAAA,KAAAnJ,KAAA,KACA9K,QAAA,WACA+iB,IAAArM,OACA/d,IAAAwH,OAAAC,SAAAC,QAAA,OAGA4T,GAAA,SAAAnJ,KAAA,KACA9K,QAAA,SAAAuf,KACAwD,IAAArM,OACA/d,IAAAwH,OAAAC,SAAAC,QAAA,QAIA0iB,IAAAtB,WAAAuB,cAAAC,KAAA,kBACAF,IAAApM,SAaA2M,oBAAA,SAAAL,IAAAnB,MAAA1hB,SAAAC,MAAA0hB,MACAgB,MACAA,IAAAlB,SAAAC,OAAA,KACA7N,GAAA,KAAAnJ,KAAAiX,KAAAA,KAAA,IAAA,IAAA,IACA/hB,QAAA,WACA+iB,IAAArM,OACA/d,IAAAwH,OAAAC,SAAAC,QAAA,OAGA4T,GAAA,SAAAnJ,KAAAiX,KAAAA,KAAA,QAAA,IAAA,IACA/hB,QAAA,SAAAuf,KACAwD,IAAArM,OACA/d,IAAAwH,OAAAC,SAAAC,QAAA,QAIA0iB,IAAAtB,WAAAuB,cAAAC,KAAA,kBACAF,IAAApM,SAYA4M,YAAA,SAAAN,IAAAnB,MAAA1hB,SAAAC,OACA0iB,MACAA,IAAAtB,WAAAuB,cAAAC,KAAA,kBACAF,IAAAlB,SACAC,OAAA,KAEA7N,GAAA,KAAAnJ,KAAA,KACA9K,QAAA,SAAAuf,KACAwD,IAAArM,OACA/d,IAAAwH,OAAAC,SAAAC,QAAA,OAGA4T,GAAA,SAAAnJ,KAAA,KACA9K,QAAA,SAAAuf,KACAwD,IAAArM,OACA/d,IAAAwH,OAAAC,SAAAC,QAAA,QAIA0iB,IAAApM,UAKAhe,IAAA6D,OAAA,eACAqM,UACA,cAEA2B,KAAA,EACA/N,QAAA,SAAAqM,IAAAC,MAIA,OAHAga,IAAA,IAAAha,KAAA,IACA8D,OAAAlU,IAAAkqB,WACAE,IAAArM,OACA9U,UCjKA,WAEA,IAEAqU,SAOA9F,KATA7J,GAAA3N,IAAAC,KAAAC,YAKA2qB,aACA,GAAA,GAAA,GAAA,GAAA,GACA,GAAA,GAAA,GAAA,GAAA,KAIArT,SAEA3U,KAAA,8BACA2U,KAAA3U,KAAA,UAEA2U,KAAA3U,KAAA,wCAEA2U,KAAA3U,KAAA,8BACA2U,KAAA3U,KAAA,qFACA2U,KAAA3U,KAAA,qDACA2U,KAAA3U,KAAA,UAEA2U,KAAA3U,KAAA,6BAIA2U,KAAA3U,KAAA,UAEAya,SAAA9F,KAAAzU,KAAA,KAGAyU,SAEA3U,KAAA,8BACA2U,KAAA3U,KAAA,UAEA2U,KAAA3U,KAAA,8BACA2U,KAAA3U,KAAA,yFACA2U,KAAA3U,KAAA,UAGA2U,KAAAzU,KAAA,IAKA,IAAA+nB,eAAA,SAAA9pB,GACA,GAAAA,EAAA,GACA,OAAA,EAEA,GAAAA,EAAA,IACA,OAAA,EAEA,GAAAA,EAAA,IACA,OAAA,EAEA,GAAAA,EAAA,IACA,OAAA,EAKA,IAFA,IAAAZ,EAAA,EACAwgB,EAAA5f,EACA4f,EAAA,GACAxgB,IACAwgB,EAAApf,KAAAkB,MAAAke,EAAA,IAEA,OAAAxgB,GAQA2qB,eAAA,SAAAnE,IAAAoE,OAAA7Y,KAAA8Y,UAAAzH,QAAA/C,OACA,IAAAuK,QAIApE,IAAA5I,OACA4I,IAAAjG,QAAAxO,WACAtL,IAAA4Z,MACAmG,IAAAlG,QAAAD,MAEA+C,QACAoD,IAAAtU,SAGAsU,IAAAnD,WAEAmD,IAAAqE,UAAAA,WAdArE,IAAA7I,QAuBAmN,oBAAA,SAAAjY,IAAA5L,QAAAkF,OACA,IAAA3J,IAAAjB,GAAAC,KA4DA,OA1DAgB,KACA2J,MAAAA,MACAiX,SAAA,EACAG,UAAA,EACAhR,GAAA3S,IAAA8I,IAAAmK,MAGArQ,IAAAuoB,SAAA,WACA,OAAAvoB,IAAA2J,OAEA3J,IAAA2iB,SAAA,SAAAvkB,GACA4B,IAAA2J,MAAAvL,GAEA4B,IAAA+d,QAAA,SAAAyK,IACAxoB,IAAA+P,GAAAV,OAAAmZ,IAAA,KAEAxoB,IAAA0P,OAAA,WACA1P,IAAA4gB,SACA5gB,IAAA+P,GAAAQ,aAAA,WAAA,GAEAvQ,IAAA4gB,SAAA,GAEA5gB,IAAA6gB,SAAA,WACA7gB,IAAA4gB,SACA5gB,IAAA+P,GAAA+Q,gBAAA,WAEA9gB,IAAA4gB,SAAA,GAEA5gB,IAAA6P,OAAA,WACA7P,IAAA+gB,WACA/gB,IAAA+gB,UAAA,EACA/gB,IAAA+P,KACA/P,IAAA+P,GAAAC,YAAA,kBACAhQ,IAAA+P,GAAAM,IAAA0Q,UAAA,KAIA/gB,IAAA4P,QAAA,WACA5P,IAAA+gB,WACA/gB,IAAA+gB,UAAA,EACA/gB,IAAA+P,KACA/P,IAAA+P,GAAAE,SAAA,kBACAjQ,IAAA+P,GAAAM,IAAA0Q,UAAA,KAIA/gB,IAAAmb,KAAA,WACAnb,IAAA+P,GAAAoL,QAEAnb,IAAAob,KAAA,WACApb,IAAA+P,GAAAqL,QAEApb,IAAA+P,GAAA+L,aAAA,WAEA9b,IAAA+P,GAAAjI,GAAA,QAAA,WACArD,QAAA+E,KAAAzK,GAAAiB,OAGAA,KASAyoB,6BAAA,SAAAJ,UAAAK,WACA,IAOA1E,IAPAjlB,GAAAC,KACAwnB,KAAAznB,GAAA4pB,SACAC,IAAAP,UAAA,EACAQ,GAAA,EACA7qB,OAAAwoB,KAAAxoB,OACAwK,EAAA,EACAE,IAAA1K,OAAA0qB,UAAA1qB,OAAA0qB,UAAA,EAMA,KAHA1E,IAAAwC,KAAAxoB,OAAA,IACA+R,GAAAC,YAAA,gBAEAxH,EAAAE,IAAAF,IACAwb,IAAAwC,KAAAhe,GAEA2f,eAAAnE,KAAA,GADA6E,GAAArgB,EAAA,GACA,GAAAqgB,GAAAA,KAAAD,KAAA,GAGA,GAAAF,UAAA,EAEA,IADA3pB,GAAA+pB,QAAA3N,OACA3S,EAAAxK,OAAAwK,IACAwb,IAAAwC,KAAAhe,GACA2f,eAAAnE,KAAA,QAIAjlB,GAAA+pB,QAAA1N,OACArc,GAAA+pB,QAAA/K,QAAA2K,WACAE,MAAAF,UACA3pB,GAAA+pB,QAAApZ,SAGA3Q,GAAA+pB,QAAAjI,YAWAkI,8BAAA,SAAAV,UAAAK,WAEA,IAGAG,GAAAG,IAAAC,IAEAzgB,EAAAE,IAAAsb,IALAjlB,GAAAC,KACAwnB,KAAAznB,GAAA4pB,SACAC,IAAAP,UAAA,EAEArqB,OAAAwoB,KAAAxoB,OAaA,GAVAe,GAAA+pB,QAAA1N,OACArc,GAAA+pB,QAAA/K,QAAA2K,WAEAE,MAAAF,UACA3pB,GAAA+pB,QAAApZ,SAGA3Q,GAAA+pB,QAAAjI,WAGAwH,UAAA,EAAA,CAKA,IAHArE,IAAAwC,KAAA,GACA2B,eAAAnE,KAAA,EAAA,IAAA,EAAA,IAAA4E,KAAA,GACA5E,IAAAjU,GAAAC,YAAA,gBACAxH,EAAA,EAAAE,IAAA1K,OAAA,EAAAwK,EAAAE,IAAAF,IACAqgB,GAAArgB,EAAA,EACAwb,IAAAwC,KAAAhe,GACA2f,eAAAnE,KAAA,EAAA6E,GAAA,GAAAA,GAAAA,KAAAD,KAEA5E,IAAAwC,KAAA9d,KACAyf,eAAAnE,KAAA,EAAA,GAAA,GAAA,GAAA,KAAA,kBACAA,IAAAjU,GAAAE,SAAA,qBAEA,GAAAoY,UAAAK,UAAA,EAAA,CAKA,IAJAM,IAAAN,UAAA,EACA1E,IAAAwC,KAAA,GACA2B,eAAAnE,KAAA,EAAA,GAAAgF,KAAA,GAAA,KAAA,kBACAhF,IAAAjU,GAAAE,SAAA,gBACAzH,EAAA,EAAAE,IAAA1K,OAAA,EAAAwK,EAAAE,IAAAF,IACAqgB,GAAArgB,EAAAwgB,IACAhF,IAAAwC,KAAAhe,GACA2f,eAAAnE,KAAA,EAAA6E,GAAA,GAAAA,GAAAA,KAAAD,KAEA5E,IAAAwC,KAAA9d,KAEAyf,eAAAnE,KAAA,GADAiF,IAAAP,UAAA,GACA,GAAAO,IAAAA,MAAAL,KAAA,GACA5E,IAAAjU,GAAAC,YAAA,oBAIA,CAOA,IANAgZ,IAAAX,UAAA,EACAY,IAAAZ,UAAA,EAEArE,IAAAwC,KAAA,GACA2B,eAAAnE,KAAA,EAAA,GAAAgF,IAAA,GAAA,GAAA,KAAA,kBACAhF,IAAAjU,GAAAE,SAAA,gBACAzH,EAAA,EAAAE,IAAA1K,OAAA,EAAAwK,EAAAE,IAAAF,IACAqgB,GAAArgB,EAAAwgB,IACAhF,IAAAwC,KAAAhe,GACA2f,eAAAnE,KAAA,EAAA6E,GAAA,GAAAA,GAAAA,KAAAD,KAGA5E,IAAAwC,KAAA9d,KACAyf,eAAAnE,KAAA,EAAA,GAAAiF,IAAA,GAAA,GAAA,KAAA,kBACAjF,IAAAjU,GAAAE,SAAA,kBASAiZ,kBAAA,SAAAb,UAAAK,WACA,IAIAlgB,EAJAzJ,GAAAC,KACAmqB,cAAAT,UAAA,EACAlC,KAAAznB,GAAA4pB,SACA3qB,OAAAwoB,KAAAxoB,OAgBA,GAbAqqB,UAAA,EACAtpB,GAAAqqB,YAAAvZ,SAGA9Q,GAAAqqB,YAAAxZ,UAGAyY,UAAAc,cACApqB,GAAAsqB,WAAAxZ,SAGA9Q,GAAAsqB,WAAAzZ,UAEA8Y,UAAA,EAQA,IANA3pB,GAAAuqB,OAAAja,OAAA,OACAtQ,GAAAwqB,eAAAlZ,IAAA0Q,UAAA,EACAhiB,GAAAyqB,YAAA5Z,UAEA7Q,GAAA0qB,SAAAtO,OACApc,GAAA+pB,QAAA3N,OACA3S,EAAA,EAAAA,EAAAxK,OAAAwK,IACAge,KAAAhe,GACA2S,YAKApc,GAAAuqB,OAAAja,OAAA,IAAAqZ,UAAA,KACA,IAAAA,WACA3pB,GAAAwqB,eAAAlZ,IAAA0Q,UAAA,EACAhiB,GAAAyqB,YAAA5Z,YAGA7Q,GAAAwqB,eAAAlZ,IAAA0Q,UAAA,EACAhiB,GAAAwqB,eAAAlZ,IAAAqZ,UAAAxB,eAAAQ,WACA3pB,GAAAyqB,YAAA3Z,UAGA9Q,GAAA0qB,SAAArO,OACA,IAAAiN,UACAtpB,GAAA0qB,SAAA/Z,SAGA3Q,GAAA0qB,SAAA5I,WAGA6H,UAAA,GACAD,6BAAAjf,KAAAzK,GAAAspB,UAAAK,WAGAK,8BAAAvf,KAAAzK,GAAAspB,UAAAK,YAIAtrB,IAAA6D,OAAA,iBACA2H,OAAA,aACA0E,UACA,aACA,oBACA,mBAEA2B,KAAA,EACA/N,QAAA,SAAAqM,IAAAC,MACA,IAAA8S,WAAA/S,IAAA3N,UACA+pB,YAAAnc,KAAA,GAEAoc,QADApc,KAAA,GACAA,KAAA,IACA,OAAApQ,IAAAwL,OAAA2E,KASAsc,cAAA,SAAAlc,IACAA,GAAAA,OACA,IAAA5O,GAAAC,KACAV,GAAAoB,IAAAiO,GAAA0a,WAAA1a,GAAA0a,UAAA,EACAyB,GAAApqB,IAAAiO,GAAAoc,UAAApc,GAAAoc,SAAA,EAEAb,kBAAA1f,KAAAzK,GAAAT,GAAAwrB,IACA/qB,GAAAspB,UAAA/pB,GACAS,GAAAgrB,SAAAD,IAMAE,aAAA,WACA,OAAAhrB,KAAAqpB,WAMA4B,aAAA,WACA,OAAAjrB,KAAAkrB,WAMAha,cAAA,WACA,IAAAnR,GAAAC,KACAiQ,IAAAlQ,GAAAkQ,IACArN,IAAAqN,KACAA,IAAAkB,QAAA,WAGAlB,IADAxP,IAAAwP,MACA,UAAAA,KAGA,UAEAlQ,GAAAkQ,IAAAA,IACAqR,WAAApQ,cAAA1G,KAAAzK,IAEAA,GAAAuK,UASA,cASA,eAEA2F,IAAAlQ,GAAAorB,gBACAvoB,IAAAqN,MAAA,IAAAA,IAAAjR,OAIAiR,IAAAjR,OAAA,IACAiR,IAAAA,IAAAnF,MAAA,EAAA,IAJAmF,KAAA,GAAA,GAAA,IAOAlQ,GAAAorB,gBAAAlb,IAEAA,IAAAlQ,GAAAmrB,YACAxqB,IAAAuP,MAAAlQ,GAAAorB,gBAAAzsB,QAAAuR,KAAA,KACAA,IAAAlQ,GAAAorB,gBAAA,IAEAprB,GAAAmrB,UAAAjb,IAEAlQ,GAAAgrB,SAAArqB,IAAAX,GAAAgrB,UAAAhrB,GAAAgrB,SAAA,EAEAhrB,GAAAspB,UAAA3oB,IAAAX,GAAAspB,WAAAtpB,GAAAspB,UAAA,GAMAjY,SAAA,WACA,IAAArR,GAAAC,KACAshB,WAAAlQ,SAAA5G,KAAAzK,IACAA,GAAAqrB,qBAGAlB,kBAAA1f,KAAAzK,GAAAA,GAAAspB,UAAAtpB,GAAAgrB,WAMAK,mBAAA,WACA,IACA/Z,IAAA+L,IAAA4H,IADAjlB,GAAAC,KACAwnB,QAgBA,IAVAnW,IALAtR,GAAAgR,GAAA4E,aACA1F,IAAA,cACA2F,KAAA8F,WAGArK,IAEAtR,GAAAsrB,OAAAjtB,IAAA8I,IAAAmK,IAAAG,YAGAzR,GAAAqqB,YAAArqB,GAAAurB,UAAA,eAAArmB,EAAA,iBAAA,KAAA,mBAAAlF,GAAAwrB,gBAEAxrB,GAAA0qB,SAAA1qB,GAAAurB,UAAA,QAAA,SAAArmB,OAAAA,EAAAlF,GAAAyrB,aAGAhiB,EAAA,EAAAA,EAAA,EAAAA,IACAoB,EAAA,OAAApB,EACA,GAAAA,EACAge,KAAAvmB,KAAAlB,GAAAurB,UAAA1gB,EAAA,EAAApB,EAAA,QAAAvE,OAAAA,EAAAlF,GAAA0rB,cAGAjE,KAAAvmB,KAAAlB,GAAAurB,UAAA1gB,OAAA3F,EAAA,gBAAA,KAAA,iBAAAlF,GAAA0rB,cAIA1rB,GAAA+pB,QAAA/pB,GAAAurB,UAAA,OAAA,WAAArmB,OAAAA,EAAAlF,GAAA2rB,YAGA3rB,GAAAsqB,WAAAtqB,GAAAurB,UAAA,gBAAArmB,EAAA,iBAAA,KAAA,oBAAAlF,GAAA4rB,eAEA5rB,GAAA4pB,SAAAnC,KAGAznB,GAAAuqB,OAAAlsB,IAAA8I,IAAAmK,IAAAI,WAAA,IAGA2L,IAAA/L,IAAAI,WAAA,GAAAA,WACA1R,GAAAwqB,eAAAnsB,IAAA8I,IAAAkW,IAAA,IACArd,GAAA6rB,OAAA,IAAAhB,OAAA7qB,GAAAwqB,eAAA,YACAxqB,GAAA6rB,OAAAriB,OAAA,GAAAxJ,GAAA8rB,WAAA9rB,IACA,IAAA,IAAAyJ,EAAA,EAAAA,EAAA,GAAAA,IACAzJ,GAAA6rB,OAAAriB,OAAA0f,YAAAzf,IAQA,GANAzJ,GAAA6rB,OAAA3iB,kBACAlJ,GAAA6rB,OAAA/iB,eACA9I,GAAAyqB,YAAAlB,oBAAA9e,KAAAzK,GAAAqd,IAAA,GAAArd,GAAA8rB,aAIA9rB,GAAA+rB,mBAEA,IADAza,IAAAA,IAAAI,WAAA,GACAjI,EAAA,EAAAE,IAAA3J,GAAAorB,gBAAAnsB,OAAAwK,EAAAE,IAAAF,IACA4T,IAAArd,GAAAorB,gBAAA3hB,IACAwb,IAAA,IAAA2F,aACA1a,IAAA,kBACAtF,MAAAyS,IACA7M,KAAA6M,IACA6E,QAAA,KAAA7E,IAAA,IACA3X,QAAA1F,GAAAgsB,qBACAjmB,MAAA/F,MAEAuS,OAAAjB,KACAtR,GAAAmrB,YAAA9N,MACArd,GAAAisB,kBAAAhH,IACAA,IAAAtU,WASA4a,UAAA,SAAA5gB,IAAA6F,KAAAN,IAAA4O,KAAAoN,SACA,IAAAlsB,GAAAC,KACAglB,IAAA,IAAA2F,aACAjgB,IAAAA,IACA6F,KAAAA,KACAN,IAAAA,IACA4O,KAAAA,KACApZ,QAAAwmB,QACAnmB,MAAA/F,KAIA,OADAilB,IAAA1S,OAAAvS,GAAAsrB,QACArG,KAMA+G,qBAAA,SAAA/G,KACA,IAAAjlB,GAAAC,KACA2K,MAAAqa,IAAAra,MACAuE,MAAAnP,GAAAkrB,eAEAtgB,QAAAuE,QAGAnP,GAAAmrB,UAAAvgB,OACA,IAAA5K,GAAAsL,UAAA,cAAAV,MAAAuE,MAAAnP,KACAA,GAAAisB,kBAAAnK,WACAmD,IAAAtU,SACA3Q,GAAAisB,kBAAAhH,KAGAjlB,GAAAmrB,UAAAhc,QAOAgd,qBAAA,SAAA7C,WACA,IAAAtpB,GAAAC,KACAD,GAAAsL,UAAA,cAAAge,UAAAtpB,GAAAirB,eAAAjrB,KAKAwrB,eAAA,SAAAvG,KAEA,IAAAjlB,GAAAC,KACAV,GAAAS,GAAAirB,eAAA,EACA1rB,IAAA,GACAS,GAAAmsB,qBAAA5sB,KAMAqsB,cAAA,WACA,IAAA5rB,GAAAC,KACAV,GAAAS,GAAAirB,eAAA,EAEA1rB,GAAAS,GAAAgrB,UACAhrB,GAAAmsB,qBAAA5sB,KAMAosB,WAAA,WACA,IAAA3rB,GAAAC,KACAV,GAAAS,GAAAgrB,SAAA,EAEAhrB,GAAAirB,iBAAA1rB,IACAS,GAAAmsB,qBAAA5sB,KAMAksB,YAAA,SAAAxG,KACA,IAAAjlB,GAAAC,KACA,IAAAD,GAAAirB,gBACAjrB,GAAAmsB,qBAAA,IAMAT,YAAA,SAAAzG,KACA,IAAAjlB,GAAAC,KACAV,GAAA0lB,IAAAqE,UACAtpB,GAAAmsB,qBAAA5sB,GAAA,IAKAusB,WAAA,WACA,IAAA9rB,GAAAC,KACAV,GAAAS,GAAAwqB,eAAAlZ,IAAA1G,OACArL,GAAAyM,GAAAtM,UAAAH,GAAA,IACA,GAAAA,IAAAS,GAAAgrB,UACAhrB,GAAAmsB,qBAAA5sB,GAAA,YCloBA,WACA,IAAAoc,YAAAyQ,aACAzQ,SAAAza,KAAA,6BAEAya,SAAAza,KAAA,6BACAya,SAAAza,KAAA,qFACAya,SAAAza,KAAA,qCACAya,SAAAza,KAAA,UAGAya,SAAAza,KAAA,kEACAya,SAAAza,KAAA,oCACAya,SAAAza,KAAA,0EACAya,SAAAza,KAAA,oCACAya,SAAAza,KAAA,gBAGAya,SAAAza,KAAA,sCACAya,SAAAza,KAAA,UAEAya,SAAAA,SAAAva,KAAA,IAIAgrB,UAAAlrB,KAAA,oCACAkrB,UAAAlrB,KAAA,qCACAkrB,UAAAlrB,KAAA,yCACAkrB,UAAAlrB,KAAA,wCACAkrB,UAAAlrB,KAAA,gBACAkrB,UAAAA,UAAAhrB,KAAA,IAEA/C,IAAA6D,OAAA,aACA2H,OAAA,eACA0E,UACA,cAEA2B,KAAA,EACA/N,QAAA,SAAAqM,IAAAC,MACA,IAAA8S,WAAA/S,IAAA3N,UACA+pB,YAAAnc,KAAA,GAEA,OAAApQ,IAAAwL,OAAA2E,KAMA6d,SAAA,SAAA1D,KACA,IAAA3oB,GAAAC,KACAD,GAAAgR,IAMAhR,GAAAugB,OAEAvgB,GAAAugB,KAAAvgB,GAAA+U,IAAAa,aACA1F,IAAA,eACA2F,KAAAuW,YAEApsB,GAAAugB,KAAAxD,aAAA,WACA/c,GAAAssB,QAAAjuB,IAAA8I,IAAAnH,GAAAugB,KAAAjP,IAAAG,WAAAA,WAAAC,WAAA,KAEA1R,GAAAssB,QAAAhc,OAAAqY,KAAA,UACA3oB,GAAAugB,KAAAlE,QAdArc,GAAAssB,QAAA3D,KAmBA4D,SAAA,WACA,IAAAvsB,GAAAC,KACAD,GAAAugB,MACAvgB,GAAAugB,KAAAnE,QAOAjL,cAAA,WACA,IAAAnR,GAAAC,KACAiQ,IAAAlQ,GAAAkQ,IACArN,IAAAqN,KACAA,IAAAkB,QAAA,WAGAlB,IADAxP,IAAAwP,MACA,UAAAA,KAGA,UAEAlQ,GAAAkQ,IAAAA,IACAqR,WAAApQ,cAAA1G,KAAAzK,KAQAqR,SAAA,WACA,IAAAC,IAAAtR,GAAAC,MAEA,IAAAD,GAAAwsB,QACAxsB,GAAAgR,GAAAE,SAAA,mBAEA,IAAAlR,GAAAysB,OACAzsB,GAAAgR,GAAAE,SAAA,kBAEA,IAAAlR,GAAA6hB,SACA7hB,GAAAgR,GAAAE,SAAA,mBAIAlR,GAAAgR,GAAAV,OAAAqL,UACArK,IAAAtR,GAAAgR,GAAAM,IAAAG,WACAzR,GAAA+U,IAAA1W,IAAA8I,IAAAmK,KAGAA,IAAAtR,GAAAgR,GAAAM,IAAAG,WAAAA,WACAzR,GAAA0sB,OAAAruB,IAAA8I,IAAAmK,KACAA,IAAAA,IAAAG,WACAzR,GAAA2sB,aAAAtuB,IAAA8I,IAAAmK,IAAAG,YACAzR,GAAA4sB,aAAAvuB,IAAA8I,IAAAmK,IAAAI,WAAA,IAIAJ,IAAAtR,GAAAgR,GAAAM,IAAAG,WAAAC,WAAA,GACA1R,GAAA6sB,UAAAxuB,IAAA8I,IAAAmK,KACAA,IAAAA,IAAAG,WACAzR,GAAA8sB,QAAAzuB,IAAA8I,IAAAmK,IAAAG,YACAzR,GAAAuX,KAAAlZ,IAAA8I,IAAAmK,IAAAI,WAAA,GAAAD,YACAzR,GAAA+sB,QAAA1uB,IAAA8I,IAAAmK,IAAAI,WAAA,IAGAJ,IAAAtR,GAAAgR,GAAAM,IAAAG,WAAAC,WAAA,GACA1R,GAAAgtB,UAAA3uB,IAAA8I,IAAAmK,KAGAtR,GAAAitB,YACAjtB,GAAAktB,eACAltB,GAAAmtB,eAGA5L,WAAAlQ,SAAA5G,KAAAzK,IAEAA,GAAAotB,UACAptB,GAAAgR,GAAAE,SAAA,qBAQAgK,gBAAA,WACA,OAAAjb,KAAAsX,MAMA0V,UAAA,WACA,IAAAjtB,GAAAC,MACA,IAAAD,GAAA6nB,UACA7nB,GAAAgR,GAAAE,SAAA,mBAGAxQ,IAAAV,GAAA8e,OAAAjc,IAAA7C,GAAA8e,QACA9e,GAAA2sB,aAAAzb,SAAAlR,GAAA8e,MAEApe,IAAAV,GAAAwnB,QACAxnB,GAAA4sB,aAAAtc,OAAAtQ,GAAAwnB,SAQA0F,aAAA,WACA,IAAAltB,GAAAC,KAEAD,GAAAqtB,UACArtB,GAAA6sB,UAAA3b,SAAA,oBAGAlR,GAAAstB,MAEAzqB,IAAA7C,GAAAstB,OAQAxqB,IAAA9C,GAAAstB,OAAA1rB,IAAA5B,GAAAstB,KAAA/a,QAIA3Q,IAAA5B,GAAAstB,KAAA/a,SACAvS,GAAAstB,KAAA/a,OAAAvS,GAAA8sB,UAIA9sB,GAAA6sB,UAAA3b,SAAA,kBAGAlR,GAAAutB,KAEA3rB,IAAA5B,GAAAutB,KAAAhb,SACAvS,GAAAstB,KAAA/a,OAAAvS,GAAA+sB,SAIA/sB,GAAA6sB,UAAA3b,SAAA,mBAOAic,aAAA,WACA,IAAAntB,GAAAC,KACA,GAAA4C,IAAA7C,GAAAwtB,SAEA,IADA,IAAApuB,EAAAqK,EAAA,EAAAE,IAAA3J,GAAAwtB,QAAAvuB,OACAwK,EAAAE,IAAAF,KACArK,EAAAY,GAAAwtB,QAAA/jB,MAEA7H,IAAAxC,EAAAmT,UACAnT,EAAA,IAAAwrB,YAAAxrB,IAEAA,EAAAmT,OAAAvS,GAAAgtB,iBAKAhtB,GAAAgR,GAAAE,SAAA,6BCvPA,WACA,IAEAyK,SAFA5E,GAAA1Y,IAAAC,KAAA0Y,UACAhL,GAAA3N,IAAAC,KAAAC,YAEAsX,QAGAA,KAAA3U,KAAA,2BACA2U,KAAA3U,KAAA,6BACA2U,KAAA3U,KAAA,4BACA2U,KAAA3U,KAAA,8CACA2U,KAAA3U,KAAA,6BACA2U,KAAA3U,KAAA,gBACA2U,KAAA3U,KAAA,yCACA2U,KAAA3U,KAAA,UAEAya,SAAA9F,KAAAzU,KAAA,IAWA,IAqHAqsB,sBAAA,SAAAC,IAAAC,IAAAC,IAIA,OACAC,IAJAH,IAAA,GAAAC,IAAAtb,MACAqb,IAAA,IAIAI,SAAA,kBAwBAC,cACAhD,GApJA,SAAA2C,IAAAC,IAAAC,IAIA,OACAC,IAJAH,IAAA,GACAA,IAAA,GAAAE,GAAAI,QAIAF,SAAA,kBA+IAhV,GAlIA,SAAA4U,IAAAC,IAAAC,IAIA,OACAC,IAJAH,IAAA,GAAAE,GAAAvb,MAAAsb,IAAAtb,MACAqb,IAAA,GAAAE,GAAAI,QAIAF,SAAA,kBA6HAG,GAhHA,SAAAP,IAAAC,IAAAC,IAIA,OACAC,IAJAH,IAAA,GACAA,IAAA,GAAAC,IAAAK,QAIAF,SAAA,kBA2GAI,GA9FA,SAAAR,IAAAC,IAAAC,IAIA,OACAC,IAJAH,IAAA,GAAAE,GAAAvb,MAAAsb,IAAAtb,MACAqb,IAAA,GAAAC,IAAAK,QAIAF,SAAA,kBAyFAK,GA3EA,SAAAT,IAAAC,IAAAC,IAIA,OACAC,IAJAH,IAAA,GAAAE,GAAAvb,MACAqb,IAAA,IAIAI,SAAA,kBAsEAM,GAxDA,SAAAV,IAAAC,IAAAC,IAIA,OACAC,IAJAH,IAAA,GAAAE,GAAAvb,MACAqb,IAAA,GAAAC,IAAAK,OAAAJ,GAAAI,QAIAF,SAAA,kBAmDAO,GAAAZ,sBACAa,GAlBA,SAAAZ,IAAAC,IAAAC,IAIA,OACAC,IAJAH,IAAA,GAAAC,IAAAtb,MACAqb,IAAA,GAAAC,IAAAK,OAAAJ,GAAAI,QAIAF,SAAA,mBAoBAS,wBAAA,SAAAb,IAAAC,IAAAC,IACA,IAAA5tB,GAAAC,KAYA,OADAwtB,sBAAAhjB,KAAAzK,GAAA0tB,IAAAC,IAAAC,KAaAY,kBAAA,SAAA1mB,OAAA2mB,IAAAC,WACA,IAEAhB,IAAAC,IAAArc,IAAA8R,GAAAniB,IAFAjB,GAAAC,KACA2tB,GAAA5tB,GAAAgR,GAAA2d,UAEA,QAAA7mB,SAGA8mB,IAAA9mB,QACAwJ,IAAAxJ,OAEAhF,IAAAgF,QAGAwJ,IADA1P,IAAAkG,OAAAyK,QACAzK,OAAAkJ,GAAAM,IAGAxJ,OAAAwJ,IAGA5Q,IAAAoH,UACAwJ,IAAAud,SAAAC,eAAAhnB,WAGAwJ,MAGAoc,IAAA3W,GAAAgY,MAAAzd,KACAqc,KACAtb,MAAA0E,GAAA5B,SAAA7D,KACA0c,OAAAjX,GAAA4B,UAAArH,MAEA8R,GAAA2K,aAAAU,KACA7sB,IAAAwhB,MACAA,GAAAmL,yBAEAttB,IAAAmiB,GAAA3Y,KAAAzK,GAAA0tB,IAAAC,IAAAC,KACA,IAAAc,YACAztB,IAAA6sB,SAAA,iBAEA7sB,OAIA5C,IAAA6D,OAAA,eACA2H,OAAA,aACAqG,KAAA,EACA/N,QAAA,SAAAqM,IAAAC,MACA,IAAAjE,WAAAgE,IAAA3N,UACA,OAAAxC,IAAAwL,OAAA2E,KAmBAwgB,OAAA,SAAAhe,GAAAyd,IAAAC,WACA,IAAA1uB,GAAAC,KACA,IAAAD,GAAAyZ,SAKA,OAJAzZ,GAAAuS,OAAAlU,IAAAkqB,gBACArkB,OAAA4C,WAAA,WACA9G,GAAAgvB,OAAAhe,GAAAyd,IAAAC,YACA,IAIA1uB,GAAAqc,OAEA,IACAhd,EADA4vB,GAAAT,kBAAA/jB,KAAAzK,GAAAgR,GAAAyd,IAAAC,WAEAO,KAKA5vB,EAAA4vB,GAAAnB,SACA9tB,GAAAkvB,YAAA7vB,IACAW,GAAAkvB,WACAlvB,GAAAgR,GAAAC,YAAAjR,GAAAkvB,WAEAlvB,GAAAgR,GAAAE,SAAA7R,GACAW,GAAAkvB,UAAA7vB,GAIAA,EAAA4vB,GAAApB,GACA7tB,GAAAgR,GAAAkF,UACAiZ,KAAA9vB,EAAA,GAAA,KACA+vB,IAAA/vB,EAAA,GAAA,OAGAW,GAAAsL,UAAA,OAAAtL,MAMAqc,KAAA,WACA,IAAArc,GAAAC,KACAuK,WAAA6R,KAAA5R,KAAAzK,IACAA,GAAAqvB,cACArvB,GAAAqvB,aAAA/oB,OAOA8V,KAAA,WACA,IAAApc,GAAAC,KACAD,GAAAqvB,cACArvB,GAAAqvB,aAAAhpB,SAEAmE,WAAA4R,KAAA3R,KAAAzK,IAEAA,GAAAsL,UAAA,OAAAtL,KASAiiB,WAAA,SAAAqN,KACA,IACA7F,GAAA8F,GADAvvB,GAAAC,KAGA,GAAAD,GAAAyZ,SAcA,GATA/Y,IAAA4uB,KACA7F,GAAA6F,IAEAxsB,IAAAwsB,OACA7F,GAAA6F,IAAA9e,KACA+e,GAAAD,IAAAxQ,MAGA9e,GAAA0X,QAAApH,OAAAmZ,IAAA,UACA/oB,IAAA6uB,KAAA1sB,IAAA0sB,IAAA,CACAvvB,GAAAgR,GAAAC,YAAA,gBAEA,IAAA4I,IAAA,cACAnZ,IAAA6uB,IACA1V,GAAA3Y,KAAAquB,IAGA1V,GAAAA,GAAAnR,OAAA6mB,IAGAvvB,GAAAwd,QAAAE,SAAA7D,SAGA7Z,GAAAgR,GAAAE,SAAA,qBA3BAlR,GAAAwvB,QAAAF,KAkCAne,cAAA,WACA,IAAA9R,EAAAW,GAAAC,KACAuK,WAAA2G,cAAA1G,KAAAzK,IACA,IAAAkQ,KAAA,SACAxP,IAAAV,GAAAkQ,KACAA,IAAAhP,KAAAlB,GAAAkQ,KAEArN,IAAA7C,GAAAkQ,OACAA,IAAAA,IAAAxH,OAAA1I,GAAAkQ,MAEAlQ,GAAAkQ,IAAAA,IAEAlQ,GAAAuK,UAMA,OAMA,QAIAvK,GAAAyvB,UAAA,IAAAzvB,GAAAyvB,SAEApwB,EAAAW,GAAAyvB,SAAA,EAAA,KACApwB,EAAA2M,GAAAtM,UAAAM,GAAA0vB,eAAArwB,IACA,MAEAW,GAAAqvB,aAAA,IAAAhxB,IAAAC,KAAAmH,aACAc,MAAAlH,EACAqG,QAAA1F,GAAAoc,KACArW,MAAA/F,YAEAA,GAAA0vB,iBAOAre,SAAA,WACA,IAAAgM,IAAArd,GAAAC,KAgBA,GAfAuK,WAAA6G,SAAA5G,KAAAzK,IACAA,GAAAgR,GAAA+L,aAAA,WACA/c,GAAAgR,GAAAV,OAAAqL,UACA0B,IAAArd,GAAAgR,GAAAM,IAAAG,WAAAA,WAAAC,WAEA1R,GAAA+U,IAAA1W,IAAA8I,IAAAnH,GAAAgR,GAAAM,IAAAG,YACAzR,GAAAwd,QAAAnf,IAAA8I,IAAAkW,IAAA,IACArd,GAAA0X,QAAArZ,IAAA8I,IAAAkW,IAAA,IACArd,GAAA2vB,SAAAtxB,IAAA8I,IAAAkW,IAAA,IACArd,GAAA2vB,SAAA5mB,GAAA,QAAA/I,GAAA4vB,aAAA5vB,IAEAA,GAAAyvB,UACAzvB,GAAAgR,GAAAE,SAAA,iBAGAlR,GAAAwvB,QAAA,CACA,IAAA/F,GAAA8F,GACA7uB,IAAAV,GAAAwvB,SACA/F,GAAAzpB,GAAAwvB,QAEA1sB,IAAA9C,GAAAwvB,WACA/F,GAAAzpB,GAAAwvB,QAAAhf,KACA+e,GAAAvvB,GAAAwvB,QAAA1Q,MAGA9e,GAAA0X,QAAApH,OAAAmZ,IAAA,UACA8F,GACAvvB,GAAAwd,QAAAtM,SAAAqe,IAGAvvB,GAAAgR,GAAAE,SAAA,uBAEAlR,GAAAwvB,aAGAxvB,GAAAgR,GAAAE,SAAA,iBAMA0e,aAAA,WACA3vB,KAAAmc,gBCteA,WAEA,IA6CAyT,UAxCAC,aAAA,SAAA/a,IAAAgb,KACA,IAAAxX,GAAAxD,IAAAI,WACA6a,GAAAjb,IAAA4D,YAGAsX,GAAA1X,GAFAwX,IAAAhb,IAAAI,YAEA,EACAgQ,GAAA6K,GAFAD,IAAAhb,IAAA4D,aAEA,EAIA,OAHAsX,EAAAA,EAAA,EAAAA,EAAA,EACA9K,EAAAA,EAAA,EAAAA,EAAA,GAEA8K,EAAA9K,IAMA+K,iBAAA,SAAAH,IAAAlC,GAAAsC,UACA,IAAAF,EAAA9K,EACA,IAAA,IAAAgL,SACAJ,IAAA/e,GAAAmE,WACA4a,IAAA/e,GAAA2H,iBAGAsX,EAAApC,GAAA,GACA1I,EAAA0I,GAAA,GACAltB,IAAAsvB,KACAA,GAAA,MAEAtvB,IAAAwkB,KACAA,GAAA,MAGA4K,IAAA/e,GAAAkF,UACAkZ,IAAAjK,EACAgK,KAAAc,KAKAG,YAOAC,gBAAA,SAAAN,KACA,IAAAO,IAAA7mB,EAAAE,IAAA3J,GAAAC,KACA,GAAA8vB,IAMA,IALAO,IAAAP,IAAAjc,QACA+b,WACAO,SAAAlvB,KAAA2uB,WAGApmB,EAAA,EAAAE,IAAAymB,SAAAnxB,OAAAwK,EAAAE,IAAAF,IACA2mB,SAAA3mB,IAAA6mB,KACAF,SAAAtkB,OAAArC,EAAA,QAKA2mB,SAAAnxB,OAAA,IACAqxB,IAAAF,SAAAG,OAGA,GAAAD,IAAA,CACA,IAAAzY,IAAA,EASA,KARAkY,IAAA1xB,IAAAmyB,OAAAF,MACAG,QACA5Y,IAAA,GAEAkY,IAAA/e,GAAAC,YAAA,mBACA8e,IAAA/e,GAAAkF,SAAA,SA7EA,KA8EA2Z,UAAAS,IAEA7mB,EAAA,EAAAE,IAAAymB,SAAAnxB,OAAAwK,EAAAE,IAAAF,IACA6mB,IAAAF,SAAA3mB,IACAsmB,IAAA1xB,IAAAmyB,OAAAF,MACAG,QACA5Y,IAAA,GAEAkY,IAAA/e,GAAAE,SAAA,mBACA6e,IAAA/e,GAAAkF,SAAA,SArFA,MAqFAvM,IAAAF,GAEAoO,IACA7X,GAAAusB,gBAIAsD,WAAA,EACA7vB,GAAAusB,YAKAjlB,KAKAopB,cAAA,WAEA,IAAAnQ,KAAAjZ,IAAAqpB,WAWA,OAVApQ,QACAA,KAAAjZ,IAAAspB,gBAAAhb,aACA1F,IAAA,gBACAqG,OACAsa,OAhHA,IAGA,MAgHA9T,aAAA,WACAzV,IAAAqpB,WAAApQ,MAEAA,MAKAuQ,aAAA,SAAAf,OAUAgB,WAAA,SAAAhB,IAAAlC,GAAAsC,UACA,IAAApb,IAAAzN,IAAAspB,gBACAb,KAAAnuB,IAAAmuB,IAAAxd,SACAwd,IAAAxd,OAAAwC,KAGAgb,IAAA/e,GAAAkF,SAAA,UAAA,UAEA,IAAA6Z,IAAAU,OACAnpB,IAAA+kB,WAIAwB,KACAA,GAAAiC,aAAA/a,IAAAgb,KACAI,UAAA,GAGAD,iBAAAH,IAAAlC,GAAAsC,UAGAE,gBAAA5lB,KAAAnD,IAAAyoB,MAMAiB,WAAA,SAAAjB,KACA,IAAAA,MAAAA,IAAA/e,KAAApP,IAAAmuB,IAAA/e,GAAAoL,MACA,OAAA,EAEA,IAAAkU,IAAAP,IAAAjc,QAEA,GADAic,IAAA/e,GAAAoL,OACAyT,YAAAS,IACAT,WAAA,EACAQ,gBAAA5lB,KAAAnD,UAGA,IAAA,IAAAmC,EAAA,EAAAE,IAAAymB,SAAAnxB,OAAAwK,EAAAE,IAAAF,IACA2mB,SAAA3mB,IAAA6mB,KACAF,SAAAtkB,OAAArC,EAAA,GAIA,OAAA,GAMAmnB,cAAA,WACA,IAAA5wB,GAAAC,KAIA,OAHAD,GAAAixB,YACAjxB,GAAAixB,UAAA5yB,IAAAkqB,WAEAvoB,GAAAixB,WAKA5E,SAAA,WACA/kB,IAAAiZ,KAUAjZ,IAAAiZ,KAAAlE,QATA/U,IAAAiZ,KAAAjZ,IAAAspB,gBAAAhb,aACA1F,IAAA,aACAqG,OACAsa,OArMA,SAwMAvpB,IAAAiZ,KAAAxD,aAAA,aASAwP,SAAA,WACAjlB,IAAAiZ,MACAjZ,IAAAiZ,KAAAnE,SAKA/d,IAAA6D,OAAA,iBACAC,QAAA,SAAAqM,IAAAC,MACA,OAAAnH,UC5MA,WACA,IAIA4pB,UAIAjhB,KARA8G,GAAA1Y,IAAAC,KAAA0Y,WASA/G,SACA/O,KAAA,2BAEA+O,KAAA/O,KAAA,4BACA+O,KAAA/O,KAAA,+BACA+O,KAAA/O,KAAA,2GACA+O,KAAA/O,KAAA,mCACA+O,KAAA/O,KAAA,UACA+O,KAAA/O,KAAA,UAIA+O,KAAA/O,KAAA,6BACA+O,KAAA/O,KAAA,gCACA+O,KAAA/O,KAAA,gCACA+O,KAAA/O,KAAA,0BACA+O,KAAA/O,KAAA,4BAEA+O,KAAA/O,KAAA,sEAEA+O,KAAA/O,KAAA,sEACA+O,KAAA/O,KAAA,UACA+O,KAAA/O,KAAA,UACA+O,KAAA/O,KAAA,gCACA+O,KAAA/O,KAAA,gCACA+O,KAAA/O,KAAA,gCACA+O,KAAA/O,KAAA,gCACA+O,KAAA/O,KAAA,UAEA+O,KAAA/O,KAAA,UAEA+O,KAAA/O,KAAA,UACA+O,KAAAA,KAAA7O,KAAA,IAEA,IAAA+vB,oBAAA,SAAA7oB,IACA,IAAAtI,GAAAC,KACAqR,IAAAtR,GAAAgR,GAAAM,IACA8f,GAAA9oB,GAAAR,OAEAupB,IADAD,GAAAxU,UACAsU,UAAAR,iBAIA1wB,GAAA2Q,SAGA3Q,GAAAsxB,aACAjlB,IAAA+kB,GAAAxU,UACA2U,GAAAxa,GAAAya,eAAAlgB,IAAA,QACAmgB,GAAA1a,GAAAya,eAAAlgB,IAAA,OACAogB,GAAA3a,GAAA5B,SAAA7D,KACAqgB,GAAA5a,GAAA4B,UAAArH,KACAsgB,GAAAtpB,GAAAupB,QACAC,GAAAxpB,GAAAypB,SAGAV,GAAAtoB,GAAA,YAAAipB,oBAAAhyB,IACAqxB,GAAAtoB,GAAA,UAAAkpB,kBAAAjyB,IACAqxB,GAAAhV,OACAgV,GAAAnb,SAAA,SAAAa,GAAAmb,SAAAd,GAAA,YAEAY,oBAAA,SAAA1pB,IACA,IAAAtI,GAAAC,KACAqR,IAAAtR,GAAAgR,GAAAM,IACA/I,EAAAvI,GAAAsxB,YACAhpB,GAAAR,OAEA,GAAA,aAAAS,EAAA8D,IAAA,CAEA,IAAA8lB,IAAA7pB,GAAAupB,QAAAtpB,EAAAqpB,GACA3B,EAAA1nB,EAAAgpB,GAAAY,KACA1Z,EAAAlQ,EAAAmpB,GAAAS,MACAC,WACArb,GAAAb,SAAA5E,KACA6d,KAAAc,EAAA,KACA5d,MAAAoG,EAAA,YAIA,GAAA,aAAAlQ,EAAA8D,IAAA,CAEA8lB,IAAA7pB,GAAAupB,QAAAtpB,EAAAqpB,IACAnZ,EAAAlQ,EAAAmpB,GAAAS,MACAC,WACArb,GAAAb,SAAA5E,KACAe,MAAAoG,EAAA,YAIA,GAAA,aAAAlQ,EAAA8D,IAAA,CAEA8lB,IAAA7pB,GAAAypB,QAAAxpB,EAAAupB,IACA9X,EAAAzR,EAAAopB,GAAAQ,MAEAE,YACAtb,GAAAb,SAAA5E,KACA0c,OAAAhU,EAAA,YAIA,GAAA,aAAAzR,EAAA8D,IAAA,CAEA,IAAAimB,KAAAhqB,GAAAupB,QAAAtpB,EAAAqpB,GACAW,KAAAjqB,GAAAypB,QAAAxpB,EAAAupB,GACA7B,EAAA1nB,EAAAgpB,GAAAe,KACA7Z,EAAAlQ,EAAAmpB,GAAAY,KACAtY,EAAAzR,EAAAopB,GAAAY,KACArzB,GAAA,EACAuD,KACAgW,GAAA2Z,YACA3vB,EAAA0sB,KAAAc,EAAA,KACAxtB,EAAA4P,MAAAoG,EAAA,KACAvZ,GAAA,GAEA8a,GAAAqY,aACA5vB,EAAAurB,OAAAhU,EAAA,KACA9a,GAAA,GAEAA,GACA6X,GAAAb,SAAA5E,IAAA7O,QAGA,GAAA,aAAA8F,EAAA8D,IAAA,CAEA,IAAAimB,KAAAhqB,GAAAupB,QAAAtpB,EAAAqpB,GACAW,KAAAjqB,GAAAypB,QAAAxpB,EAAAupB,GACArZ,EAAAlQ,EAAAmpB,GAAAY,KACAtY,EAAAzR,EAAAopB,GAAAY,KACArzB,GAAA,EACAuD,KACAgW,GAAA2Z,YACA3vB,EAAA4P,MAAAoG,EAAA,KACAvZ,GAAA,GAEA8a,GAAAqY,aACA5vB,EAAAurB,OAAAhU,EAAA,KACA9a,GAAA,GAEAA,GACA6X,GAAAb,SAAA5E,IAAA7O,KAIAwvB,kBAAA,SAAA3pB,IACA,IAAAtI,GAAAC,KACAoxB,GAAAH,UAAAR,uBAEA1wB,GAAAsxB,YACAD,GAAApoB,GAAA,YAAA+oB,oBAAAhyB,IACAqxB,GAAApoB,GAAA,UAAAgpB,kBAAAjyB,IACAqxB,GAAAjV,OACApc,GAAAwyB,mBAKAC,kBAAA,SAAAnqB,IACA,IAAAtI,GAAAC,KACAqI,GAAAR,OACAwJ,IAAAtR,GAAAgR,GAAAM,IACA+f,GAAAH,UAAAR,gBAGA1wB,GAAA2Q,SAGA3Q,GAAA0yB,WACAnB,GAAAxa,GAAAya,eAAAlgB,IAAA,QACAmgB,GAAA1a,GAAAya,eAAAlgB,IAAA,OACAsgB,GAAAtpB,GAAAupB,QACAC,GAAAxpB,GAAAypB,SAEAV,GAAAtoB,GAAA,YAAA4pB,kBAAA3yB,IACAqxB,GAAAtoB,GAAA,UAAA6pB,gBAAA5yB,IACAqxB,GAAAhV,QAEAsW,kBAAA,SAAArqB,IACA,IAAAtI,GAAAC,KACAqR,IAAAtR,GAAAgR,GAAAM,IACA/I,EAAAvI,GAAA0yB,UAEAJ,KAAAhqB,GAAAupB,QAAAtpB,EAAAqpB,GACAW,KAAAjqB,GAAAypB,QAAAxpB,EAAAupB,GACA7B,EAAA1nB,EAAAgpB,GAAAe,KACAnN,EAAA5c,EAAAkpB,GAAAc,KACArzB,GAAA,EACAuD,KAEAwtB,GAAA,IACAxtB,EAAA0sB,KAAAc,EAAA,KACA/wB,GAAA,GAEAimB,GAAA,IACA1iB,EAAA2sB,IAAAjK,EAAA,KACAjmB,GAAA,GAEAA,GACA6X,GAAAb,SAAA5E,IAAA7O,IAGAmwB,gBAAA,SAAAtqB,IACA,IAAAtI,GAAAC,KACAoxB,GAAAH,UAAAR,uBACA1wB,GAAA0yB,UACArB,GAAApoB,GAAA,YAAA0pB,kBAAA3yB,IACAqxB,GAAApoB,GAAA,UAAA2pB,gBAAA5yB,IACAqxB,GAAAjV,QAEA/d,IAAA6D,OAAA,cACA2H,OAAA,aACA0E,UACA,aACA,iBAEA2B,KAAA,EACA/N,QAAA,SAAAqM,IAAAC,MACA,IAAAC,WAAAF,IAAA3N,UACAgyB,OAAApkB,KAAA,GAGA,OAFAyiB,UAAAziB,KAAA,GAEApQ,IAAAwL,OAAA2E,KAKAmC,OAAA,WACAugB,UAAAJ,aAAA7wB,OAUA6yB,SAAA,SAAAtL,OACA,IAAAxnB,GAAAC,KACAD,GAAAgoB,SACAhoB,GAAAgoB,SAAA1X,OAAAkX,OAAA,IAGAxnB,GAAAwnB,MAAAA,OAUAzI,QAAA,SAAAD,MACA,IAAA9e,GAAAC,KACA8U,IAAA/U,GAAAwd,QACAzI,KAGAA,IAAA+J,OAAAA,OAGA/J,IAAA+J,MACA/J,IAAA9D,YAAA8D,IAAA+J,MAEAA,MACA/J,IAAA7D,SAAA4N,MACA/J,IAAA+J,MACA9e,GAAA+yB,KAAA7hB,SAAA,uBAIA6D,IAAA+J,MACA9e,GAAA+yB,KAAA9hB,YAAA,sBAGA8D,IAAA+J,KAAAA,OASAkU,OAAA,SAAAnF,GAAAoF,UACA/B,UAAAH,WAAA9wB,KAAA4tB,GAAAoF,WAOA5W,KAAA,WACA,IAAArc,GAAAC,KACAixB,UAAAH,WAAA/wB,IACAA,GAAAsL,UAAA,OAAAtL,KAOAoc,KAAA,WACA,IAAApc,GAAAC,KACAixB,UAAAF,WAAAhxB,IACAA,GAAAsL,UAAA,OAAAtL,KAKAkzB,MAAA,WACA,IAAAlzB,GAAAC,KACAD,GAAAoc,OACApc,GAAAyb,WAMAtK,cAAA,WACA,IAAAnR,GAAAC,KACAyO,WAAAyC,cAAA1G,KAAAzK,IACA,IAAAkQ,KAAA,SACAxP,IAAAV,GAAAkQ,KACAA,IAAAhP,KAAAlB,GAAAkQ,KAEArN,IAAA7C,GAAAkQ,OACAA,IAAAA,IAAAxH,OAAA1I,GAAAkQ,MAEAlQ,GAAAkQ,IAAAA,IACAlQ,GAAAuK,UAMA,OAMA,SAOA8G,SAAA,WACA,IAAArR,GAAAC,KACAyO,WAAA2C,SAAA5G,KAAAzK,IACAA,GAAAgR,GAAA+L,aAAA,WACA/c,GAAAgR,GAAAV,OAAAL,MACAqB,IAAAtR,GAAAgR,GAAAM,IAAAG,WACAzR,GAAA+U,IAAA1W,IAAA8I,IAAAmK,MAEA,IAAAtR,GAAAmzB,UACAnzB,GAAAgR,GAAAE,SAAA,gBAEAlR,GAAAozB,WAAA,GAGApzB,GAAAqzB,SAAA/hB,KAGAtR,GAAAszB,SAAAhiB,KAEAxO,IAAA9C,GAAAwtB,UAAA3qB,IAAA7C,GAAAwtB,UAAAxtB,GAAAwtB,QAAAvuB,OAAA,EACAe,GAAAuzB,SAAAjiB,KAGAtR,GAAAgR,GAAAE,SAAA,iBAGA,IAAAlR,GAAAozB,UACApzB,GAAAwzB,gBAAAliB,KAGAtR,GAAAgR,GAAAE,SAAA,mBAOAmiB,SAAA,SAAAI,QACA,IAEAC,KAFA1zB,GAAAC,KACAqR,IAAAmiB,OAAAhiB,WAAAA,WAGAzR,GAAA+yB,KAAA10B,IAAA8I,IAAAmK,KAGAtR,GAAA2zB,UAAAt1B,IAAA8I,IAAAmK,IAAAG,YACAiiB,KAAApiB,IAAAG,WAAAA,WACAzR,GAAA4zB,WAAAv1B,IAAA8I,IAAAusB,MAGA1zB,GAAAwd,QAAAnf,IAAA8I,IAAAusB,KAAAjiB,YACAzR,GAAAgoB,SAAA3pB,IAAA8I,IAAAusB,KAAAhiB,WAAA,IACA1R,GAAA6zB,QAAAx1B,IAAA8I,IAAAmK,IAAAI,WAAA,IAEA1R,GAAA+e,QAAA/e,GAAA8e,MACA9e,GAAA8yB,SAAA9yB,GAAAwnB,QAGA,IAAAxnB,GAAAyvB,UACA,IAAAoD,QACA/T,MAAA,KAAA,YACA0I,MAAA,KACA9hB,QAAA1F,GAAAoc,KACArW,MAAA/F,KAEAuS,OAAAvS,GAAA6zB,UAIA,IAAA7zB,GAAA8zB,YACA9zB,GAAA4zB,WAAA7qB,GAAA,YAAA0pB,kBAAAzyB,IACAA,GAAA+yB,KAAA7hB,SAAA,qBAOAoiB,SAAA,SAAAG,QACA,IAAAzzB,GAAAC,KACAqR,IAAAmiB,OAAA/hB,WAAA,GACAJ,IAAAA,IAAAG,WAAAC,WAAA,GAAAD,WAAAA,WAAAA,WACAzR,GAAAuX,KAAAlZ,IAAA8I,IAAAmK,KACAxO,IAAA9C,GAAA+zB,SACAnyB,IAAA5B,GAAA+zB,QAAAxhB,QACAvS,GAAA+zB,QAAAxhB,OAAAvS,GAAAuX,MAGAlZ,IAAAqd,OAAA1b,GAAA+zB,QAAA,SAAAtxB,GACAA,GAAAb,IAAAa,EAAA8P,UACAvS,GAAA+zB,QAAA,EACA/zB,GAAA+zB,QAAAxhB,OAAAvS,GAAAuX,SAKA7W,IAAAV,GAAAg0B,YACAh0B,GAAAuX,KAAAjH,OAAAtQ,GAAAg0B,YAMAT,SAAA,SAAAE,QACA,IAAAzzB,GAAAC,KACAwnB,KAAAznB,GAAAwtB,QACAlc,IAAAmiB,OAAA/hB,WAAA,GAEAJ,KADAA,IAAAmiB,OAAA/hB,WAAA,IACAD,WAAAC,WAAA,GAAAD,WAAAC,WAAA,GAAAD,WACAzR,GAAAi0B,KAAA51B,IAAA8I,IAAAmK,KAEAxO,IAAA2kB,QAAA5kB,IAAA4kB,QACAA,MAAAA,OAIA,IADA,IAAAroB,EAAAqK,EAAA,EAAAE,IAAA8d,KAAAxoB,OACAwK,EAAAE,IAAAF,IACArK,EAAAqoB,KAAAhe,GACA3G,IAAA1D,KACAwC,IAAAxC,EAAAmT,UACAnT,EAAA,IAAAyzB,OAAAzzB,IAGAA,EAAAmT,OAAAvS,GAAAi0B,QAQAT,gBAAA,SAAAC,QACA,IAAAziB,GAAAhR,GAAAC,KACAqR,IAAAmiB,OAAA/hB,WAAA,GAAAD,WACAyiB,QAGAljB,GAAA3S,IAAA8I,IAAAmK,IAAAG,aACA1I,GAAA,YAAAooB,oBAAAnxB,IACAk0B,IAAAC,EAAAnjB,IAGAA,GAAA3S,IAAA8I,IAAAmK,IAAAI,WAAA,KACA3I,GAAA,YAAAooB,oBAAAnxB,IACAk0B,IAAAh1B,EAAA8R,IAGAA,GAAA3S,IAAA8I,IAAAmK,IAAAI,WAAA,KACA3I,GAAA,YAAAooB,oBAAAnxB,IACAk0B,IAAAjG,GAAAjd,IAEAA,GAAA3S,IAAA8I,IAAAmK,IAAAI,WAAA,KACA3I,GAAA,YAAAooB,oBAAAnxB,IACAk0B,IAAA90B,EAAA4R,IAGAA,GAAA3S,IAAA8I,IAAAmK,IAAAI,WAAA,KACA3I,GAAA,YAAAooB,oBAAAnxB,IACAk0B,IAAA90B,EAAA4R,GAEAhR,GAAAo0B,WAAAF,KAMAG,UAAA,WACA,IAAAr0B,GAAAC,KACAyO,WAAA2lB,UAAA5pB,KAAAzK,KAOAwyB,gBAAA,WACA,IAAAxyB,GAAAC,KACAwY,EAAAzY,GAAAgR,GAAAmE,WACA6E,EAAAha,GAAAgR,GAAA2H,YACA3Y,GAAAs0B,WACAt0B,GAAAsL,UAAA,SAAAmN,EAAAuB,EAAAha,aChiBA3B,IAAA6D,OAAA,kBACA2H,OAAA,aACAqG,KAAA,EACA/N,QAAA,SAAAqM,IAAAC,MACA,IAAA8S,WAAA/S,IAAA3N,UAEA,OAAAxC,IAAAwL,OAAA2E,KAIAsC,OAAA,WACA,IAAA9Q,GAAAC,KACAD,GAAAgiB,WACAhiB,GAAAu0B,WACAv0B,GAAAgiB,UAAA,IAOAnR,QAAA,WACA,IAAA7Q,GAAAC,KACAD,GAAAgiB,WACAhiB,GAAAw0B,YACAx0B,GAAAgiB,UAAA,IAMAgC,WAAA,WACA,OAAA/jB,KAAA+hB,UAOA4B,SAAAvlB,IAAAyR,QAMA0Z,SAAAnrB,IAAAyR,QAKAqB,cAAA,WACA,IAAAnR,GAAAC,KACAiQ,KAAA,QACAxP,IAAAV,GAAAkQ,KACAA,IAAAhP,KAAAlB,GAAAkQ,KAEArN,IAAA7C,GAAAkQ,OACAA,IAAAA,IAAAxH,OAAA1I,GAAAkQ,MAEAlQ,GAAAkQ,IAAAA,IACAqR,WAAApQ,cAAA1G,KAAAzK,IAEAA,GAAAuK,UAOA,YAOA8G,SAAA,WACA,IAAArR,GAAAC,KACAshB,WAAAlQ,SAAA5G,KAAAzK,IAEAA,GAAAy0B,YAAAz0B,GAAAy0B,UACA,IAAAzjB,GAAA0jB,GAAA,MACA10B,GAAAy0B,YACAC,GAAA10B,GAAA20B,WACAh0B,IAAA+zB,MACAA,IAAA,MAEAh0B,IAAAg0B,MACAA,GAAA,QAEA1jB,GAAAhR,GAAAgR,GAAA4E,aACA1F,IAAA,UACAqG,OACAlE,MAAAqiB,IAEA7e,KAAA,YAAA7V,GAAAoQ,OAAA,IAAA,4BAEApQ,GAAAqQ,SAAAhS,IAAA8I,IAAA6J,GAAAM,IAAAG,aAGAT,GAAAhR,GAAAgR,GAAA4E,aACA1F,IAAA,aACAqG,OACAqe,YAAAF,IAEA7e,KAAA,oCAEA7V,GAAA60B,SAAAx2B,IAAA8I,IAAA6J,GAAAM,IAAAG,YACAzR,GAAA80B,YAAA90B,GAAA60B,UAEA70B,GAAA+0B,SAAA/0B,GAAA60B,SAAAjf,aACA1F,IAAA,mBAGAlQ,GAAAgR,GAAAkF,UACA8e,SAAAN,KAGA1jB,KAAAhR,GAAAgiB,SACAhiB,GAAAgiB,UAAA,EACAhR,IACAhR,GAAA6Q,eAGA3L,GAAAlF,GAAA4K,QACAoG,GAAAhR,GAAA4K,MACA5K,GAAA4K,WAAA1F,EACAlF,GAAA4jB,SAAA5S,MAQAujB,SAAA,WACA,IAAAv0B,GAAAC,KACAD,GAAAgR,IACAhR,GAAAgR,GAAAC,YAAA,kBAQAujB,UAAA,WACA,IAAAx0B,GAAAC,KACAD,GAAAgR,IACAhR,GAAAgR,GAAAE,SAAA,kBAMA+jB,UAAA,SAAAtM,KACA,IAAA3oB,GAAAC,KACAD,GAAAk1B,YACAl1B,GAAAk1B,WAAA,EACAl1B,GAAAgR,GAAAE,SAAA,eAEAlR,GAAAm1B,eAAAxM,MAKAyM,UAAA,WACA,IAAAp1B,GAAAC,KACAD,GAAAk1B,YACAl1B,GAAAk1B,WAAA,EACAl1B,GAAAgR,GAAAC,YAAA,eAEAjR,GAAAm1B,kBAMAA,eAAA,SAAAxM,KACA,IAAA3oB,GAAAC,KACAD,GAAA+0B,UACA/0B,GAAA+0B,SAAAzkB,OAAAqY,KAAA,KAUAmM,YAAAz2B,IAAAyR,aC9LAzR,IAAA6D,OAAA,sBACA2H,OAAA,iBACAqG,KAAA,EAEA/N,QAAA,SAAAqM,IAAAC,MACA,IAAA8S,WAAA/S,IAAA3N,UAEA,OAAAxC,IAAAwL,OAAA2E,KAKAgb,SAAA,WACA,IAAAxpB,GAAAC,KACA,OAAAD,GAAAq1B,MACAr1B,GAAAq1B,MAAA/jB,IAAA1G,MAGA5K,GAAA4K,OAGAgZ,SAAA,SAAAhZ,OACA,IAAA5K,GAAAC,KACAD,GAAAq1B,QACAr1B,GAAAq1B,MAAA/jB,IAAA1G,MAAAA,OAAA,KAMA0qB,YAAA,SAAAC,UACA,IAAAv1B,GAAAC,KACAs1B,WAAAA,SACAv1B,GAAAq1B,QACAE,UACAv1B,GAAAq1B,MAAA/jB,IAAAikB,UAAA,EACAv1B,GAAA60B,SAAA3jB,SAAA,mBAGAlR,GAAAq1B,MAAA/jB,IAAAikB,UAAA,EACAv1B,GAAA60B,SAAA5jB,YAAA,mBAIAjR,GAAAu1B,SAAAA,UAMApkB,cAAA,WACA,IAAAnR,GAAAC,KACAiQ,IAAAlQ,GAAAkQ,IACArN,IAAAqN,KACAA,IAAAkB,QAAA,SAGAlB,IADAxP,IAAAwP,MACA,QAAAA,KAGA,QAEAlQ,GAAAkQ,IAAAA,IACAqR,WAAApQ,cAAA1G,KAAAzK,KAMA80B,YAAA,SAAA/f,KACA,IAAA/U,GAAAC,KAkBA,GAjBAshB,WAAAuT,YAAArqB,KAAAzK,GAAA+U,KACA/U,GAAAq1B,MAAAtgB,IAAAa,aACAK,IAAA,QACAuf,MACAC,YAAAz1B,GAAA01B,WAAA,GACAtvB,KAAA,aAAApG,GAAAoG,KAAA,WAAA,OACAuvB,KAAA31B,GAAA21B,MAAA,GACAhL,UAAA3qB,GAAA2qB,gBAAAzlB,KAGAlF,GAAAu1B,WACAv1B,GAAAq1B,MAAA/jB,IAAAikB,UAAA,EACAxgB,IAAA7D,SAAA,kBAGAlR,GAAAq1B,MAAAtsB,GAAA,OAAA/I,GAAA41B,YAAA51B,IAEAA,GAAA4K,MAAA,CACA,IAAAvL,EAAAW,GAAA4K,aACA5K,GAAA4K,MACA5K,GAAA4jB,SAAAvkB,KAOAu2B,YAAA,WACA,IAAA51B,GAAAC,KACAD,GAAAsL,UAAA,UAAAtL,GAAAwpB,WAAAxpB,KAMAw0B,UAAA,WACA,IAAAx0B,GAAAC,KACAshB,WAAAiT,UAAA/pB,KAAAzK,IACAA,GAAAq1B,MAAA/jB,IAAA0Q,UAAA,GAMAuS,SAAA,WACA,IAAAv0B,GAAAC,KACAshB,WAAAgT,SAAA9pB,KAAAzK,IACAA,GAAAq1B,MAAA/jB,IAAA0Q,UAAA,QCpHA,WACA,IAAA6T,UACAC,OAAA,YACA3G,KAAA,gBACA4G,MAAA,iBACAC,GAAA,cACAC,KAAA,gBACAC,SAAA,cACAC,KAAA,QAGA93B,IAAA6D,OAAA,oBACA2H,OAAA,qBACAqG,KAAA,EAEA/N,QAAA,SAAAqM,IAAAC,MACA,IAAA8S,WAAA/S,IAAA3N,UAEA,OAAAxC,IAAAwL,OAAA2E,KAKA2C,cAAA,WACA,IAAAnR,GAAAC,KACAiQ,KAAA,SACAxP,IAAAV,GAAAkQ,KACAA,IAAAhP,KAAAlB,GAAAkQ,KAEArN,IAAA7C,GAAAkQ,OACAA,IAAAA,IAAAxH,OAAA1I,GAAAkQ,MAEAlQ,GAAAkQ,IAAAA,IACAqR,WAAApQ,cAAA1G,KAAAzK,KAMA80B,YAAA,SAAA/f,KACA,IAAA/U,GAAAC,KAAAiQ,KAAA,YAAA,MACAqR,WAAAuT,YAAArqB,KAAAzK,GAAA+U,KACAlS,IAAA7C,GAAAo2B,SACAlmB,IAAAA,IAAAxH,OAAA1I,GAAAo2B,SAEA11B,IAAAV,GAAAo2B,SACAlmB,IAAAhP,KAAAlB,GAAAo2B,SAGAlmB,IAAAhP,KAAA20B,SAAA71B,GAAAq2B,UAAAR,SAAA,QAEA71B,GAAAs2B,UAAAvhB,IAAAa,aACA1F,IAAAA,MAEAlQ,GAAAs2B,UAAAvtB,GAAA,QAAA/I,GAAAu2B,eAAAv2B,IACAA,GAAAu1B,UACAv1B,GAAAq1B,MAAAtsB,GAAA,QAAA/I,GAAAu2B,eAAAv2B,KAOAu2B,eAAA,WACA,IAAAv2B,GAAAC,KACAD,GAAAw2B,UACAx2B,GAAAy2B,kBAQAA,eAAAp4B,IAAAyR,gBChFA,WAEA,IAAA4mB,SAEAC,YAAA,SAAAC,WACA,GAAAF,SACA,OAAAA,SAEA,IAAAz1B,KACA41B,KAAAx4B,IAAAkqB,UAAA3S,aAAA1F,IAAA,yBACA4mB,SAAA,IAAAF,WACA1mB,IAAA,uBAEAqQ,KAAAliB,IAAAkqB,UAAAC,WAAA,aAAA,KACAuO,QAAA,GAmEA,OAjEA91B,IAAA+1B,eAAA,SAAAxvB,MACA5F,IAAAX,IAAA6E,WACA7E,IAAA6E,SAAA2E,KAAAxJ,IAAA8E,MAAAyB,OAGAvG,IAAA61B,SAAA/tB,GAAA,WAAA9H,IAAA+1B,eAAA/1B,KACAA,IAAA41B,KAAA9Z,aAAA,WACA9b,IAAA61B,SAAAvkB,OAAAtR,IAAA41B,MACA51B,IAAA41B,KAAAza,OAMAnb,IAAA2iB,SAAA,SAAAhZ,MAAAqb,SACAhlB,IAAA61B,SAAAlT,SAAAhZ,MAAAqb,UAQAhlB,IAAAklB,cAAA,SAAAC,IAAAC,KACAplB,IAAA61B,SAAA3Q,cAAAC,IAAAC,MAOAplB,IAAAg2B,SAAA,WACA,OAAAh2B,IAAA81B,QAEA91B,IAAAmb,KAAA,WAEAnb,IAAA81B,QAAA,EACA91B,IAAA41B,KAAAza,OACAnb,IAAAsf,KAAAnE,OACAnb,IAAAsf,KAAAtX,GAAA,QAAAhI,IAAA+1B,eAAA/1B,MASAA,IAAAob,KAAA,SAAAwR,GAAA/nB,SAAAC,OACA9E,IAAAg2B,aAGAh2B,IAAA81B,QAAA,EACA91B,IAAA41B,KAAA3gB,UACAiZ,KAAAtB,GAAA,GAAA,KACAuB,IAAAvB,GAAA,GAAA,OAEA5sB,IAAA41B,KAAAxa,OACApb,IAAAsf,KAAAlE,OACApb,IAAAsf,KAAAxX,GAAA,QAAA9H,IAAA+1B,eAAA/1B,KACAA,IAAA6E,SAAAA,SACA7E,IAAA8E,MAAAA,QAGA2wB,SAAAz1B,KAOAE,SAAA,SAAAqG,MACA,IAAAnI,EAAA4B,OAgBA,OAfAA,IAAAC,KAAAsG,KAAAtE,eACAjC,IAAAC,KAAA,MACA7B,EAAAmI,KAAArE,WAAA,GACA,IACAlC,IAAAC,KAAA,KAEAD,IAAAC,KAAA7B,GACA4B,IAAAC,KAAA,MACA7B,EAAAmI,KAAApE,WACA,IACAnC,IAAAC,KAAA,KAEAD,IAAAC,KAAA7B,GACA4B,IAAAC,KAAA,KAEAD,IAAAG,KAAA,KAGA81B,OAAA,SAAAhT,GAAAC,IACA,OAAAD,KAAAC,IAOA9lB,IAAA6D,OAAA,sBACA2H,OAAA,mBACA0E,UACA,gBAEA2B,KAAA,EACA/N,QAAA,SAAAqM,IAAAC,MACA,IAAA8S,WAAA/S,IAAA3N,UACAs2B,cAAA1oB,KAAA,GACA,OAAApQ,IAAAwL,OAAA2E,KAMA4oB,YAAA,SAAA9Q,UACA,IAAAtmB,GAAAC,KACAD,GAAAmmB,cAAAG,SAAAtmB,GAAAumB,WAOA8Q,YAAA,SAAA9Q,UACA,IAAAvmB,GAAAC,KACAD,GAAAmmB,cAAAnmB,GAAAsmB,SAAAC,WAQAJ,cAAA,SAAAG,SAAAC,UACA,IAAAvmB,GAAAC,KACAZ,EAAAinB,SACArjB,IAAA5D,KACAA,EAAA,IAAA6G,KAAA,KAAA,EAAA,IAEAlG,GAAAsmB,SAAAjnB,EACAA,EAAAknB,SACAtjB,IAAA5D,KACAA,EAAA,IAAA6G,KAAA,KAAA,GAAA,KAEAlG,GAAAumB,SAAAlnB,EAEAW,GAAAsmB,SAAAngB,UAAAnG,GAAAumB,SAAApgB,YACA9G,EAAAW,GAAAsmB,SACAtmB,GAAAsmB,SAAAtmB,GAAAumB,SACAvmB,GAAAumB,SAAAlnB,GAGAA,EAAAW,GAAA4K,MACA3H,IAAA5D,KACAA,EAAAA,EAAA8G,UACA9G,EAAAW,GAAAumB,SAAApgB,UACAnG,GAAA4K,MAAA5K,GAAAumB,SAEAlnB,EAAAW,GAAAsmB,SAAAngB,YACAnG,GAAA4K,MAAA5K,GAAAsmB,YAOAkD,SAAA,WACA,OAAAvpB,KAAA2K,OAKAgZ,SAAA,SAAAhZ,OACA,IAAA5K,GAAAC,KACAgD,IAAA2H,OACA5K,GAAA4K,MAAAA,MAGA5K,GAAA4K,WAAA1F,EAEAlF,GAAAq1B,QACAr1B,GAAAq1B,MAAA/jB,IAAA1G,MAAA5K,GAAA4K,MAAAzJ,SAAAnB,GAAA4K,OAAA,KAOAuG,cAAA,WACA,IAAA9R,EAAAW,GAAAC,KACAD,GAAAq2B,QAAA,WACAr2B,GAAAu1B,UAAA,EACAl2B,EAAAW,GAAAkQ,IACArN,IAAAxD,GACAA,EAAA+R,QAAA,eAGA/R,EADAqB,IAAArB,IACA,cAAAA,GAGA,cAEAW,GAAAkQ,IAAA7Q,EAEAkiB,WAAApQ,cAAA1G,KAAAzK,IACAX,EAAAW,GAAAsmB,SACArjB,IAAA5D,KACAA,EAAA,IAAA6G,KAAA,KAAA,EAAA,IAEAlG,GAAAsmB,SAAAjnB,EAEAA,EAAAW,GAAAumB,SACAtjB,IAAA5D,KACAA,EAAA,IAAA6G,KAAA,KAAA,GAAA,KAEAlG,GAAAumB,SAAAlnB,EAEAW,GAAAsmB,SAAAngB,UAAAnG,GAAAumB,SAAApgB,YACA9G,EAAAW,GAAAsmB,SACAtmB,GAAAsmB,SAAAtmB,GAAAumB,SACAvmB,GAAAumB,SAAAlnB,GAGAW,GAAAuK,UAMA,UAMA,WAOAksB,eAAA,WACA,IAAAz2B,GAAAC,KACAD,GAAAgiB,WAGAhiB,GAAAgc,SACAhc,GAAAs3B,YAGAt3B,GAAAu3B,aAMAA,SAAA,WACA,IAAAv3B,GAAAC,KACA,IAAAD,GAAAgc,SAAA,CACAhc,GAAAgc,UAAA,EAEA,IAAAwb,KAAAx3B,GAAA22B,cACA3c,EAAAha,GAAAq1B,MAAA1c,YACAkV,GAAA7tB,GAAAq1B,MAAAtG,QACAyI,KAAArR,cAAAnmB,GAAAsmB,SAAAtmB,GAAAumB,UACAiR,KAAA5T,SAAA5jB,GAAAwpB,YAAA,GACAgO,KAAAnb,MAAAwR,GAAA,GAAAA,GAAA,GAAA7T,GAAAha,GAAAy3B,eAAAz3B,IACAA,GAAAgR,GAAAE,SAAA,wBACAlR,GAAAsL,UAAA,SAAAtL,MAMAy3B,eAAA,SAAA7sB,OACA,IAAA5K,GAAAC,KACA6K,GAAA9K,GAAA4K,MACA3H,IAAA2H,SACA5K,GAAA4K,MAAAA,MACA5K,GAAAq1B,MAAA/jB,IAAA1G,MAAAzJ,SAAAyJ,QAEA5K,GAAAs3B,YAEAr0B,IAAA2H,SAAAssB,OAAApsB,GAAAF,QACA5K,GAAAsL,UAAA,UAAAV,MAAAE,GAAA9K,KAMAs3B,UAAA,WACA,IAAAt3B,GAAAC,KACAD,GAAAgc,WACAhc,GAAAgc,UAAA,EACAhc,GAAA22B,cACAva,OACApc,GAAAgR,GAAAC,YAAA,wBACAjR,GAAAsL,UAAA,UAAAtL,MAMA22B,YAAA,WACA,OAAAA,YAAAQ,wBC1TA,WAEA,IAIAO,UAAA,SAAAtrB,GACA,IAAA6S,EAAA7S,EAAAjG,UALA,MAMA,OAAA,IAAAD,KAAA+Y,IAKA0Y,UAAA,SAAAvrB,GACA,IAAA6S,EAAA7S,EAAAjG,UAZA,MAaA,OAAA,IAAAD,KAAA+Y,IAGA5gB,IAAA6D,OAAA,sBACA2H,OAAA,iBACA0E,UACA,sBAEA2B,KAAA,EACA/N,QAAA,SAAAqM,IAAAC,MACA,IAAA8S,WAAA/S,IAAA3N,UACA+2B,eAAAnpB,KAAA,GAEA,OAAApQ,IAAAwL,OAAA2E,KAQA2X,cAAA,SAAA0R,OACAA,MAAAA,UACA,IAGAx0B,GAAAiF,GAAAtB,KAHAhH,GAAAC,KACAmmB,IAAAnjB,IAAA40B,MAAAvR,UAAAuR,MAAAvR,SAAA,IAAApgB,KAAA,KAAA,EAAA,GACAmgB,IAAApjB,IAAA40B,MAAAtR,UAAAsR,MAAAtR,SAAA,IAAArgB,KAAA,KAAA,GAAA,IAGAlG,GAAAsmB,SAAAF,IACApmB,GAAAumB,SAAAF,IAEArmB,GAAA83B,aAKA1R,IAAAA,IAAAjgB,UACAkgB,IAAAA,IAAAlgB,UACA9C,GAAArD,GAAA83B,WAAAtO,WACAlhB,GAAAtI,GAAA+3B,SAAAvO,WAEAnmB,MAEA2D,KAAA3D,GAAA8C,WACAigB,KAAApf,KAAAqf,MACArmB,GAAA83B,WAAAlU,SAAA5jB,GAAAsmB,UAIAhe,MAEAtB,KAAAsB,GAAAnC,WACAigB,KAAApf,KAAAqf,MACArmB,GAAA+3B,SAAAnU,SAAA5jB,GAAAumB,UAKAvmB,GAAA83B,WAAA3R,cAAAnmB,GAAAsmB,SAAAqR,UAAA33B,GAAAumB,WACAvmB,GAAA+3B,SAAA5R,cAAAuR,UAAA13B,GAAAsmB,UAAAtmB,GAAAumB,YAUA3C,SAAA,SAAAhZ,OAEA,IAAA5K,GAAAC,KACAoD,IAFAuH,MAAAA,WAEAotB,MACA1vB,GAAAsC,MAAAwE,IAEApP,GAAA83B,YAAA93B,GAAA+3B,UACA/3B,GAAA83B,WAAAlU,SAAAvgB,IACAJ,IAAAI,IACArD,GAAA+3B,SAAAX,YAAAM,UAAAr0B,KAGArD,GAAA+3B,SAAAX,YAAAM,UAAA13B,GAAAsmB,WAEAtmB,GAAA+3B,SAAAnU,SAAAtb,IACArF,IAAAqF,IACAtI,GAAA83B,WAAAT,YAAAM,UAAArvB,KAGAtI,GAAA83B,WAAAT,YAAAM,UAAA33B,GAAAumB,YAKAvmB,GAAA4K,MAAAA,OASA4e,SAAA,WACA,IAAAxpB,GAAAC,KACA,OAAAD,GAAA83B,YAAA93B,GAAA+3B,UAEAC,MAAAh4B,GAAA83B,WAAAtO,WACApa,IAAApP,GAAA+3B,SAAAvO,YAIAxpB,GAAA4K,OAOAuG,cAAA,WACA,IAAA9R,EAAA6Q,IAAAlQ,GAAAC,KACAiQ,KAAA,eACAxP,IAAAV,GAAAkQ,KACAA,IAAAhP,KAAAlB,GAAAkQ,KAEArN,IAAA7C,GAAAkQ,OACAA,IAAAA,IAAAxH,OAAA1I,GAAAkQ,MAEAlQ,GAAAkQ,IAAAA,IACAqR,WAAApQ,cAAA1G,KAAAzK,IAGAX,EAAAW,GAAAsmB,SACArjB,IAAA5D,KACAA,EAAA,IAAA6G,KAAA,KAAA,EAAA,IAEAlG,GAAAsmB,SAAAjnB,EAEAA,EAAAW,GAAAumB,SACAtjB,IAAA5D,KACAA,EAAA,IAAA6G,KAAA,KAAA,GAAA,KAEAlG,GAAAumB,SAAAlnB,GASAy1B,YAAA,SAAA9jB,IACA,IAAAhR,GAAAC,KACAshB,WAAAuT,YAAArqB,KAAAzK,GAAAgR,IACA,IAAAyH,EAAAzY,GAAAi4B,WACAt3B,IAAA8X,KACAA,GAAA,MAEAzY,GAAAk4B,SAAAlnB,GAAA4E,aACA1F,IAAA,sBAGAlQ,GAAAgW,QAAAhF,GAAA4E,aACAK,IAAA,OACA/F,IAAA,mBACA2F,KAAA7V,GAAAwQ,MAAA,MAGAxQ,GAAAm4B,OAAAnnB,GAAA4E,aACA1F,IAAA,oBAEAxP,IAAA+X,KACAzY,GAAAk4B,SAAAhiB,SAAA,QAAAuC,GACAzY,GAAAm4B,OAAAjiB,SAAA,QAAAuC,IAGAzY,GAAA83B,WAAA,IAAAF,gBACAnD,WAAA,EACAnO,SAAAtmB,GAAAsmB,SACAC,SAAAoR,UAAA33B,GAAAumB,UACAmP,UAAA11B,GAAAo4B,gBAAA,SAEAp4B,GAAA83B,WAAAvlB,OAAAvS,GAAAk4B,UACAl4B,GAAA+3B,SAAA,IAAAH,gBACAnD,WAAA,EACAnO,SAAAoR,UAAA13B,GAAAsmB,UACAC,SAAAvmB,GAAAumB,SACAmP,UAAA11B,GAAAq4B,cAAA,SAEAr4B,GAAA+3B,SAAAxlB,OAAAvS,GAAAm4B,QAGAn4B,GAAA83B,WAAA/uB,GAAA,UAAA/I,GAAAs4B,oBAAAt4B,IACAA,GAAA+3B,SAAAhvB,GAAA,UAAA/I,GAAAu4B,kBAAAv4B,IAEAA,GAAA4K,QACAvL,EAAAW,GAAA4K,aACA5K,GAAA4K,MACA5K,GAAA4jB,SAAAvkB,KAOAi5B,oBAAA,SAAAE,SAAAC,SAAAC,OACAz4B,KAEA83B,SAAAX,YAAAM,UAAAc,YAMAD,kBAAA,SAAAC,SAAAC,SAAAC,OACAz4B,KAEA63B,WAAAT,YAAAM,UAAAa,oBC1OAn6B,IAAA6D,OAAA,qBACA2H,OAAA,mBACA0E,UACA,4BAEA2B,KAAA,EACA/N,QAAA,SAAAqM,IAAAC,MACA,IAAA8S,WAAA/S,IAAA3N,UACA83B,WAAAlqB,KAAA,GAEA,OAAApQ,IAAAwL,OAAA2E,KAMAoqB,WAAA,SAAAC,KACA,IAAA74B,GAAAC,KACA,CAAA,GAAAD,GAAAq1B,MAAA,CAUA,IALA,IAEA5yB,EAAApD,EAAA4f,EAFAxV,EAAA,EACAE,IAAA9G,IAAAg2B,KAAAA,IAAA55B,OAAA,EAEAO,MACAmD,MAAA,EACA8G,EAAAE,IAAAF,IACAhH,EAAAo2B,IAAApvB,GACA3G,IAAAL,IACApD,EAAAoD,EAAAmI,MACAqU,OAAA/Z,IAAAzC,EAAA+N,KAAAnR,EAAAoD,EAAA+N,MAEA9P,IAAA+B,KACAwc,EAAA5f,EAAAoD,QAGAyC,IAAA7F,GAAA,OAAAA,IAGAA,IAAAW,GAAA4K,QACAjI,MAAA,GAEAnD,GAAA0B,MAAA7B,EAAA4f,KAaA,OAXAjf,GAAAmK,KAAA6E,OAAAxP,IAEAmD,OAKA3C,GAAA4K,WAAA1F,EACAlF,GAAAq1B,MAAA/jB,IAAA1G,MAAA,IAGA5K,GAtCAA,GAAA84B,QAAAD,MA2CAjV,SAAA,SAAAhZ,OACA,IAAA5K,GAAAC,KACA,GAAAD,GAAA4K,QAAAA,MAAA,CAIA,GADA5K,GAAA4K,MAAAA,MACA5K,GAAAmK,KAAA,CACA,IAAA9K,EAAAW,GAAAmK,KAAAmF,KAAAtP,GAAA+4B,WAAAnuB,OACA,GAAAvL,GAAAA,EAAAJ,OAAA,EAAA,CAEAI,GADAA,EAAAA,EAAA,IACA8H,IAAAnH,GAAAg5B,WACAh5B,GAAAq1B,MAAA/jB,IAAA1G,MAAAvL,EAMA,IAHA,IAEA0S,GAAAxS,GAFA0S,IAAAjS,GAAAi5B,YACAxvB,EAAA,EAAAE,IAAA9G,IAAAoP,KAAAA,IAAAhT,OAAA,EAEAwK,EAAAE,IAAAF,KACAsI,GAAAE,IAAAxI,IACAmB,QAAAA,OACAmH,GAAApB,SACApR,GAAAkK,GAGAsI,GAAA+P,WAGAviB,IAAA,IACAS,GAAAk5B,aAAAjnB,IAAA1S,UAKAS,GAAAk5B,cACAl5B,GAAAk5B,aAAApX,WAEA9hB,GAAAq1B,MAAA/jB,IAAA1G,MAAA,GAGA5K,GAAAsL,UAAA,UAAAV,MAAA5K,MAKAwpB,SAAA,WACA,OAAAvpB,KAAA2K,OAMAuuB,eAAA,SAAAvuB,OACA,IAAA5K,GAAAC,KACA,GAAAD,GAAAmK,KAAA,CACA,IAAAjL,EAAAc,GAAAmK,KAAAsF,QAAA7E,OAEA,OAAA1L,EAAAA,EAAAiI,IAAAnH,GAAAg5B,WAAApuB,MAEA,OAAAA,OAMAwuB,QAAA,WACA,IAAAp5B,GAAAC,KACA,GAAAD,GAAAgc,SAAA,CACAhc,GAAAgc,UAAA,EACA,IAAAuE,KAAAvgB,GAAAqoB,cACA9H,KAAAnE,OACApc,GAAAgR,GAAAC,YAAA,kBACAsP,KAAAtX,GAAA,QAAAjJ,GAAAo5B,QAAAp5B,IACAA,GAAA+U,IAAAqH,SAOAvS,OAAA,WACA,IAAA7J,GAAAC,KACA,IAAAD,GAAAgc,SAAA,CACAhc,GAAAgc,UAAA,EACA,IAAAvD,EAAAzY,GAAAq1B,MAAAlgB,WACA6E,EAAAha,GAAAq1B,MAAA1c,YACAkV,GAAA7tB,GAAAq1B,MAAAtG,QACA/uB,GAAA+U,IAAAskB,WAAAxL,GAAA,GAAAA,GAAA,GAAA7T,GACAha,GAAA+U,IAAAG,SAAAuD,GACAzY,GAAA+U,IAAAsH,OACArc,GAAAgR,GAAAE,SAAA,kBACAhN,OAAA4C,WAAA,WACA,IAAAyZ,KAAAvgB,GAAAqoB,cACA9H,KAAAlE,OACAkE,KAAAxX,GAAA,QAAA/I,GAAAo5B,QAAAp5B,KACA,MAOAy2B,eAAA,WACA,IAAAz2B,GAAAC,KACAD,GAAAgiB,WAGAhiB,GAAAgc,SACAhc,GAAAo5B,UAGAp5B,GAAA6J,WAOAsH,cAAA,WACA,IAAAnR,GAAAC,KACAiQ,KAAA,SAaA,GAZAxP,IAAAV,GAAAkQ,KACAA,IAAAhP,KAAAlB,GAAAkQ,KAEArN,IAAA7C,GAAAkQ,OACAA,IAAAA,IAAAxH,OAAA1I,GAAAkQ,MAEAlQ,GAAAkQ,IAAAA,IACAlQ,GAAAu1B,UAAA,IAAAv1B,GAAAu1B,SACAv1B,GAAAq2B,QAAA,OACA9U,WAAApQ,cAAA1G,KAAAzK,KAGA8C,IAAA9C,GAAAmK,OAAAtH,IAAA7C,GAAA84B,SAAA,CAKA,IAJA,IAEAr2B,EAAApD,EAAA4f,EAFAxV,EAAA,EACAE,IAAA9G,IAAA7C,GAAA84B,SAAA94B,GAAA84B,QAAA75B,OAAA,EAEAO,MACAiK,EAAAE,IAAAF,IACAhH,EAAAzC,GAAA84B,QAAArvB,GACA3G,IAAAL,IACApD,EAAAoD,EAAAmI,MACAqU,OAAA/Z,IAAAzC,EAAA+N,KAAA/N,EAAA+N,KAAAnR,EAAA,GACAG,GAAA0B,MAAA7B,EAAA4f,MAIAA,GADA5f,EAAAoD,GACApD,EAAA,GAAA,GACAG,GAAA0B,MAAA7B,EAAA4f,KAIAjf,GAAAmK,KAAA,IAAAwuB,YACAvuB,OAAA,QAAA,QACAuE,QAAA,EACAnD,OAAAhM,KAGAQ,GAAA+4B,WAAA,QACA/4B,GAAAg5B,UAAA,YAGAh5B,GAAA+4B,WAAA/4B,GAAA+4B,YAAA,QACA/4B,GAAAg5B,UAAAh5B,GAAAg5B,WAAAh5B,GAAA+4B,WAGA/4B,GAAAmK,MAAAvI,IAAA5B,GAAAmK,KAAApB,KACA/I,GAAAmK,KAAApB,GAAA,UAAA/I,GAAAs5B,kBAAAt5B,KAOA80B,YAAA,SAAA/f,KACA,IAAA/U,GAAAC,KACAshB,WAAAuT,YAAArqB,KAAAzK,GAAA+U,KACA/U,GAAAqoB,cACAroB,GAAAu5B,mBACAv5B,GAAAs5B,qBAMAjR,YAAA,WACA,IAAAroB,GAAAC,KAIA,OAHAD,GAAAsoB,WACAtoB,GAAAsoB,SAAAjqB,IAAAkqB,UAAAC,WAAA,aAAA,MAEAxoB,GAAAsoB,UAMAiR,iBAAA,WACA,IAAAv5B,GAAAC,KACAiQ,KAAA,eAEAlQ,GAAAw5B,UACAtpB,IAAAhP,KAAAlB,GAAAw5B,UAEAx5B,GAAAy5B,SACAvpB,IAAAhP,KAAAlB,GAAAy5B,SAGAz5B,GAAA+U,IAAA1W,IAAAkqB,UAAA3S,aACA1F,IAAAA,MAEAlQ,GAAA62B,KAAA72B,GAAA+U,IAAAa,aACA1F,IAAA,iBAKAlQ,GAAA+U,IAAAgI,aAAA,WACA/c,GAAA+U,IAAAqH,OACApc,GAAA+U,IAAAhM,GAAA,QAAA/I,GAAAo5B,QAAAp5B,KAMAs5B,kBAAA,WACA,IAAAt5B,GAAAC,KAEA,GAAAD,GAAAi5B,YAEA,IAAA,IAAAxvB,EAAA,EAAAE,IAAA3J,GAAAi5B,YAAAh6B,OAAAwK,EAAAE,IAAAF,IACAzJ,GAAAi5B,YAAAxvB,GAAA8B,SAQA,IAJA,IACA9I,EADAmM,GAAA5O,GAAAmK,KAAAnK,GAAAmK,KAAA+E,gBACAzF,EAAA,EAAAE,IAAAiF,GAAA3P,OACA4b,SAEApR,EAAAE,IAAAF,KACAhH,EAAAzC,GAAA05B,iBAAA15B,GAAA62B,KAAAjoB,GAAAnF,MAEAoR,MAAA3Z,KAAAuB,GAIAzC,GAAAi5B,YAAApe,OAMA6e,iBAAA,SAAA3kB,IAAA7V,GACA,IACA8R,GAAA/P,IADAjB,GAAAC,KAEAZ,EAAAH,EAAAiI,IAAAnH,GAAA+4B,YACA9Z,EAAA/f,EAAAiI,IAAAnH,GAAAg5B,WAiDA,OAhDAhoB,GAAA+D,IAAAa,aACA1F,IAAA,gBACAslB,MACA5qB,MAAAvL,EACAmoB,MAAAvI,GAEApJ,KAAAoJ,IAEAhe,KACA+P,GAAAA,GACApG,MAAAvL,EACAwiB,SAAA,GAIA5gB,IAAA0P,OAAA,WACA1P,IAAA4gB,UACA5gB,IAAA+P,GAAAE,SAAA,wBACAjQ,IAAA4gB,SAAA,GAEA7hB,GAAAk5B,aAAAj4B,KAEAA,IAAA6gB,SAAA,WACA7gB,IAAA4gB,UACA5gB,IAAA+P,GAAAC,YAAA,wBACAhQ,IAAA4gB,SAAA,GAEA7hB,GAAAk5B,cAAA,GAEAj4B,IAAAsK,OAAA,WACAtK,IAAA+P,IACA/P,IAAA+P,GAAAzF,UAGAtK,IAAA04B,UAAA,WACA35B,GAAAk5B,cACAl5B,GAAAk5B,aAAApX,WAEA7gB,IAAA0P,SACA3Q,GAAA4jB,SAAA3iB,IAAA2J,QAGA3J,IAAA+P,GAAAjI,GAAA,QAAA9H,IAAA04B,UAAA14B,KAEAjB,GAAA4K,OAAAvL,GACA4B,IAAA0P,SAGA1P,KAOA20B,YAAAv3B,IAAAyR,aCnXAzR,IAAA6D,OAAA,qBACA2H,OAAA,iBACAqG,KAAA,EACA/N,QAAA,SAAAqM,IAAAC,MACA,IAAA8S,WAAA/S,IAAA3N,UAEA,OAAAxC,IAAAwL,OAAA2E,KAKAgb,SAAA,WACA,OAAAvpB,KAAA25B,WAMAhW,SAAA,SAAAhZ,OACA,IAAA5K,GAAAC,KACA,SAAA2K,QAAA,IAAAA,MACAA,MAAA,UAEA,UAAAA,QACAA,OAAA,GAEA5K,GAAA45B,YAAAhvB,QAGA,YAAAA,MACA5K,GAAA65B,gBAEA,SAAAjvB,MACA5K,GAAA85B,oBAGA95B,GAAA+5B,oBAQAC,YAAA,WACA,MAAA,YAAA/5B,KAAA25B,WAMAK,cAAA,WACA,MAAA,SAAAh6B,KAAA25B,WAOAM,YAAA,WACA,OAAA,IAAAj6B,KAAA25B,WAMAzoB,cAAA,WACA,IAAAnR,GAAAC,KACAiQ,IAAAlQ,GAAAkQ,IACArN,IAAAqN,KACAA,IAAAkB,QAAA,cAGAlB,IADAxP,IAAAwP,MACA,aAAAA,KAGA,aAEAlQ,GAAAkQ,IAAAA,IACAqR,WAAApQ,cAAA1G,KAAAzK,IAGAkQ,IADA,UADAA,IAAAlQ,GAAAm6B,SAEA,SAEA,IAAAjqB,KAAA,SAAAA,MACA,UAKAlQ,GAAA45B,UAAA1pB,WACAlQ,GAAAm6B,QAEAn6B,GAAAuK,UASA,UAOAuqB,YAAA,SAAA/f,KAEA,IAAAzD,IAAAtR,GAAAC,KACAD,GAAA62B,KAAA9hB,IAAAa,aACA1F,IAAA,kBACA2F,KAAA,4EAEAvE,IAAAtR,GAAA62B,KAAAvlB,IACAtR,GAAAo6B,SAAA/7B,IAAA8I,IAAAmK,IAAAG,YACAzR,GAAAgW,QAAA3X,IAAA8I,IAAAmK,IAAAI,WAAA,IAEAhR,IAAAV,GAAAwQ,OACAxQ,GAAAgW,QAAA1F,OAAAtQ,GAAAwQ,OAEA,IAAAxQ,GAAA45B,YACA55B,GAAA62B,KAAA3lB,SAAA,cAAAlR,GAAA45B,WACA,SAAA55B,GAAA45B,WACA55B,GAAAo6B,SAAA9pB,OAAA,2FAGAtQ,GAAAo6B,SAAArxB,GAAA,QAAA/I,GAAAq6B,aAAAr6B,KAKAq6B,aAAA,WACA,IAAAr6B,GAAAC,KACAD,GAAAgkB,eAGA,IAAAhkB,GAAAsL,UAAA,QAAAtL,GAAA45B,WAAA55B,GAAAg6B,eAAA,UAAAh6B,MAEAA,GAAAg6B,cACAh6B,GAAA+5B,kBAGA/5B,GAAA65B,kBASAA,cAAA,WACA,IAAA75B,GAAAC,KACA,OAAAD,GAAAg6B,cACAh6B,KAEA,IAAAA,GAAA45B,YACA55B,GAAA62B,KAAA5lB,YAAA,cAAAjR,GAAA45B,WACA55B,GAAAo6B,SAAA9pB,OAAA,KAGAtQ,GAAA45B,UAAA,UACA55B,GAAA62B,KAAA3lB,SAAA,cAAAlR,GAAA45B,WAEA55B,GAAAsL,UAAA,UAAAtL,GAAA45B,UAAA55B,IACAA,KAMA85B,kBAAA,WACA,IAAA95B,GAAAC,KACA,OAAAD,GAAAi6B,gBACAj6B,KAEA,IAAAA,GAAA45B,WACA55B,GAAA62B,KAAA5lB,YAAA,cAAAjR,GAAA45B,WAEA55B,GAAA45B,UAAA,OACA55B,GAAA62B,KAAA3lB,SAAA,cAAAlR,GAAA45B,WACA55B,GAAAo6B,SAAA9pB,OAAA,0FACAtQ,GAAAsL,UAAA,UAAAtL,GAAA45B,UAAA55B,IACAA,KAMA+5B,gBAAA,WACA,IAAA/5B,GAAAC,KACA,OAAAD,GAAAk6B,cACAl6B,IAEAA,GAAA62B,KAAA5lB,YAAA,cAAAjR,GAAA45B,WACA55B,GAAAo6B,SAAA9pB,OAAA,IACAtQ,GAAA45B,WAAA,EACA55B,GAAAsL,UAAA,UAAAtL,GAAA45B,UAAA55B,IACAA,UCzMA3B,IAAA6D,OAAA,0BACA2H,OAAA,iBACAqG,KAAA,EACA3B,UACA,qBAEApM,QAAA,SAAAqM,IAAAC,MACA,IAAA8S,WAAA/S,IAAA3N,UACAy5B,cAAA7rB,KAAA,GACA,OAAApQ,IAAAwL,OAAA2E,KAOAoqB,WAAA,SAAAE,SACA,IAEAnvB,IAAA4wB,GAAAC,GAAA/Q,GACAhgB,EAAAgxB,GAHAz6B,GAAAC,KACAy6B,IAAA16B,GAAA26B,OAKA,GAAAD,IAAA,CACA,IAAAjxB,KAAAixB,IACAD,GAAAC,IAAAjxB,GACA8wB,GAAAl8B,IAAA8I,IAAAszB,GAAA/B,MAAA1nB,GAAAM,IAAA4H,YACAuhB,GAAA/B,MAAAjd,UACA8e,GAAAhvB,SAEAvL,GAAA46B,WAAA,EACA56B,GAAA26B,UAGA,IADA36B,GAAA66B,SAAAd,kBACAtwB,EAAA,EAAAE,IAAA9G,IAAAi2B,SAAAA,QAAA75B,OAAA,EAAAwK,EAAAE,IAAAF,IAAA,CAEA,GADA8wB,GAAAzB,QAAArvB,GACA3G,IAAAy3B,IAAA,CAEA,QAAAr1B,IADAs1B,GAAAD,GAAA3vB,OAEA,UAEA6e,GAAA8Q,GAAA/pB,QAEAiZ,GAAA+Q,SAGA95B,IAAA65B,MACA9Q,GAAA+Q,GAAAD,KAEAE,GAAAz6B,GAAA86B,eAAArR,OAEAzpB,GAAA26B,OAAAF,GAAA3mB,UACA4kB,MAAA+B,GACA7vB,MAAA4vB,GACAL,SAAA,GAEAn6B,GAAA46B,gBAUApR,SAAA,WACA,IAEA/f,EAAA8wB,GADA1B,IADA54B,KACA06B,OACA15B,OAEA,IAAAwI,KAAAovB,KACA0B,GAAA1B,IAAApvB,IACA0wB,SACAl5B,IAAAC,KAAAq5B,GAAA3vB,OAGA,OAAA3J,KAMA2iB,SAAA,SAAApkB,IACA,IAGAiK,EAAA8wB,GAHAv6B,GAAAC,KACA44B,IAAA74B,GAAA26B,OACAzzB,MAAArE,IAAArD,IAAAA,GAAAP,OAAA,EAEA,GAAA,IAAAe,GAAA+6B,aAAA,IAAA7zB,MAAA,CAGAlH,GAAAg7B,mBAAA,EACA,IAAAvxB,KAAAovB,IACA0B,GAAA1B,IAAApvB,GACAvC,MAAA,GAAA1H,GAAAb,QAAA47B,GAAA3vB,QAAA,GACA2vB,GAAAJ,SAAA,EACAI,GAAA7B,MAAAmB,kBAGAU,GAAAJ,SAAA,EACAI,GAAA7B,MAAAqB,mBAGA/5B,GAAA+6B,YAAA7zB,MACA,IAAAlH,GAAA+6B,YAEA/6B,GAAA66B,SAAAd,kBAEA/5B,GAAA46B,aAAA56B,GAAA+6B,YAEA/6B,GAAA66B,SAAAhB,gBAIA75B,GAAA66B,SAAAf,oBAGA95B,GAAAg7B,mBAAA,IAMA7pB,cAAA,WACA,IAAAnR,GAAAC,KACAiQ,IAAAlQ,GAAAkQ,IACArN,IAAAqN,KACAA,IAAAkB,QAAA,mBAGAlB,IADAxP,IAAAwP,MACA,kBAAAA,KAGA,kBAEAlQ,GAAAkQ,IAAAA,IACAqR,WAAApQ,cAAA1G,KAAAzK,KAMA80B,YAAA,SAAA/f,KACA,IACAwlB,GAAAU,GAAAxR,GAAA+Q,GADAx6B,GAAAC,KACA44B,IAAA74B,GAAA84B,QACArvB,EAAA,EACAE,IAAA9G,IAAAg2B,KAAAA,IAAA55B,OAAA,EAmBA,IAjBAe,GAAAk7B,YAAAnmB,IAAAa,aACA1F,IAAA,gCAEAlQ,GAAA66B,SAAA,IAAAP,eACA7F,WAAA,EACAjkB,KAAA,OAEAxQ,GAAA66B,SAAA9xB,GAAA,UAAA/I,GAAAm7B,mBAAAn7B,IACAA,GAAA66B,SAAAtoB,OAAAvS,GAAAk7B,aAEAl7B,GAAAo7B,UAAArmB,IAAAa,aACA1F,IAAA,8BAGAlQ,GAAA26B,UACA36B,GAAA46B,WAAA,EACA56B,GAAA+6B,YAAA,EACAtxB,EAAAE,IAAAF,IAAA,CAEA,GADA8wB,GAAA1B,IAAApvB,GACA3G,IAAAy3B,IAAA,CAEA,KADAC,GAAAD,GAAA3vB,OAEA,UAEA6e,GAAA8Q,GAAA/pB,QAEAiZ,GAAA+Q,SAGA95B,IAAA65B,MACA9Q,GAAA+Q,GAAAD,KAEAU,GAAAj7B,GAAA86B,eAAArR,OAEAzpB,GAAA26B,OAAAM,GAAAnnB,UACA4kB,MAAAuC,GACArwB,MAAA4vB,GACAL,SAAA,GAEAn6B,GAAA46B,cAGA/3B,IAAA7C,GAAA4K,QACA5K,GAAA4jB,SAAA5jB,GAAA4K,QAOAkwB,eAAA,SAAAtqB,MACA,IAEAuE,IAAA9T,IAFAjB,GAAAC,KAcA,OAVA8U,IAHA/U,GAAAo7B,UAGAxlB,aACA1F,IAAA,gCAGAjP,IAAA,IAAAq5B,eACA7F,WAAA,EACAjkB,KAAAA,QAEAzH,GAAA,UAAA/I,GAAAq7B,qBAAAr7B,IACAiB,IAAAsR,OAAAwC,KACA9T,KAMAk6B,mBAAA,SAAAG,WAAA5C,OACA,IAEAjvB,EAAA8wB,GAFAv6B,GAAAC,KACA06B,OAAA36B,GAAA26B,OAEA,IAAA36B,GAAAu7B,wBACAv7B,GAAAg7B,kBADA,CAKA,GADAh7B,GAAAw7B,qBAAA,EACA9C,MAAAsB,cAAA,CACAh6B,GAAA+6B,YAAA/6B,GAAA46B,WACA,IAAAnxB,KAAAkxB,QACAJ,GAAAI,OAAAlxB,IACA0wB,SAAA,EACAI,GAAA7B,MAAAmB,oBAGA,CACA75B,GAAA+6B,YAAA,EACA,IAAAtxB,KAAAkxB,QACAJ,GAAAI,OAAAlxB,IACA0wB,SAAA,EACAI,GAAA7B,MAAAqB,kBAGA/5B,GAAAw7B,qBAAA,IAMAH,qBAAA,SAAAC,WAAA5C,OACA,IAAA14B,GAAAC,KAGAs6B,GAFAv6B,GAAA26B,OACAjC,MAAA5kB,SAEA9T,GAAAw7B,qBACAx7B,GAAAg7B,oBACAT,KAGA7B,MAAAsB,eACAO,GAAAJ,SAAA,EACAn6B,GAAA+6B,gBAGAR,GAAAJ,SAAA,EACAn6B,GAAA+6B,eAEA/6B,GAAAu7B,uBAAA,EACA,IAAAv7B,GAAA+6B,YAEA/6B,GAAA66B,SAAAd,kBAEA/5B,GAAA46B,aAAA56B,GAAA+6B,YAEA/6B,GAAA66B,SAAAhB,gBAIA75B,GAAA66B,SAAAf,oBAEA95B,GAAAu7B,uBAAA","file":"cmp-ext.min.js","sourcesContent":["/**\r\n * 对于颜色值得数据描述\r\n * \r\n * @class Cmp.util.Color\r\n * @extend Object\r\n * \r\n * @version 1.0.0\r\n * @since 2016-03-30\r\n * @author Jinhai \r\n */\r\n(function(){\r\n\r\n\tvar VU = Cmp.util.ValueHelper;\r\n\t\r\n\t/**\r\n\t * 解析一个字符串，然后返回一个表示颜色值的数组\r\n\t * @reutrn {Array} 结构为[r,g,b,a]的数组； 如果不能解析，则返回false;\r\n\t */\r\n\tvar parse = function(s){\r\n\t\ts = s.toLowerCase();\r\n\t\tif(s.indexOf('#') === 0){\r\n\t\t\treturn parseWeb(s);\r\n\t\t}\r\n\t\telse if(s.index('rgb(') === 0){\r\n\t\t\treturn parseRgb(s);\r\n\t\t}\r\n\t\telse if(s.index('rgba(') === 0){\r\n\t\t\treturn parseRgba(s);\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t}\r\n\t/**\r\n\t * 解析以'#'开头的字符串颜色\r\n\t * @reutrn {Array} 结构为[r,g,b,a]的数组； 如果不能解析，则返回false;\r\n\t */\r\n\tvar parseWeb = function(s){\r\n\t\ts = s.substring(1);\r\n\t\tif(s.length !== 3 && s.length !== 6){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tvar v = parseInt(s, 16),\r\n\t\t\tr,g,b;\r\n\t\tif(false === v){\r\n\t\t\treturn v;\r\n\t\t}\r\n\t\tif(s.length === 3){\r\n\t\t\tr = (0xF00 & v) >> 8;\r\n\t\t\tr = (r << 4) + r;\r\n\t\t\tg = (0x0F0 & v) >> 4;\r\n\t\t\tg = (g << 4) + g;\r\n\t\t\tb = (0x00F & v);\r\n\t\t\tb = (b << 4) + b;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tr = (0xFF0000 & v) >> 16;\r\n\t\t\tg = (0x00FF00 & v) >> 8;\r\n\t\t\tb = 0x0000FF & v;\r\n\t\t}\r\n\t\t\r\n\t\treturn [r,g,b,100];\r\n\t}\r\n\t/**\r\n\t * 解析以'rgb('开头的字符串颜色\r\n\t * @reutrn {Array} 结构为[r,g,b,a]的数组； 如果不能解析，则返回false;\r\n\t */\r\n\tvar parseRgb = function(s){\r\n\t\ts = s.substring(4);\r\n\t\tvar ix = s.indexOf(')');\r\n\t\tif(ix > -1){\r\n\t\t\ts = s.substring(0, ix);\r\n\t\t}\r\n\t\tvar vs = s.split(',');\r\n\t\tif(vs.length != 3){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar r = VU.toInteger(vs[0], false),\r\n\t\t\tg = VU.toInteger(vs[1], false),\r\n\t\t\tb = VU.toInteger(vs[2], false);\r\n\t\tif(false === r || false === g || false === b){\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\tr = 0xFF & r;\r\n\t\tg = 0xFF & g;\r\n\t\tb = 0xFF & b;\r\n\t\treturn [r,g,b,100];\r\n\t}\r\n\t/**\r\n\t * 解析以'rgba('开头的字符串颜色\r\n\t * @reutrn {Array} 结构为[r,g,b,a]的数组； 如果不能解析，则返回false;\r\n\t */\r\n\tvar parseRgba = function(s){\r\n\t\ts = s.substring(5);\r\n\t\tvar ix = s.indexOf(')');\r\n\t\tif(ix > -1){\r\n\t\t\ts = s.substring(0, ix);\r\n\t\t}\r\n\t\tvar vs = s.split(',');\r\n\t\tif(vs.length != 4){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar r = VU.toInteger(vs[0], false),\r\n\t\t\tg = VU.toInteger(vs[1], false),\r\n\t\t\tb = VU.toInteger(vs[2], false),\r\n\t\t\ta = VU.toFloat(vs[3], false);\r\n\t\tif(false === r || false === g || false === b \r\n\t\t\t|| false === a){\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\tr = 0xFF & r;\r\n\t\tg = 0xFF & g;\r\n\t\tb = 0xFF & b;\r\n\t\ta = Math.round(a*100) % 101;\r\n\t\t\r\n\t\treturn [r,g,b,a];\r\n\t}\r\n\t/**\r\n\t * 创建颜色数据实例\r\n\t * @param {String/Number} r 当为一个字符串时，为颜色的初始设定值，如果不能解析，则默认为一个#808080颜色；\r\n\t *\t\t\t\t\t\t当为一个数值时，则认为是颜色中红色值，取值范围为0~255;对于所有溢出的值，都按照进行求模计算出。\r\n\t * @param {Number} g 颜色中的绿色值；当参数r为一个字符串时，此参数无效。取值范围为0~255;对于所有溢出的值，都按照进行求模计算出。默认为128；\r\n\t * @param {Number} b 颜色中的蓝色值；当参数r为一个字符串时，此参数无效。取值范围为0~255;对于所有溢出的值，都按照进行求模计算出。默认为128；\r\n\t * @param {Number} a 透明度设定，0为完全透明，100为完全不透明；取值范围0~100；默认为100；\r\n\t */\r\n\tvar Color = function(r, g, b, a){\r\n\t\tvar me = this,\r\n\t\t\tred = 128,\r\n\t\t\tgreed = 128,\r\n\t\t\tblue = 128,\r\n\t\t\talpha = 100;\r\n\t\t\r\n\t\t/**\r\n\t\t * 获得红色值\r\n\t\t * @return {Number} 0~255的数值\r\n\t\t */\r\n\t\tme.getRed = function(){\r\n\t\t\treturn red;\r\n\t\t}\r\n\t\t/**\r\n\t\t * 获得绿色值\r\n\t\t * @return {Number} 0~255的数值\r\n\t\t */\r\n\t\tme.getGreen = function(){\r\n\t\t\treturn greed;\r\n\t\t}\r\n\t\t/**\r\n\t\t * 获得蓝色值\r\n\t\t * @return {Number} 0~255的数值\r\n\t\t */\r\n\t\tme.getBlue = function(){\r\n\t\t\treturn blue;\r\n\t\t}\r\n\t\t/**\r\n\t\t * 获得透明度设定值\r\n\t\t *　@return {Number} 0~100的数值；0为完全透明，100为完全不透明；\r\n\t\t */\r\n\t\tme.getAlpha = function(){\r\n\t\t\treturn alpha;\r\n\t\t}\r\n\t\t\r\n\t\t\t\r\n\t\tif(isS(r)){\r\n\t\t\tvar vs = parse(r);\r\n\t\t\tif(vs){\r\n\t\t\t\tred = vs[0];\r\n\t\t\t\tgreed = vs[1];\r\n\t\t\t\tblue = vs[2];\r\n\t\t\t\talpha = vs[3];\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(isN(r)){\r\n\t\t\tred = r % 256;\r\n\t\t\tgreed = isN(g) ? g % 256 : 128;\r\n\t\t\tblue = isN(b) ? b % 256 : 128;\r\n\t\t\talpha = isN(a) ? a % 101 : 100;\r\n\t\t}\r\n\t\telse{\r\n\t\t\t//默认值，不再作处理。\r\n\t\t}\r\n\t}\r\n\t\r\n\tColor.prototype = {\r\n\t\t/**\r\n\t\t * @overwrite\r\n\t\t */\r\n\t\tvalueOf : function(){\r\n\t\t\tvar me = this,\r\n\t\t\t\ta = me.getAlpha();\r\n\t\t\tvar v = me.getRed() << 16 + me.getGreen() << 8 + me.getBlue();\r\n\t\t\tif(a === 100){\r\n\t\t\t\tv = v + (255 << 24);\r\n\t\t\t}\r\n\t\t\telse if(a !== 0){\r\n\t\t\t\ta = Math.floor(a / 100 * 255);\r\n\t\t\t\tv = v + (a << 24);\r\n\t\t\t}\r\n\t\t\treturn v;\r\n\t\t},\r\n\t\t/**\r\n\t\t * 获得以'#'开头的Web格式颜色值；\r\n\t\t * @return {String} 以'#'开头字符串的颜色值\r\n\t\t */\r\n\t\tgetWebValue : function(){\r\n\t\t\tvar me = this,\r\n\t\t\t\tr = me.getRed(),\r\n\t\t\t\tg = me.getGreen(),\r\n\t\t\t\tb = me.getBlue(),\r\n\t\t\t\trel = ['#'];\r\n\t\t\trel.push(r.toString(16));\r\n\t\t\trel.push(g.toString(16));\r\n\t\t\trel.push(b.toString(16));\r\n\t\t\treturn rel.join('');\t\r\n\t\t},\r\n\t\t/**\r\n\t\t * 获得'rgb(r,g,b)'格式的颜色值\r\n\t\t */\r\n\t\tgetRgbValue : function(){\r\n\t\t\tvar me = this,\r\n\t\t\t\tr = me.getRed(),\r\n\t\t\t\tg = me.getGreen(),\r\n\t\t\t\tb = me.getBlue(),\r\n\t\t\t\trel = ['rgb('];\r\n\t\t\trel.push(r);\r\n\t\t\trel.push(',');\r\n\t\t\trel.push(g);\r\n\t\t\trel.push(',');\r\n\t\t\trel.push(b);\r\n\t\t\trel.push(')');\r\n\t\t\treturn rel.join('');\t\r\n\t\t},\r\n\t\t/**\r\n\t\t * 获得'rgba(r,g,b,a)'格式的颜色值\r\n\t\t */\r\n\t\tgetRgbaValue : function(){\r\n\t\t\tvar me = this,\r\n\t\t\t\tr = me.getRed(),\r\n\t\t\t\tg = me.getGreen(),\r\n\t\t\t\tb = me.getBlue(),\r\n\t\t\t\ta = me.getAlpha(),\r\n\t\t\t\trel = ['rgba('];\r\n\t\t\trel.push(r);\r\n\t\t\trel.push(',');\r\n\t\t\trel.push(g);\r\n\t\t\trel.push(',');\r\n\t\t\trel.push(b);\r\n\t\t\trel.push(',');\r\n\t\t\trel.push(a / 100);\r\n\t\t\trel.push(')');\r\n\t\t\treturn rel.join('');\t\r\n\t\t},\r\n\t\t/**\r\n\t\t * 获得一个新的Color对象并使用新的透明度设定值;\r\n\t\t * @param {Number} alpha 透明度设定值，取值范围0到100；其中0为完全透明，100为完全不透明。默认为100；\r\n\t\t * @return {Color} 使用新透明度生成的Color对象实例。\r\n\t\t */\r\n\t\treplaceAlpha : function(alpha){\r\n\t\t\tvar me = this;\r\n\t\t\treturn new PK.Color(me.getRed(), me.getGreen(), me.getBlue(), alpha);\r\n\t\t},\r\n\t\t/**\r\n\t\t * 与另外一个颜色进行溶解计算并返回新的颜色值；\r\n\t\t * @param {Color} color (必须)另外一个颜色的实例，如果不设定，则返回null；\r\n\t\t * @param {Number} offset (可选)溶解计算时的偏移量；取值范围从0到100；默认值：50；\r\n\t\t *\t\t如果设定0，则完全取this对象的颜色值，如果设定100，则完全使用传入对象的颜色值。如果设定50则取两者的平均值。\r\n\t\t * @return {Color} 新的颜色对象实例。\r\n\t\t */\r\n\t\tmingle : function(color, offset){\r\n\t\t\tif(!color || isF(color.getRed)){\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\toffset = isN(offset) ? offset %101 : 50;\r\n\t\t\tvar me = this;\r\n\t\t\tif(0 === offset){\r\n\t\t\t\treturn new PK.Color(me.getRed(), me.getGreen(), me.getBlue(), me.getAlpha());\r\n\t\t\t}\r\n\t\t\tif(100 === offset){\r\n\t\t\t\treturn new PK.Color(color.getRed(), color.getGreen(), color.getBlue(), color.getAlpha());\r\n\t\t\t}\r\n\t\t\tvar mc = (100 - offset) / 100,\r\n\t\t\t\tcc = offset / 100;\r\n\t\t\t\r\n\t\t\tvar r = Math.round(me.getRed()*mc + color.getRed()*cc),\r\n\t\t\t\tg = Math.round(me.getGreen()*mc + color.getGreen()*cc),\r\n\t\t\t\tb = Math.round(me.getBlue()*mc + color.getBlue()*cc),\r\n\t\t\t\ta = me.getAlpha()*mc + color.getAlpha()*cc;\r\n\t\t\t\r\n\t\t\treturn new Color(r,g,b,a);\t\r\n\t\t},\r\n\t\t/**\r\n\t\t * @overwrite\r\n\t\t */\r\n\t\ttoString : function(){\r\n\t\t\tvar me = this,\r\n\t\t\t\ta = me.getAlpha();\r\n\t\t\tif(100 === a){\r\n\t\t\t\treturn me.getWebValue();\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treturn me.getRgbaValue();\r\n\t\t\t}\t\r\n\t\t}\r\n\t};\r\n\t\r\n\tvar PRO = Color.prototype;\r\n\t/**\r\n\t * 获得以'#'开头的Web格式颜色值；\r\n\t * @see #getWebValue\r\n\t */\r\n\tPRO.web = PRO.getWebValue;\r\n\t/**\r\n\t * 获得'rgb(r,g,b)'格式的颜色值\r\n\t */\r\n\tPRO.rgb = PRO.getRgbValue;\r\n\t/**\r\n\t * 获得'rgba(r,g,b,a)'格式的颜色值\r\n\t */\r\n\tPRO.rgba = PRO.getRgbaValue;\r\n\t\r\n\t/**\r\n\t * @public\r\n\t * @static\r\n\t * 解析一个字符串，当可以被解析时返回Color对象；否则返回undefined;\r\n\t */\r\n\tColor.parse = function(s){\r\n\t\tvar vs = parse(s);\r\n\t\tif(vs){\r\n\t\t\treturn new PK.Color(vs[0],vs[1],vs[2],vs[3]);\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\tCmp.define('Cmp.util.Color',{\r\n\t\tfactory : function(){\r\n\t\t\treturn Color;\r\n\t\t}\r\n\t});\r\n}());","/**\r\n * @static Cmp.util.AjaxProxy\r\n * 使用Ajax进行数据传输/发送的工具类\r\n * \r\n *\r\n * @version 1.0.0\r\n * @since 2016-06-10\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\r\n\t\t//最大同时执行Ajax任务的配置数量；\t\r\n\tvar limitTaskCount = 20,\r\n\t\t//等待请求的最长时间，默认: 30秒\r\n\t\ttimeoutTimes = 30000,\r\n\t\t//等待超时后，重试的最大次数；\r\n\t\tretryTimes = 3,\r\n\t\t//当前执行任务的数量；\r\n\t\tactiveCount = 0,\r\n\t\t//等待执行的任务队列；先进先出；\r\n\t \ttaskList = [];\r\n\t \t\r\n\t var toUrlParamString = function(o){\r\n\t \tvar n,v,rel = [],flag = false,s;\r\n\t \tfor(n in o){\r\n\t \t\tif(flag){\r\n\t \t\t\trel.push('&');\r\n\t \t\t}\r\n\t \t\telse{\r\n\t \t\t\tflag = true;\r\n\t \t\t}\r\n\t \t\tv = o[n];\r\n\t \t\trel.push(n);\r\n\t \t\trel.push('=');\r\n\t \t\tif(isS(v) || isN(v)){\r\n\t \t\t\trel.push(v);\r\n\t \t\t}\r\n\t \t\telse if(isB(v)){\r\n\t \t\t\trel.push(v?'true':'false');\r\n\t \t\t}\r\n\t \t\telse if(isA(v)){\r\n\t \t\t\trel.push(v.join(','));\r\n\t \t\t}\r\n\t \t\telse if(isO(v)){\r\n\t \t\t\trel.push(JSON.stringify(v));\r\n\t \t\t}\r\n\t \t\telse if(isD(v)){\r\n\t \t\t\t//年 \r\n\t\t\t\trel.push(v.getFullYear());\t\r\n\t\t\t\t//月\r\n\t\t\t\trel.push('-');\r\n\t\t\t\ts = v.getMonth()+1;\r\n\t\t\t\tif(s < 10){\r\n\t\t\t\t\trel.push('0');\t\r\n\t\t\t\t}\r\n\t\t\t\trel.push(s);\r\n\t\t\t\t//日\t\r\n\t\t\t\trel.push('-');\r\n\t\t\t\ts = v.getDate();\r\n\t\t\t\tif(sv < 10){\r\n\t\t\t\t\trel.push('0');\t\r\n\t\t\t\t}\r\n\t\t\t\trel.push(s);\t\r\n\t\t\t\t//小时\r\n\t\t\t\trel.push(' ');\r\n\t\t\t\ts = v.getHours();\r\n\t\t\t\tif(s<10){\r\n\t\t\t\t\trel.push('0');\r\n\t\t\t\t}\r\n\t\t\t\trel.push(s);\r\n\t\t\t\t//分\r\n\t\t\t\trel.push(':');\t\r\n\t\t\t\ts = v.getMinutes();\r\n\t\t\t\tif(s<10){\r\n\t\t\t\t\trel.push('0');\r\n\t\t\t\t}\r\n\t\t\t\trel.push(s);\r\n\t\t\t\t//秒\r\n\t\t\t\trel.push(':');\t\r\n\t\t\t\ts = v.getSeconds();\r\n\t\t\t\tif(s<10){\r\n\t\t\t\t\trel.push('0');\r\n\t\t\t\t}\r\n\t\t\t\trel.push(s);\r\n\t\t\t\t\r\n\t \t\t}\r\n\t \t}\r\n \t\treturn rel.join('');\r\n\t }\t\r\n\r\n\t/**\r\n\t * HTTP请求代理，为了屏蔽低版本IE以及其他的没有XMLHttpRequest对象的时候；\r\n\t * \r\n\t * @param {String} method (必须)方法名，'GET'或'POST'\r\n\t * @param {String} url (必须)访问地址；\r\n\t * @param {String} paramString (可选)发送的字符串数据\r\n\t * @param {Object} headerConfig (可选)报头配置\r\n\t * @param {Function} cb 回调方法;传入对象；error为错误信息；没有错误时；\r\n\t *\t\t\tresult 获得的原生数据为一个字符串； \r\n\t */\r\n\tvar HttpRequest = function(method, url, paramString, headerConfig, cb){\r\n\t\tvar me = this,\r\n\t\t\t_request,\r\n\t\t\t_isLowVer = false;\r\n\t\t\r\n\t\t//创建XMLHttpRequest对象\r\n\t\tvar createHttpRequest = function(){\r\n\t\t\tif(window.XMLHttpRequest){\r\n\t\t\t\t_request = new XMLHttpRequest();\r\n\t\t\t}\r\n\t\t\telse if (window.ActiveXObject){\r\n\t\t\t\t//低版本\r\n\t\t\t\t_request = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n\t\t\t\t_isLowVer = true;\r\n\t\t\t}\t\r\n\t\t}\r\n\t\tme.requst = function(){\r\n\t\t\tcreateHttpRequest();\r\n\t\t\t_request.open(method || 'GET',url,true);\r\n\t\t\tif('POST' === method && isS(paramString)){\r\n\t\t\t\t_request.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded; charset=UTF-8\");\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t_request.setRequestHeader(\"Content-type\",\"charset=UTF-8\");\r\n\t\t\t}\r\n\t\t\t_request.send(paramString);\r\n\t\t\t_request.onreadystatechange = function(){\r\n\t\t\t\tif(_request.readyState==4){\r\n\t\t\t\t\t//成功了\r\n\t\t\t\t\tif(_request.status==200){\r\n\t\t\t\t\t\tcb({\r\n\t\t\t\t\t\t\tresult : _request.responseText\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tif(_request.status >= 500 && _request.status < 600){\r\n\t\t\t\t\t\t\tcb({\r\n\t\t\t\t\t\t\t\terror : '服务器出现错误'\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tcb({\r\n\t\t\t\t\t\t\t\terror : '指定的路径不存在'\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar Task = function(cfg){\r\n\t\tvar me = this,\r\n\t\t\tparamString = isO(cfg.param) ? toUrlParamString(cfg.param) : undefined,\r\n\t\t\t_requsting = false,\r\n\t\t\t_runTime = 0,\r\n\t\t\t_tryTime = 0,\r\n\t\t\t_timeout = 0,\r\n\t\t\t_querySeq = 0;\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t/**\r\n\t\t * @private\r\n\t\t * 当超时之后，调用的方法；\r\n\t\t */\r\n\t\tvar onTimeout = function(){\r\n\t\t\tif(_requsting === true){\r\n\t\t\t\tif(_runTime < _tryTime){\r\n\t\t\t\t\tputLog('连接超时，自动重试连接次数:'+_runTime, 2);\r\n\t\t\t\t\tstartRequst();\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tCmp.invoke(cfg.callback, cfg.scope, [{\r\n\t\t\t\t\t\terror : '连接超时'\r\n\t\t\t\t\t}]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tme.timeoutTask = new Cmp.util.DelayedTask({\r\n\t\t\thandler : onTimeout,\r\n\t\t\tscope : me \r\n\t\t});\r\n\t\t\r\n\t\tvar doRequst = function(seq){\r\n\t\t\t//method, url, paramString, headerConfig, cb\r\n\t\t\tvar url = [cfg.url];\r\n\t\t\t//在最后增加当前时间和随机数\r\n\t\t\tif(cfg.url.indexOf('?') > -1){\r\n\t\t\t\turl.push('&rbtv=');\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\turl.push('?rbtv=');\r\n\t\t\t}\r\n\t\t\turl.push(new Date().getTime());\r\n\t\t\tvar req = new HttpRequest(cfg.type, url.join(''), paramString, {}, function(result){\r\n\t\t\t\tif(_querySeq === seq){\r\n\t\t\t\t\tme.timeoutTask.cancel();\r\n\t\t\t\t\t_requsting = false;\r\n\t\t\t\t\tCmp.invoke(cfg.callback, cfg.scope, [result]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treq.requst();\r\n\t\t}\r\n\t\t\r\n\t\tvar startRequst = function(){\r\n\t\t\t_runTime++;\r\n\t\t\tdoRequst(++_querySeq);\r\n\t\t\tme.timeoutTask.run({delay:_timeout});\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * 执行数据请求；\r\n\t\t * @param {Number} timeout 超时时间\r\n\t\t * @param {Number} tryTime 重试次数\r\n\t\t */\r\n\t\tme.execute = function(timeout, tryTime){\r\n\t\t\tif(_requsting){\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t_requsting = true;\r\n\t\t\t_tryTime = tryTime;\r\n\t\t\t_timeout = timeout;\r\n\t\t\tstartRequst();\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * 检测当前执行任务的数量，如果没有超过最大限制，则从队列中取出一个任务；\r\n\t * 否则继续等待；\r\n\t */\r\n\tvar executeTask = function(){\r\n\t\tif(activeCount < limitTaskCount && taskList.length > 0){\r\n\t\t\tvar t = taskList.shift();\r\n\t\t\tt.execute(timeoutTimes, retryTimes);\r\n\t\t}\r\n\t}\r\n\r\n\tvar Proxy = {\r\n\t\t/**\r\n\t\t * 设定每次请求等待的最长时间；默认配置为30秒；\r\n\t\t * @param {Number} timeout 时间值，单位：毫秒；不得小于10秒数；\r\n\t\t */\r\n\t\tsetTimeout : function(timeout){\r\n\t\t\tif(isN(timeout) && timeout > 10000){\r\n\t\t\t\ttimeoutTimes = timeout;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\ttimeoutTimes = 30000;\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * 设定超时后的重试次数，默认配置为3次\r\n\t\t * @param {Number} time 重试次数，不得小于1；\r\n\t\t */\r\n\t\tsetRetryTime : function(time){\r\n\t\t\tif(isN(time) && time > 0){\r\n\t\t\t\tretryTimes = time;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tretryTimes = 3;\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * 设定最大的同时执行数据请求任务的数量，默认值为20；\r\n\t\t * @pamra {Number} count 数量\r\n\t\t */\r\n\t\tsetMaxTaskCount : function(count){\r\n\t\t\tif(isN(count) && count > 1){\r\n\t\t\t\tlimitTaskCount = count;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tlimitTaskCount = 20;\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * 采用GET形式请求结果，该形式多用于数据查询；\r\n\t\t *\r\n\t\t * @param {String} url 链接地址\r\n\t\t * @param {Object} param 传递的数据；要使用名值对形式对数据进行封装；\r\n\t\t *\t\t并且每个属性值都可以使用JSON.stringify方法对其字符串化；\r\n\t\t * @param {Function} callback 获得返回数据后或者出现错误后调用的方法。届时传入数据对象，如下：\r\n\t\t *\t\t{String} error 错误信息；如果正常返回数据，该属性等于undifined或false;\r\n\t\t *\t\t{String} result 获得的原生数据为一个字符串； \r\n\t\t * @param {Object} scope 调用回调方法时的this设定\r\n\t\t */\r\n\t\tget : function(url, param, callback, scope){\r\n\t\t\t//拼接url\r\n\t\t\tvar rel = [url],\r\n\t\t\t\tflag, n,v;\r\n\t\t\t\r\n\t\t\tif(isO(param)){\r\n\t\t\t\tif(url.indexOf('?') > -1){\r\n\t\t\t\t\trel.push('&');\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\trel.push('?');\r\n\t\t\t\t}\r\n\t\t\t\trel.push(toUrlParamString(param));\r\n\t\t\t}\r\n\t\t\r\n\t\t\tvar task = new Task({\r\n\t\t\t\ttype : 'GET',\r\n\t\t\t\turl : rel.join(''),\r\n\t\t\t\tparam : undefined,\r\n\t\t\t\tcallback : callback,\r\n\t\t\t\tscope : scope\r\n\t\t\t});\r\n\t\t\ttaskList.push(task);\r\n\t\t\texecuteTask();\r\n\t\t},\r\n\t\t/**\r\n\t\t * 采用POST形式请求结果，该形式多用于数据提交；\r\n\t\t *\r\n\t\t * @param {String} url 链接地址\r\n\t\t * @param {Object} param 传递的数据；要使用名值对形式对数据进行封装；\r\n\t\t *\t\t并且每个属性值都可以使用JSON.stringify方法对其字符串化；\r\n\t\t * @param {Function} callback 获得返回数据后或者出现错误后调用的方法。届时传入数据对象，如下：\r\n\t\t *\t\t{String} error 错误信息；如果正常返回数据，该属性等于undifined或false;\r\n\t\t *\t\t{String} result 获得的原生数据为一个字符串； \r\n\t\t * @param {Object} scope 调用回调方法时的this设定\r\n\t\t */\r\n\t\tpost : function(url, param, callback, scope){\r\n\t\t\tvar task = new Task({\r\n\t\t\t\ttype : 'POST',\r\n\t\t\t\turl : url,\r\n\t\t\t\tparam : param,\r\n\t\t\t\tcallback : callback,\r\n\t\t\t\tscope : scope\r\n\t\t\t});\r\n\t\t\ttaskList.push(task);\r\n\t\t\texecuteTask();\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\tCmp.define('Cmp.util.AjaxProxy',{\r\n\t\tfactory : function(){\r\n\t\t\treturn Proxy;\r\n\t\t}\r\n\t});\r\n}());","/**\r\n * @static Cmp.util.Dates\r\n * 对于日期处理的一些工具方法\r\n * \r\n * @version 1.0.0\r\n * @since 2016-6-10\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\r\n\r\n\tvar Rel = {\r\n\t\t/**\r\n\t\t * 将日期对象转换为一个符合中文习惯的表示日期的字符串；如：2016年06月18日\r\n\t\t *\r\n\t\t * @param {Date} date (必须)日期对象\r\n\t\t * @return {String} \r\n\t\t */\r\n\t\ttoDateStringForCh : function(date){\r\n\t\t\tif(!isD(date)){\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\t\t\tvar rel = [],v;\r\n\t\t\t//年\r\n\t\t\trel.push(date.getFullYear());\t\r\n\t\t\trel.push('年');\r\n\t\t\t//月 \r\n\t\t\tv = date.getMonth()+1;\r\n\t\t\tif(v < 10){\r\n\t\t\t\trel.push('0');\t\r\n\t\t\t}\r\n\t\t\trel.push(v);\r\n\t\t\trel.push('月');\r\n\t\t\t//日\r\n\t\t\tv = date.getDate();\r\n\t\t\tif(v < 10){\r\n\t\t\t\trel.push('0');\t\r\n\t\t\t}\r\n\t\t\trel.push(v);\r\n\t\t\trel.push('日');\r\n\t\t\treturn rel.join('');\r\n\t\t},\r\n\t\t/**\r\n\t\t * 将日期对象转换为一个符合中文习惯的表示月份的字符串；如：2016年06月\r\n\t\t * @param {Date} date (必须)日期对象\r\n\t\t * @return {String} \r\n\t\t */\r\n\t\ttoMonthStringForCh : function(date){\r\n\t\t\tif(!isD(date)){\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\t\t\tvar rel = [],v;\r\n\t\t\t//年\r\n\t\t\trel.push(date.getFullYear());\t\r\n\t\t\trel.push('年');\r\n\t\t\t//月 \r\n\t\t\tv = date.getMonth()+1;\r\n\t\t\tif(v < 10){\r\n\t\t\t\trel.push('0');\t\r\n\t\t\t}\r\n\t\t\trel.push(v);\r\n\t\t\trel.push('月');\r\n\t\t\treturn rel.join('');\r\n\t\t},\r\n\t\t/**\r\n\t\t * 将日期对象转换为通用标准(暨'YYYY-MM-DD')格式的字符串\r\n\t\t * @param {Date} date (必须)日期对象\r\n\t\t * @return {String} \r\n\t\t */\r\n\t\ttoDateString : function(date){\r\n\t\t\tif(!isD(date)){\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\t\t\tvar rel = [],v;\r\n\t\t\t//年\r\n\t\t\trel.push(date.getFullYear());\t\r\n\t\t\t//月 \r\n\t\t\trel.push('-');\r\n\t\t\tv = date.getMonth()+1;\r\n\t\t\tif(v < 10){\r\n\t\t\t\trel.push('0');\t\r\n\t\t\t}\r\n\t\t\trel.push(v);\r\n\t\t\t//日\r\n\t\t\trel.push('-');\r\n\t\t\tv = date.getDate();\r\n\t\t\tif(v < 10){\r\n\t\t\t\trel.push('0');\t\r\n\t\t\t}\r\n\t\t\trel.push(v);\r\n\t\t\treturn rel.join('');\r\n\t\t},\r\n\t\t/**\r\n\t\t * 获得指定月份的天数量\r\n\t\t * @param {Number} year (必须)公历年份值，如：2016\r\n\t\t * @param {Number} month (必须)月份值，1月份得值等于0；12月份的值等于11； \r\n\t\t */\r\n\t\tgetDaysOfMonth : function(year, month){\r\n\t\t\tswitch(month){\r\n\t\t\t\t//四月\r\n\t\t\t\tcase 3:\r\n\t\t\t\t//六月\r\n\t\t\t\tcase 5:\r\n\t\t\t\t//九月\r\n\t\t\t\tcase 8:\r\n\t\t\t\t//十一月\r\n\t\t\t\tcase 10:\r\n\t\t\t\t\treturn 30;\r\n\t\t\t\t//二月份\t\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tif(0 === year % 400 || (0 !== year % 100 && 0 === year % 4)){\r\n\t\t\t\t\t\t//闰年\r\n\t\t\t\t\t\treturn 29;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\t//平年\r\n\t\t\t\t\t\treturn 28;\r\n\t\t\t\t\t}\r\n\t\t\t\t//一，三，五，七，八，十，十二月份\t\r\n\t\t\t\tdefault :\r\n\t\t\t\t\treturn 31\t\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\tCmp.define('Cmp.util.Dates',{\r\n\t\tfactory : function(){\r\n\t\t\treturn Rel;\r\n\t\t}\r\n\t\r\n\t});\r\n}());","/**\r\n * @class Cmp.util.KeyMap\r\n * @extend Object\r\n * 键盘操作影射；对于键盘的各种键位字符处理影射。\r\n * \r\n * @version 2.0.0\r\n * @since 2016-03-31\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\r\n\t/**\r\n\t * \r\n\t * @param {Element} target 本次键盘事件绑定的目标对象；\r\n\t * @param {String} keyEventName 所要绑定的键盘事件名，可以设定的值有：'keypress','keydown','keyup'\r\n\t */\r\n\tvar Rel = function(target, keyEventName){\r\n\t\tvar me = this,\r\n\t\t\t//白名单标记\r\n\t\t\tprevented = false,\r\n\t\t\t//已经绑定事件的标记\r\n\t\t\tbingedKeyEvent = false;\r\n\t\tme.keyMaps = {};\r\n\t\tme.eventProxy = new Cmp.util.EventProxy();\r\n\t\t\r\n\t\t/**\r\n\t\t * @private\r\n\t\t * 响应键盘事件的处理方法\r\n\t\t */\r\n\t\tvar onKeyEvent = function(ev){\r\n\t\t\tvar c = ev.keyCode;\r\n\t\t\tc = c ? c+'' : false;\r\n//\t\t\tputLog('KeyMap#onKeyEvent> keyCode:'+c);\r\n\t\t\tc = me.keyMaps[c];\r\n\t\t\tif(c){\r\n\t\t\t\tif(isF(c.handler)){\r\n\t\t\t\t\tvar args = [ev, target];\r\n\t\t\t\t\tif(isA(c.args)){\r\n\t\t\t\t\t\targs = args.concat(c.args);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(false !== c.handler.apply(c.scope || window, args)){\r\n\t\t\t\t\t\tme.eventProxy.fire(ev, target);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tme.eventProxy.fire(ev, target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(!prevented){\r\n\t\t\t\tme.eventProxy.fire(ev, target);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t *  绑定键盘事件，如果已经绑定则忽略本次请求。\r\n\t\t */\r\n\t\tme.bindKeyEvent = function(){\r\n\t\t\tif(!bingedKeyEvent){\r\n\t\t\t\tbingedKeyEvent = true;\r\n\t\t\t\ttarget.on(keyEventName, onKeyEvent, me);\r\n\t\t\t}\r\n\t\t}\r\n\t\t/**\r\n\t\t * 释放键盘事件\r\n\t\t */\r\n\t\tme.releaseKeyEvent = function(){\r\n\t\t\tif(bingedKeyEvent){\r\n\t\t\t\tbingedKeyEvent = false;\r\n\t\t\t\ttarget.un(keyEventName, onKeyEvent, me);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * 将键盘事件分发策略为白名单性质。\r\n\t\t * 暨当键盘按下的键不再列表中时，将不再继续分发事件(参考：JavaScript关于Event#stopPropagation()的说明)，并禁止浏览器对该事件进行响应(参考：JavaScript关于Event#preventDefault()的说明)。\r\n\t\t */\r\n\t\tme.preventKeyEvent = function(){\r\n\t\t\tprevented = true;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * 将键盘事件分发策略不再使用白名单。\r\n\t\t */\r\n\t\tme.unpreventKeyEvent = function(){\r\n\t\t\tprevented = false;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * 销毁该影射，并释放所有监听的事件\r\n\t\t */\r\n\t\tme.distory = function(){\r\n\t\t\tme.releaseKeyEvent();\r\n\t\t\t\r\n\t\t\tme.eventProxy.destory();\r\n\r\n\t\t\tdelete me.keyMaps;\r\n\t\t\tdelete me.eventProxy;\r\n\t\t}\r\n\t};\r\n\t\r\n\tRel.prototype = {\r\n\t\r\n\t\t/**\r\n\t\t * 添加键盘事件监听方法。\r\n\t\t * 所添加的方法会在键为指定方法调用后，被调用。调用该方法时，会传入所发生的event对象，绑定的Dom对象；\r\n\t\t * @param {Fucntion} handler 功能方法\r\n\t\t * @param {Object} scope 调用功能方法时设定的this对象\r\n\t\t */\r\n\t\taddListener : function(handler, scope){\r\n\t\t\tif(isF(handler)){\r\n\t\t\t\tthis.eventProxy.addListener(handler, scope);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * 移除键盘事件监听方法。\r\n\t\t * @param {Fucntion} handler 功能方法\r\n\t\t * @param {Object} scope 调用功能方法时设定的this对象\r\n\t\t */\r\n\t\tremoveListener : function(handler, scope){\r\n\t\t\tif(isF(handler)){\r\n\t\t\t\tthis.eventProxy.removeListener(handler, scope);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * 对指定的键进行响应。\r\n\t\t *\r\n\t\t * @param {String} keyCode (必须)键编码值或者是由编码值与调用方法组成的对象：\r\n\t\t * @param {Fucntion} handler (可选)响应事件的回调方法，调用该方法时，会传入所发生的event对象，绑定的Dom对象，以及传入的追加参数。\r\n\t\t *\t\t如果被调用方法返回false；将不再调用通过#addListener()方法传入的方法。\r\n\t\t * @param {Object} scope (可选)调用handler时设定的this对象\r\n\t\t * @param {Array} args (可选)调用handler时，追加的其他参数。\r\n\t\t */\r\n\t\taddKey : function(keyCode, handler, scope, args){\r\n\t\t\tvar me = this;\r\n\t\t\tif(isO(keyCode)){\r\n\t\t\t\tscope = keyCode.scope;\r\n\t\t\t\targs = keyCode.args;\r\n\t\t\t\tvar\ti,v;\r\n\t\t\t\tfor(i in keyCode){\r\n\t\t\t\t\tif('scope' === i\r\n\t\t\t\t\t\t|| 'args' === i){\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tv = keyCode[i];\r\n\t\t\t\t\ti = i+'';\r\n\t\t\t\t\tme.keyMaps[i] = {\r\n\t\t\t\t\t\thandler : v,\r\n\t\t\t\t\t\tscope : scope,\r\n\t\t\t\t\t\targs : args\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(isN(keyCode) || isS(keyCode)){\r\n\t\t\t\tkeyCode = keyCode + '';\r\n\t\t\t\tme.keyMaps[keyCode] = {\r\n\t\t\t\t\thandler : handler,\r\n\t\t\t\t\tscope : scope,\r\n\t\t\t\t\targs : args\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * 移除对指定键的响应；\r\n\t\t * @param {String/Number/Array} keyCode (必须)键编码值或编码值组成的数组；\r\n\t\t */\r\n\t\tremoveKey : function(keyCode){\r\n\t\t\tvar me = this;\r\n\t\t\t\r\n\t\t\tif(isA(keyCode)){\r\n\t\t\t\tfor(var i=0,len = keyCode.length, n; i<len;i++){\r\n\t\t\t\t\tn = keyCode[i]+'';\r\n\t\t\t\t\tdelete me.keyMaps[n];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(isN(keyCode) || isS(keyCode)){\r\n\t\t\t\tkeyCode = keyCode+'';\r\n\t\t\t\tdelete me.keyMaps[keyCode];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tRel.prototype.on = Rel.prototype.addListener;\r\n\tRel.prototype.un = Rel.prototype.removeListener;\r\n\t\r\n\tCmp.define('Cmp.util.KeyMap',{\r\n\t\tfactory : function(){\r\n\t\t\treturn Rel;\r\n\t\t}\r\n\t});\r\n}());","/**\r\n * 对于一条数据的结构描述；\r\n * <p>\r\n * 类似于Java中java.util.Map类的JavaScript上的封装，并加入了一些JS特性。\r\n * \r\n * @class Cmp.util.Record\r\n * @extend Cmp.util.Observable\r\n *\r\n * @version 1.0.0\r\n * @since 2015-10-31\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\tvar Record = Cmp.extend(Cmp.util.Observable, {\r\n\t\t/**\r\n\t\t * @constructor\r\n\t\t * \r\n\t\t * @data {Object} value 初始时设定的数据。\r\n\t\t * @data {Array} allowKeies 允许设定的键值，\r\n\t\t *\t\t当不设定该值(等于null，undefined或长度为0的数组)时，表示不对设定的key作限制。\r\n\t\t *\r\n\t\t * @param {Object} config 预定义的数据配置，其属性参考@data注释\r\n\t\t * @param {Mixed} listeners 定义的数据监听方法。\r\n\t\t */\r\n\t\tconstructor : function(config, listeners){\r\n\t\t\tvar me = this,\r\n\t\t\t\t//名值对\r\n\t\t\t\tdata = {},\r\n\t\t\t\t//已存在的key\r\n\t\t\t\tkeies = [],\r\n\t\t\t\t//允许设定的key\r\n\t\t\t\tallowKeies = false,\r\n\t\t\t\t//长度\r\n\t\t\t\tlength = 0,\r\n\t\t\t\t//事务模式标记\r\n\t\t\t\tediting = false,\r\n\t\t\t\teditBatch;\r\n\t\t\t\r\n\t\t\tme.addEvents(\r\n\t\t\t\t/**\r\n\t\t\t\t * @event\r\n\t\t\t\t * 当数据发生的时候，触发该事件。\r\n\t\t\t\t * <p>\r\n\t\t\t\t * 不在事务模式下时，调用set，remove这两个方法将有可能触发该事件。\r\n\t\t\t\t * 在事务模式下，调用endEdit,commit这两个方法将有可能触发该事件。\r\n\t\t\t\t *\r\n\t\t\t\t * @param {Record} this\r\n\t\t\t\t */\r\n\t\t\t\t'changed'\r\n\t\t\t);\r\n\t\t\t//设定监听\r\n\t\t\tRecord.superclass.constructor.call(me, {\r\n\t\t\t\tlisteners : listeners\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * 实际执行put操作的方法。该方法只会进行数据操作，不负责事件分发。\r\n\t\t\t * @param {String/Object/Record} key 当为一个字符串的时候，会认定这是一个属性名；\r\n\t\t\t *\t\t\t\t\t\t\t\t\t 当为一个Record对象的时候，则认为使用这条数据中的各项值来覆盖当前这条数据；\r\n\t\t\t *\t\t\t\t\t\t\t\t\t 当为一个普通数据对象的时候，则认为使用这个对象为一个key/value形式的名值对，并使用这些值来覆盖当前这条数据。\r\n\t\t\t * @param {Object} value 所设定的值，可以使任何一个对象，但当等于undefined的时候，则会认为需要从当前这条数据中移除这项数据(当key等于一个字符串时是这样认为的)。\r\n\t\t\t * @return {Boolean} 值发生了改变的时候，返回true。否则返回false.\r\n\t\t\t */\r\n\t\t\tvar putByInner = function(key, value){\r\n\t\t\t\tvar k,v,i,ov,c = false;\r\n\t\t\t\tif(isS(key)){\r\n\t\t\t\t\tov = {};\r\n\t\t\t\t\tov[key] = value;\r\n\t\t\t\t\tkey = ov;\r\n\t\t\t\t}\r\n\t\t\t\tfor(k in key){\r\n\t\t\t\t\tv = key[k];\r\n\t\t\t\t\tov = data[k];\r\n\t\t\t\t\tif(v !== ov\r\n\t\t\t\t\t\t\t&& (!allowKeies || allowKeies.indexOf(k) > -1)){\r\n\t\t\t\t\t\ti = keies.indexOf(k);\r\n\t\t\t\t\t\tif(undefined === v){\r\n\t\t\t\t\t\t\tdelete data[k];\r\n\t\t\t\t\t\t\tif(i > -1){\r\n\t\t\t\t\t\t\t\tkeies.slice(i, 1);\r\n\t\t\t\t\t\t\t\tlength--;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tdata[k] = v;\r\n\t\t\t\t\t\t\tif(i < 0){\r\n\t\t\t\t\t\t\t\tkeies.push(k);\r\n\t\t\t\t\t\t\t\tlength++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tc = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn c;\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * 实际执行remove操作。\r\n\t\t\t * \r\n\t\t\t * @param {String/Array} key 期望移除的数据项键值或这些键值组成的数组\r\n\t\t\t * @return {Object/Array} 所移除的数据项得值；如果key传入的是一个字符串，则返回之前设定的值；如果是一个数组，则返回一个同样长度的数组。\r\n\t\t\t *\t\t如果返回undefined则说明当前没有设定这个属性。\r\n\t\t\t */\r\n\t\t\tvar removeByInner = function(key){\r\n\t\t\t\tvar ind,k,ov,c,rel;\r\n\t\t\t\tif(isS(key)){\r\n\t\t\t\t\tov = data[key];\r\n\t\t\t\t\tdelete data[key];\r\n\t\t\t\t\tif(undefined === ov){\r\n\t\t\t\t\t\treturn undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tind = keies.indexOf(key);\r\n\t\t\t\t\tif(ind > -1){\r\n\t\t\t\t\t\tkeies.slice(ind, 1);\r\n\t\t\t\t\t\tlength--;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ov;\r\n\t\t\t\t}\r\n\t\t\t\telse if(isA(key)){\r\n\t\t\t\t\trel = [];\r\n\t\t\t\t\tc = false;\r\n\t\t\t\t\tfor(var i=0, len = key.length; i<len; i++){\r\n\t\t\t\t\t\tk = key[i];\r\n\t\t\t\t\t\tov = data[k];\r\n\t\t\t\t\t\tdelete data[key];\r\n\t\t\t\t\t\tif(undefined === ov){\r\n\t\t\t\t\t\t\trel.push(undefined);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\trel.push(ov);\r\n\t\t\t\t\t\t\tc = true;\r\n\t\t\t\t\t\t\tind = keies.indexOf(k);\r\n\t\t\t\t\t\t\tif(ind > -1){\r\n\t\t\t\t\t\t\t\tkeies.slice(ind, 1);\r\n\t\t\t\t\t\t\t\tlength--;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn c ? rel : undefined;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * 返回true表示当前数据是空的，即count方法返回值等于0；\r\n\t\t\t *\r\n\t\t\t * @return {Boolean} 返回true表示当前数据是空的。\r\n\t\t\t */\r\n\t\t\tme.isEmpty = function(){\r\n\t\t\t\treturn 0 === length;\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * 获取指定key的值\r\n\t\t\t *\r\n\t\t\t * @param {String} key 键值\r\n\t\t\t * @return {Object} 之前设定的值\r\n\t\t\t */\r\n\t\t\tme.get = function(key){\r\n\t\t\t\treturn data[key];\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * 设定属性值\r\n\t\t\t * \r\n\t\t\t * @param {String/Object/Record} key 当为一个字符串的时候，会认定这是一个属性名；\r\n\t\t\t *\t\t\t\t\t\t\t\t\t 当为一个Record对象的时候，则认为使用这条数据中的各项值来覆盖当前这条数据；\r\n\t\t\t *\t\t\t\t\t\t\t\t\t 当为一个普通数据对象的时候，则认为使用这个对象为一个key/value形式的名值对，并使用这些值来覆盖当前这条数据。\r\n\t\t\t * @param {Object} value 所设定的值，可以使任何一个对象，但当等于undefined的时候，则会认为需要从当前这条数据中移除这项数据(当key等于一个字符串时是这样认为的)。\r\n\t\t\t * @return {Record} this\r\n\t\t\t */\r\n\t\t\tme.put = function(key, value){\r\n\t\t\t\tif(editing){\r\n\t\t\t\t\teditBatch.push({\r\n\t\t\t\t\t\tinkove : 'putByInner',\r\n\t\t\t\t\t\tparams : [key, value]\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tvar c = putByInner(key, value);\r\n\t\t\t\t\tif(c){\r\n\t\t\t\t\t\tme.fireEvent('changed', me);\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn me;\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * 移除指定的数据项，并返回这个数据项之前设定的值\r\n\t\t\t * <p>\r\n\t\t\t * \r\n\t\t\t * @param {String/Array} key 期望移除的数据项键值或这些键值组成的数组\r\n\t\t\t * @return {Object/Array} 所移除的数据项得值；如果key传入的是一个字符串，则返回之前设定的值；如果是一个数组，则返回一个同样长度的数组。如果在事务模式下，会返回undefined\r\n\t\t\t */\r\n\t\t\tme.remove = function(key){\r\n\t\t\t\tif(editing){\r\n\t\t\t\t\teditBatch.push({\r\n\t\t\t\t\t\tinkove : 'removeByInner',\r\n\t\t\t\t\t\tparams : [key]\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn undefined;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tvar c = removeByInner(key);\r\n\t\t\t\t\tif(c){\r\n\t\t\t\t\t\tme.fireEvent('changed', me);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn c;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * 获得当前所配置数据项的长度。\r\n\t\t\t */\r\n\t\t\tme.count = function(){\r\n\t\t\t\treturn length;\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * 以数组形式返回当前数据中设定项的键。\r\n\t\t\t * @return {Array} 以项的键组成的数组。\r\n\t\t\t */\r\n\t\t\tme.keies = function(){\r\n\t\t\t\treturn keies.slice(0);\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * 以数组形式返回当前数据中设定项的值。\r\n\t\t\t * @return {Array} 以项值组成的数组。\r\n\t\t\t */\r\n\t\t\tme.values = function(){\r\n\t\t\t\tvar i,rel = [];\r\n\t\t\t\tfor(i in data){\r\n\t\t\t\t\trel.push(data[i]);\r\n\t\t\t\t}\r\n\t\t\t\treturn rel;\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * 以数组形式返回当前数据中设定的数据项；这个数组中每一项都是一个包含有key和value属性的对象。\r\n\t\t\t *\r\n\t\t\t * @return {Array} 包含有key和value属性的对象组成的数组。\r\n\t\t\t */\r\n\t\t\tme.entrys = function(){\r\n\t\t\t\tvar i, rel = [];\r\n\t\t\t\tfor(i in data){\r\n\t\t\t\t\trel.push({\r\n\t\t\t\t\t\tkey : i,\r\n\t\t\t\t\t\tvalue : data[i]\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} \r\n\t\t\t/**\r\n\t\t\t * 以名值对的形式，返回当前数组中设定的数据。其属性名为键，属性值为值。\r\n\t\t\t *\r\n\t\t\t * @return {Object} 以项的键为属性名，项的值为属性值的数据对象。\r\n\t\t\t */\r\n\t\t\tme.data = function(){\r\n\t\t\t\treturn Cmp.apply({}, data);\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * 开启事务模式\r\n\t\t\t * <p>\r\n\t\t\t * 开启事务模式后，在调用put，remove这两个方法时，并不会立即生效且不会发送'changed'事件。\r\n\t\t\t * 只有当调用commit或者是endEdit方法时，才会生效。\r\n\t\t\t */\r\n\t\t\tme.beginEdit = function(){\r\n\t\t\t\tif(false === editing){\r\n\t\t\t\t\teditBatch = [];\r\n\t\t\t\t}\r\n\t\t\t\tediting = true;\r\n\t\t\t\treturn me;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * 取消事务模式，并撤销之前所得编辑操作\r\n\t\t\t */\r\n\t\t\tme.cancelEdit = function(){\r\n\t\t\t\teditBatch = undefined;\r\n\t\t\t\tediting = false;\r\n\t\t\t\treturn me;\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * 提交之前所做的编辑，并继续保持在事物模式。\r\n\t\t\t *\r\n\t\t\t * @return {Boolean} 返回true表示之前进行过修改。\r\n\t\t\t */\r\n\t\t\tme.commit = function(){\r\n\t\t\t\tif(true === editing){\r\n\t\t\t\t\tvar i = 0,\r\n\t\t\t\t\t\tbatchs = editBatch.splice(0),\r\n\t\t\t\t\t\tlen = batchs.length,\r\n\t\t\t\t\t\tb,c = false;\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor(;i<len;i++){\r\n\t\t\t\t\t\tb = batchs[i];\r\n\t\t\t\t\t\tif('removeByInner' === b.inkove){\r\n\t\t\t\t\t\t\tif(undefined !== removeByInner(b.params[0])){\r\n\t\t\t\t\t\t\t\tc = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\telse if('putByInner' === b.inkove){\r\n\t\t\t\t\t\t\tif(true === putByInner(b.params[0],b.params[1])){\r\n\t\t\t\t\t\t\t\tc = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(c){\r\n\t\t\t\t\t\tme.fireEvent('changed', me);\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * 结束事务模式，并使之前所做的编辑操作生效。\r\n\t\t\t */\r\n\t\t\tme.endEdit = function(){\r\n\t\t\t\tme.commit();\r\n\t\t\t\tme.cancelEdit();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t//初始化数据\r\n\t\t\tif(isA(config.allowKeies) && config.allowKeies.length > 0){\r\n\t\t\t\tallowKeies = config.allowKeies.slice(0);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(isO(config.value)){\r\n\t\t\t\tfor(var k in config.value){\r\n\t\t\t\t\tif(!allowKeies || allowKeies.indexOf(k) > -1){\r\n\t\t\t\t\t\tdata[k] = config.value[k];\r\n\t\t\t\t\t\tkeies.push(k);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlength = keies.length;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\t\r\n\t\t\r\n\tCmp.define('Cmp.util.Record',{\r\n\t\tfactory : function(){\r\n\t\t\treturn Record;\r\n\t\t}\r\n\t});\r\n}());","/**\r\n * 对于一组具有相同属性的数据条目集合的数据结构类。\r\n * <p>\r\n * 这种数据结构可以看成是数据库中一张库表。我们可以先对这个数据结构进行定义，再往里添加数据 \r\n *\r\n * @abstract\r\n * @class Cmp.util.TableModel\r\n * @extend Cmp.util.Observable\r\n * 该类有两个典型子类，如下：\r\n * @subclass Cmp.util.ArrayTableModel\r\n * @subclass Cmp.util.MapTableModel\r\n * \r\n * @version 1.0.0\r\n * @since 2015-10-31\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\tvar UV = Cmp.util.ValueHelper,\r\n\t\tRecord;\r\n\t/**\r\n\t * 对指定的数据进行排序，并返回排序后的数据。\r\n\t * @param {Array} records 排序数据\r\n\t * @param {sortInfo} sortInfo 排序设定，对象具有两个属性，为key和dir;前者为排序键，后者为排序方向('asc'或'desc',默认为'asc');\r\n\t */\r\n\tvar sort = function(records, sortInfo){\r\n\t\tif(!isA(records) || records.length == 0\r\n\t\t\t||  !sortInfo || !sortInfo.key){\r\n\t\t\treturn records;\r\n\t\t}\r\n\t\t\r\n\t\tvar k = sortInfo.key,\r\n\t\t\td = 'desc' == sortInfo.dir;\r\n\t\trecords.sort(function(r1, r2){\r\n\t\t\tvar v1 = r1.get(k);\r\n\t\t\tvar v2 = r2.get(k);\r\n\t\t\treturn d ? -UV.compare(v1, v2) : UV.compare(v1, v2);\r\n\t\t});\t\t\t\r\n\t\treturn records;\r\n\t}\r\n\t\r\n\t/**\r\n\t * 对指定的数据进行过滤，并返回符合条件的数据。\r\n\t * @param {Array} records 过滤的数据。\r\n\t * @param {Object} filterInfo (可选)过滤要求，如果不去设定，就相当于取消之前的过滤设定。对象具有属性如下：\r\n\t * \t\t<li> {Function} compare (可选)对Record进行过滤得比较方法。调用该方法将会传入一个Record对象，如果符合要求，则返回true;\r\n\t *\t\t<li> {Object} scope (可选)调用compare方法时设定的this对象。只有设定compare时有效\r\n\t * \t\t<li> {String/Object} key (可选) 没设定compare时有效，当为一个对象的时候，则表示对多个键进行比对，这个对象的属性对则是一个键和键值的匹配条件。当是一个字符串时为需要比对的键名称，\r\n\t *\t\t<li> {Object} value (可选) 需要比对键的值，没设定compare且设定了key为一个字符串时有效\r\n\t */\r\n\tvar filter = function(records, filter){\r\n\t\tif(!isA(records) || records.length == 0){\r\n\t\t\treturn [];\r\n\t\t}\r\n\t\tif(!filter){\r\n\t\t\treturn records.slice(0);\r\n\t\t}\r\n\t\t\r\n\t\tvar rel,\r\n\t\t\tcomp = filter.compare;\r\n\t\tif(isF(comp)){\r\n\t\t\trel = [];\r\n\t\t\tCmp.each(records, function(r){\r\n\t\t\t\tif(comp.call(filter.scope || {}, r)){\r\n\t\t\t\t\trel.push(r);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn rel;\r\n\t\t}\r\n\t\t\r\n\t\tif(isS(filter.key)){\r\n\t\t\tvar o = {};\r\n\t\t\to[filter.key] = filter.value\r\n\t\t\tfilter.key = o;\r\n\t\t}\r\n\t\tif(isO(filter.key)){\r\n\t\t\tvar i,v,av,c,\r\n\t\t\t\to = filter.key,\r\n\t\t\t\trel = [];\r\n\t\t\tCmp.each(records, function(r){\r\n\t\t\t\tc = true;\r\n\t\t\t\tfor(i in o){\r\n\t\t\t\t\tav = o[i];\r\n\t\t\t\t\tv = r.get(i);\r\n\t\t\t\t\tif(0 !== UV.compare(v, av)){\r\n\t\t\t\t\t\tc = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(c){\r\n\t\t\t\t\trel.push(r);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn rel;\r\n\t\t}\r\n\t\t\r\n\t\treturn records.slice(0);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * 将指定数据放到当前数据最后面；\r\n\t * 该方法只会将传入数据转换为Reocrd并放到属性values的最后面；\r\n\t * \r\n\t * @return {Boolean/Array} 返回false表示没有添加任何数据，否则返回Record对象实例组成的数组。；\r\n\t */\r\n\tvar doInsert = function(values){\r\n//\t\tputLog('TableModel#doInsert>');\r\n\t\tif(isO(values) && !isA(values)){\r\n\t\t\tvalues = [values];\r\n\t\t}\r\n\t\tif(!isA(values)){\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\tvar me = this,\r\n\t\t\ti = 0,\r\n\t\t\tlen = values.length,\r\n\t\t\trel = [],\r\n\t\t\tr,rid;\r\n\t\t\r\n\t\tfor(;i<len;i++){\r\n\t\t\tr = me.createRecord(values[i]);\r\n\t\t\tif(!r){\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tr.on('changed', onRecordChanged, me);\r\n\t\t\t\r\n\t\t\tif(true === me.editing){\r\n\t\t\t\t//如果当前进入了事务状态，则也需要这个也进入事务状态。\r\n\t\t\t\tr.beginEdit();\r\n\t\t\t}\r\n\t\t\tme.values.push(r);\r\n\t\t\trel.push(r);\r\n\t\t\tif(false !== me.idKey){\r\n\t\t\t\trid = r.get(me.idKey);\r\n\t\t\t\tme.idValues[rid] = r;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(me.filterInfo){\r\n\t\t\trel = filter(rel, me.filterInfo);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tif(me.resultValues && rel.length > 0){\r\n\t\t\tCmp.each(rel, function(r){\r\n\t\t\t\tme.resultValues.push(r);\r\n\t\t\t});\r\n\t\t\t//排序\r\n\t\t\tif(me.sortInfo){\r\n\t\t\t\tme.resultValues = sort(me.resultValues, me.sortInfo);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn 0 === rel.length ? false : rel;\r\n\t}\r\n\t/**\r\n\t * 数据实际删除方法。\r\n\t * @param {Mixed} records 由Record实例或者是Record Id 组成的数组。\r\n\t * @return {Boolean/Array} 返回false表示没有删除任何数据，否则就是返回所删除Record组成的数组。\r\n\t */\r\n\tvar doRemove = function(records){\r\n//\t\tputLog('TableModel#doRemove>');\r\n\t\tif(isS(records) \r\n\t\t\t|| (records instanceof Record)){\r\n\t\t\trecords = [records];\r\n\t\t}\r\n\t\tif(!isA(records)){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tvar me = this,\r\n\t\t\tvs = me.values,\r\n\t\t\tidk = me.idKey,\r\n\t\t\tidvs = me.idValues,\r\n\t\t\ti = 0,\r\n\t\t\tlen = records.length,\r\n\t\t\trel = [],\r\n\t\t\tv,r,ri;\r\n\t\t\t\r\n\t\tfor(;i<len;i++){\r\n\t\t\tv = records[i];\r\n\t\t\tif(isS(v)){\r\n\t\t\t\tr = idvs ? idvs[v] : false;\r\n\t\t\t}\r\n\t\t\telse if(v instanceof Record){\r\n\t\t\t\tr = v;\r\n\t\t\t\tv = idk ? r.get(idk) : false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//从队列里面删除\r\n\t\t\tri = vs.indexOf(r);\r\n\t\t\tif(ri > -1){\r\n\t\t\t\tvs.splice(ri, 1);\r\n\t\t\t\t//从影射里面删除\r\n\t\t\t\tif(idvs){\r\n\t\t\t\t\tdelete idvs[v];\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t//清除绑定事件。\r\n\t\t\t\tr.purgeListeners();\r\n\t\t\t\t\r\n\t\t\t\t//放入结果集\r\n\t\t\t\trel.push(r);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(rel.length > 0){\r\n\t\t\t//重新构建返回结果集\r\n\t\t\tme.resultValues = filter(me.values, me.filterInfo);\r\n\t\t\t//重新排序\r\n\t\t\tme.resultValues = sort(me.resultValues, me.sortInfo);\r\n\t\t\treturn rel;\t\r\n\t\t}\r\n\t\telse{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * 响应数据条目属性发生了变化后的处理逻辑。\r\n\t */\r\n\tvar onRecordChanged = function(r){\r\n\t\tvar me = this;\r\n\t\tif(true !== me.editing){\r\n\t\t\t//不在事务状态时候，需要分发事件；并重新进行过滤\r\n\t\t\t\r\n\t\t\t//过滤\r\n\t\t\tme.resultValues = filter(me.values, me.filterInfo);\r\n\t\t\t//重新排序\r\n\t\t\tme.resultValues = sort(me.resultValues, me.sortInfo);\r\n\t\t\t\r\n\t\t\tme.fireEvent('edit', me, r);\r\n\t\t\tme.fireEvent('changed', 'edit', me, r);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * 编辑操作影射。\r\n\t */\r\n\tvar EDIT_HANDLER = {\r\n\t\tinsert : doInsert,\r\n\t\tremove : doRemove\r\n\t}; \r\n\t\r\n\t\r\n\t/**\r\n\t * 比对两个过滤条件设定的是否相等。如果相等则返回true。\r\n\t * \r\n\t */\r\n\tvar compareFilter = function(of, nf){\r\n\t\tif(of == nf){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif(of == undefined || nf == undefined){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t//获取所有的属性名\r\n\t\tvar getNames = function(o){\r\n\t\t\tvar ms = [];\r\n\t\t\tfor(var i in o){\r\n\t\t\t\tms.push(i);\r\n\t\t\t}\r\n\t\t\treturn ms;\r\n\t\t}\r\n\t\t\r\n\t\tvar oms = getNames(of),\r\n\t\t\tnms = getNames(nf);\r\n\t\t//配置属性名不一样，返回false。\r\n\t\tif(!UV.compareArray(oms, nms)){\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\tvar n,ov,nv;\r\n\t\tfor(var i=0, len = oms.length; i< len;i++){\r\n\t\t\tn = oms[i];\r\n\t\t\tov = of[n];\r\n\t\t\tnv = nf[n];\r\n\t\t\tif(0 !== UV.compare(ov, nv)){\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\t\r\n\tCmp.define('Cmp.util.TableModel',{\r\n\t\textend : 'Cmp.util.Observable',\r\n\t\trequires : [\r\n\t\t\t'Cmp.util.Record'\r\n\t\t],\r\n\t\tfactory : function(ext, reqs){\r\n\t\t\tvar superClass = ext.prototype;\r\n\t\t\tRecord = reqs[0];\r\n\t\t\treturn Cmp.extend(ext, {\r\n\t\t\t\t/**\r\n\t\t\t\t * @cfg {Array} keies (必须)每个字段都具备的键。数组中每一项都是一个字符串(注意大小写)。\r\n\t\t\t\t */\r\n\t\t\t\t/**\r\n\t\t\t\t * @cfg {Number} idIndex (可选)可以作为ID的键，在keies配置数组上的次序。如果不设定，则使用getById方法是一律返回undefined;\r\n\t\t\t\t */\r\n\t\t\t\t/**\r\n\t\t\t\t * @cfg {Array} values (可选)初始创建时所具备的数据；每一项为一个数据对象，通过该对象可以创建一个Record实例。\r\n\t\t\t\t */\r\n\t\t\t\t/**\r\n\t\t\t\t * @cfg {Object} sort (可选)初始时的排序要求。对象具有两个属性，为key和dir;前者为排序键，后者为排序方向('asc'或'desc',默认为'asc');\r\n\t\t\t\t */ \r\n\t\t\t\t/**\r\n\t\t\t\t * @cfg {Object} filter (可选)初始时的过滤要求，对象具有属性如下：\r\n\t\t\t\t * \t\t<li> {Function} compare (可选)对Record进行过滤得比较方法。调用该方法将会传入一个Record对象，如果符合要求，则返回true;\r\n\t\t\t\t *\t\t<li> {Object} scope (可选)调用compare方法时设定的this对象。只有设定compare时有效\r\n\t\t\t\t * \t\t<li> {String/Object} key (可选) 没设定compare时有效，当为一个对象的时候，则表示对多个键进行比对，这个对象的属性对则是一个键和键值的匹配条件。当是一个字符串时为需要比对的键名称，\r\n\t\t\t\t *\t\t<li> {Object} value (可选) 需要比对键的值，没设定compare且设定了key为一个字符串时有效\r\n\t\t\t\t */\r\n\t\t\t\t/**\r\n\t\t\t\t * @constructor\r\n\t\t\t\t */\r\n\t\t\t\tconstructor : function(config){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tconfig = config || {};\r\n\t\t\t\t\tme.keies = isA(config.keies) ? config.keies : [];\r\n\t\t\t\t\tme.values = [];\r\n\t\t\t\t\t\r\n\t\t\t\t\t//作为ID的键名称\r\n\t\t\t\t\tme.idKey = false;\r\n\t\t\t\t\t//以ID为属性名，{Record}实例为值得名值对。如果等于false则说明没有设定为ID的键名称\r\n\t\t\t\t\tme.idValues = false; \r\n\t\t\t\t\t\r\n\t\t\t\t\tif(isN(config.idIndex) && config.idIndex < me.keies.length){\r\n\t\t\t\t\t\tme.idValues = {};\r\n\t\t\t\t\t\tme.idKey = me.keies[config.idIndex];\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tdoInsert.call(me, config.values);\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.resultValues = filter(me.values, config.filter);\r\n\t\t\t\t\tme.filterInfo = config.filter;\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.resultValues = sort(me.resultValues, config.sort);\r\n\t\t\t\t\tme.sortInfo = config.sort;\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.addEvents(\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * 因设定排序条件导致返回结果集的顺序发生变化后，分发该事件。\r\n\t\t\t\t\t\t * @param {TableModel} this\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t'sort',\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * 因设定过滤条件导致返回结果集数量发生变化后，分发该事件。\r\n\t\t\t\t\t\t * @param {TableModel} this\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t'filter',\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * 因返回结果集中的一条数据发生了变化后，分发该事件。\r\n\t\t\t\t\t\t * @param {TableModel} this\r\n\t\t\t\t\t\t * @param {Record} record 发生变化的数据\r\n\t\t\t\t\t\t */ \r\n\t\t\t\t\t\t'edit',\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * 因调用添加数据方法，导致返回结果集发生后，分发该事件。\r\n\t\t\t\t\t\t * @param {TableModel} this\r\n\t\t\t\t\t\t * @param {Array} records 新增数据\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t'insert',\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * 因调用删除数据方法导致返回结果集发生后，分发该事件。\r\n\t\t\t\t\t\t * \r\n\t\t\t\t\t\t * @param {TableModel} this\r\n\t\t\t\t\t\t * @param {Array} records 删除数据\r\n\t\t\t\t\t\t */ \r\n\t\t\t\t\t\t'remove',\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * 因调用重设数据方法导致返回结果集发生了变化后，分发该事件。\r\n\t\t\t\t\t\t * @param {TableModel} this\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t'reload',\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * 数据结果集发生变化后，触发因素有以下几种：\r\n\t\t\t\t\t\t * 1> 返回结果集中的一条或多条数据发生了变化。\r\n\t\t\t\t\t\t * 2> 因设定过滤条件导致返回结果集数量发生变化。\r\n\t\t\t\t\t\t * 3> 因设定排序条件导致返回结果集的顺序发生变化。\r\n\t\t\t\t\t\t * 4> 因调用添加、删除、重设数据方法导致返回结果集发生了变化。\r\n\t\t\t\t\t\t * \r\n\t\t\t\t\t\t * @param {String} type 变化类型，如：sort,filter,edit,reload,insert,remove,commit\r\n\t\t\t\t\t\t * @param {TableModel} this \r\n\t\t\t\t\t\t * @param {Mixed} records 如果为insert,remove,edit这三种事件，该参数则是其变化数据\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t'changed'\r\n\t\t\t\t\t);\r\n\t\t\t\t\tsuperClass.constructor.call(me, config);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 新增数据\r\n\t\t\t\t * <p>\r\n\t\t\t\t * 新增的数据会添加到数据结构中，然后根据当前设定的过滤条件和排序要求放入返回结果集中。\r\n\t\t\t\t * 如果有数据放入结果集，将会触发'insert'和'changed'事件。\r\n\t\t\t\t * 如果当前处于事务状态，则不会立即生效。而需要等到endEdit或者是commit之后才会生效。\r\n\t\t\t\t *\r\n\t\t\t\t * @param {Array} values 对象数组，每一个对象都可以被创建成一个Record，也就是这个数据对象要具有该结构所生命的键名。\r\n\t\t\t\t * @return {TableModel} this\r\n\t\t\t\t */\r\n\t\t\t\tinsert : function(values){\r\n\t\t\t\t\tvar me = this;\r\n\t\t//\t\t\tputLog('TableModel#insert> values:'+JSON.stringify(values));\r\n\t\t\t\t\tif(true === me.editing){\r\n\t\t\t\t\t\tme.editBatch.push({\r\n\t\t\t\t\t\t\tinvoke : 'insert',\r\n\t\t\t\t\t\t\tparams : values\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tvar rs = doInsert.call(me, values);\r\n\t\t\t\t\t\tif(rs){\r\n\t\t\t\t\t\t\tme.fireEvent('insert',me, rs);\r\n\t\t\t\t\t\t\tme.fireEvent('changed', 'insert', me, rs);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn me;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 删除数据\r\n\t\t\t\t * <p>\r\n\t\t\t\t * 该方法会将指定的数据从结构中删除，如果被删除的数据在结果集中，则会触发'remove'和'changed'事件。\r\n\t\t\t\t * 如果当前处于事务状态，则不会立即生效。\r\n\t\t\t\t * \r\n\t\t\t\t * @param {Mixed} records 由Record实例或者是Record Id 组成的数组。\r\n\t\t\t\t * @return {TableModel} this\r\n\t\t\t\t */\r\n\t\t\t\tremove : function(records){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(true === me.editing){\r\n\t\t\t\t\t\tme.editBatch.push({\r\n\t\t\t\t\t\t\tremove : 'remove',\r\n\t\t\t\t\t\t\tvalues : records\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tvar rs = doRemove.call(me, records);\r\n\t\t\t\t\t\tif(rs){\r\n\t\t\t\t\t\t\tme.fireEvent('remove',me, rs);\r\n\t\t\t\t\t\t\tme.fireEvent('changed', 'remove', me, rs);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn me;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 通过次序值，删除数据\r\n\t\t\t\t * <p>\r\n\t\t\t\t * 这个次序值指的是返回结果中的次序，而不是结构中的数据。也就是说，该方法不能删除被过滤得数据 \r\n\t\t\t\t * 该方法不支持事务性操作，如果要用事务删除数据，则需要使用remove。也就是说如果成功删除数据，将会触发'remove'和'changed'事件。\r\n\t\t\t\t * \r\n\t\t\t\t * @param {Array/Number} index 由次序值或者是这些值组成的数组。\r\n\t\t\t\t * @return {TableModel} this\r\n\t\t\t\t */\r\n\t\t\t\tremoveByIndex : function(index){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(true !== me.editing){\r\n\t\t\t\t\t\tindex = isN(index) ? [index] : index;\r\n\t\t\t\t\t\tvar rs = [],\r\n\t\t\t\t\t\t\ti = 0,\r\n\t\t\t\t\t\t\tlen = isA(index) ? index.length : 0,\r\n\t\t\t\t\t\t\tcrs = me.resultValues,\r\n\t\t\t\t\t\t\tcount = crs.length,\r\n\t\t\t\t\t\t\tci;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor(;i<len;i++){\r\n\t\t\t\t\t\t\tci = index[i];\r\n\t\t\t\t\t\t\tif(ci > -1 && ci < count){\r\n\t\t\t\t\t\t\t\trs.push(crs[ci]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\trs = doRemove.call(me, rs);\r\n\t\t\t\t\t\tif(rs){\r\n\t\t\t\t\t\t\tme.fireEvent('remove',me, rs);\r\n\t\t\t\t\t\t\tme.fireEvent('changed', 'remove', me, rs);\r\n\t\t\t\t\t\t}\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn me;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 使用新的数据替换当前数据结构中的数据。\r\n\t\t\t\t * <p>\r\n\t\t\t\t * <p>\r\n\t\t\t\t * 调用该方法会触发'reload'事件和'changed'事件\r\n\t\t\t\t * <p>\r\n\t\t\t\t * 该方法被设定为一个强制性模式，也就是说即使当前在事务模式下，也会进行数据操作。不过它会取消掉在此之前所有的编辑操作\r\n\t\t\t\t * 之后再将这些数据读入结构中。最后还会保持在事务模式下。\r\n\t\t\t\t * \r\n\t\t\t\t * @param {Array} values 对象数组，每一个对象都可以被创建成一个Record，也就是这个数据对象要具有该结构所生命的键名。\r\n\t\t\t\t * @return {TableModel} this\r\n\t\t\t\t */\r\n\t\t\t\treload : function(values){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(true === me.editing){\r\n\t\t\t\t\t\t//清空之前的操作\r\n\t\t\t\t\t\tme.editBatch.splice(0,me.editBatch.length);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t//清空当前数据\r\n\t\t\t\t\tvar vs = me.values,\r\n\t\t\t\t\t\tlen = vs.length;\r\n\t\t\t\t\twhile(len--){\r\n\t\t\t\t\t\tvs[len].purgeListeners();\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\tif(me.idKey){\r\n\t\t\t\t\t\tme.idValues = {};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.values = [];\t\r\n\t\t\t\t\tme.resultValues = [];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(!Cmp.isArray(values) || values.length == 0){\r\n\t\t\t\t\t\tme.fireEvent('reload', me);\r\n\t\t\t\t\t\tme.fireEvent('changed', 'reload', me);\r\n\t\t\t\t\t\treturn me;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar rs = doInsert.call(me, values);\r\n\t\t\t\t\tif(rs){\r\n\t\t\t\t\t\tme.fireEvent('reload', me);\r\n\t\t\t\t\t\tme.fireEvent('changed', 'reload', me);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn me;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 获取指定位置的数据\r\n\t\t\t\t *\r\n\t\t\t\t * @param {Number} index 指定位置索引值，如果是第一个则等于0；默认为0；\r\n\t\t\t\t * @param {Number} limit 返回数据的最大长度。如果不设定，则等于当前具备数据的数量。\r\n\t\t\t\t * @return {Array} Record对象组成的数组。如果超出范围则返回长度为0的数组。\r\n\t\t\t\t */\r\n\t\t\t\tgetRecords : function(index, limit){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tcrs = me.resultValues,\r\n\t\t\t\t\t\tend;\r\n\t\t\t\t\t\r\n\t\t\t\t\tindex = isN(index) ? index : 0;\r\n\t\t\t\t\tif(index < 0 || index >= crs.length){\r\n\t\t\t\t\t\t//超出范围，返回长度为0的数组。\r\n\t\t\t\t\t\treturn [];\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tlimit = isN(limit) ? limit : crs.length;\r\n\t\t\t\t\tend = index+limit;\r\n\t\t\t\t\tif(end > crs.length){\r\n\t\t\t\t\t\tend = crs.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\treturn crs.slice(index, end);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 以指定键为比较基础，对当前数据进行排序。\r\n\t\t\t\t * @param {String} key (必须)键名称\r\n\t\t\t\t * @param {String} dir (可选)排序方向，可配置'asc'||'desc'; 默认为'asc'\r\n\t\t\t\t * @return {TableModel} this\r\n\t\t\t\t */\r\n\t\t\t\tsort : function(key, dir){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tinfo = me.sortInfo;\r\n\t\t\r\n\t\t//\t\t\tputLog('TableModel#sort>key:'+key+', dir:'+dir);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(info && info.key === key && info.dir === dir){\r\n\t\t\t\t\t\treturn me;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.sortInfo = {\r\n\t\t\t\t\t\tkey : key,\r\n\t\t\t\t\t\tdir : dir\r\n\t\t\t\t\t};\r\n\t\t\t\t\tsort.call(me, me.resultValues, me.sortInfo);\r\n\t\t\t\t\tme.fireEvent('sort', me);\r\n\t\t\t\t\tme.fireEvent('changed', 'sort', me);\r\n\t\t\t\t\treturn me;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 遍历当前数据，返回符合条件的数据项。\r\n\t\t\t\t * <p>\r\n\t\t\t\t * 注意：该方法只在当前设定的过滤条件下，在此进行寻找。而不是从数据结构中所有的数据条目中查找。\r\n\t\t\t\t *\r\n\t\t\t\t * @param {String/Object/Function} key (必须)\r\n\t\t\t\t *\t\t\t\t\t\t\t  当为一个字符串的时候，表示只对一个键进行比对，此时value参数为这个键的值。\r\n\t\t\t\t *\t\t\t\t\t\t\t  当为一个对象的时候，则表示对多个键进行比对，这个对象的属性对则是一个键和键值的匹配条件。\r\n\t\t\t\t *\t\t\t\t\t\t\t  当为一个方法的时候，则在遍历过程中，调用该方法，并将一个Record传入，如果符合条件就返回true。\r\n\t\t\t\t * @param {Object} value 比对值\r\n\t\t\t\t * @return {Array} 符合条件的由Record对象组成的数组。\r\n\t\t\t\t */\r\n\t\t\t\tfind : function(key, value){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tcrs = me.resultValues,\r\n\t\t\t\t\t\tcallFn,\r\n\t\t\t\t\t\trel = [];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(isS(key)){\r\n\t\t\t\t\t\tcallFn = function(r){\r\n\t\t\t\t\t\t\treturn value === r.get(key);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(isO(key)){\r\n\t\t\t\t\t\tcallFn = function(r){\r\n\t\t\t\t\t\t\tvar rel = true;\r\n\t\t\t\t\t\t\tfor(var i in key){\r\n\t\t\t\t\t\t\t\tvalue = r.get(i);\r\n\t\t\t\t\t\t\t\tif(value !== key[i]){\r\n\t\t\t\t\t\t\t\t\trel = false;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn rel;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(isF(key)){\r\n\t\t\t\t\t\tcallFn = key;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(isF(callFn)){\r\n\t\t\t\t\t\tCmp.each(crs, function(r){\r\n\t\t\t\t\t\t\tif(true === callFn(r)){\r\n\t\t\t\t\t\t\t\trel.push(r);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn rel;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 设定过滤条件；设定过滤条件后，所有获取数据方法所返回数据都是基于这个过滤条件的。\r\n\t\t\t\t * 这些方法包括：getRecords(), find(), getCount(), getAt()。\r\n\t\t\t\t *\r\n\t\t\t\t *\r\n\t\t\t\t * @param {Object} filterInfo (可选)过滤要求，如果不去设定，就相当于取消之前的过滤设定。对象具有属性如下：\r\n\t\t\t\t * \t\t<li> {Function} compare (可选)对Record进行过滤得比较方法。调用该方法将会传入一个Record对象，如果符合要求，则返回true;\r\n\t\t\t\t *\t\t<li> {Object} scope (可选)调用compare方法时设定的this对象。只有设定compare时有效\r\n\t\t\t\t * \t\t<li> {String/Object} key (可选) 没设定compare时有效，当为一个对象的时候，则表示对多个键进行比对，这个对象的属性对则是一个键和键值的匹配条件。当是一个字符串时为需要比对的键名称，\r\n\t\t\t\t *\t\t<li> {Object} value (可选) 需要比对键的值，没设定compare且设定了key为一个字符串时有效\r\n\t\t\t\t * @return {TableModel} this\r\n\t\t\t\t */\r\n\t\t\t\tfilter : function(filterInfo){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\t\r\n\t\t//\t\t\tputLog('TableModel#filter>filterInfo:'+JSON.stringify(filterInfo));\r\n\t\t\t\t\tif(compareFilter(me.filterInfo, filterInfo)){\r\n\t\t\t\t\t\treturn me;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.filterInfo = filterInfo;\r\n\t\t\t\t\t//过滤\r\n\t\t\t\t\tme.resultValues = filter(me.values, me.filterInfo);\r\n\t\t\t\t\t//重新排序\r\n\t\t\t\t\tme.resultValues = sort(me.resultValues, me.sortInfo);\r\n\t\t\t\t\t\r\n\t\t\t\t\t//分发：filter 事件\r\n\t\t\t\t\tme.fireEvent('filter', me);\r\n\t\t\t\t\tme.fireEvent('changed', 'filter', me);\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn me;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 获取指定位置的一条数据，相当于调用getRecords(index, 1)这样的方法。\r\n\t\t\t\t * \r\n\t\t\t\t * @param {Number} index 指定位置的次序值，默认为0；\r\n\t\t\t\t * @return {Record} Record对象实例，如果超出范围则返回unfined\r\n\t\t\t\t */\r\n\t\t\t\tgetAt : function(index){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tcrs = me.resultValues;\r\n\t\t\t\t\tindex = isN(index) ? index : 0;\r\n\t\t\t\t\tif(index < 0){\r\n\t\t\t\t\t\t//超出范围，返回长度为0的数组。\r\n\t\t\t\t\t\treturn undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn crs[index];\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 根据Record的ID获取一条数据。使用该方法，必须设定可以作为ID的键名。\r\n\t\t\t\t * <p>\r\n\t\t\t\t * 该方法是忽略当前设定的过滤条件的。\r\n\t\t\t\t *\r\n\t\t\t\t * @return {Record} Record对象实例，如果没有则返回unfined\r\n\t\t\t\t */\r\n\t\t\t\tgetById : function(recordId){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\treturn me.idValues ? me.idValues[recordId] : undefined;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 获得当前返回结果集的长度。\r\n\t\t\t\t */\r\n\t\t\t\tcount : function(){\r\n\t\t\t\t\treturn this.resultValues.length;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 开启事务模式。当开启事务后对于当前数据结构中的数据进行添加、修改、删除等操作，都不会立即生效。\r\n\t\t\t\t * 只会当调用commit或者是endEdit的时候；所作的修改才会生效。\r\n\t\t\t\t * 另外事务性的操作只会触发'changed'事件。\r\n\t\t\t\t * @return {TableModel} this\r\n\t\t\t\t */\r\n\t\t\t\tbeginEdit : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(!me.editing){\r\n\t\t\t\t\t\tme.editBatch = [];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar len = me.values.length;\r\n\t\t\t\t\t\twhile(len--){\r\n\t\t\t\t\t\t\tme.values[len].beginEdit();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.editing = true;\r\n\t\t\t\t\treturn me;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 停止事务模式，并取消之前的编辑操作\r\n\t\t\t\t * @return {TableModel} this\r\n\t\t\t\t */\r\n\t\t\t\tcancelEdit : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tdelete me.editBatch;\r\n\t\t\t\t\tvar len = me.values.length;\r\n\t\t\t\t\twhile(len--){\r\n\t\t\t\t\t\tme.values[len].cancelEdit();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.editing = false;\r\n\t\t\t\t\treturn me;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 提交之前做的编辑操作，并继续保持在事务模式下。\r\n\t\t\t\t * <p>\r\n\t\t\t\t * 如果之前有编辑操作，则会触发'changed'事件。\r\n\t\t\t\t * @return {Boolean} 返回true表示之前做过修改。\r\n\t\t\t\t */\r\n\t\t\t\tcommitEdit : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(true === me.editing){\r\n\t\t\t\t\t\tvar bs = me.editBatch.splice(0,me.editBatch.length),\r\n\t\t\t\t\t\t\ti = 0,\r\n\t\t\t\t\t\t\tlen = bs.length,\r\n\t\t\t\t\t\t\tb,call,c = false;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//细粒度数据级别。\r\n\t\t\t\t\t\tvar len = me.values.length;\r\n\t\t\t\t\t\twhile(len--){\r\n\t\t\t\t\t\t\tif(true == me.values[len].commit()){\r\n\t\t\t\t\t\t\t\tc = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\tif(c){\r\n\t\t\t\t\t\t\t//过滤\r\n\t\t\t\t\t\t\tme.resultValues = filter(me.values, me.filterInfo);\r\n\t\t\t\t\t\t\t//重新排序\r\n\t\t\t\t\t\t\tme.resultValues = sort(me.resultValues, me.sortInfo);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor(;i<len;i++){\r\n\t\t\t\t\t\t\tb = bs[i];\r\n\t\t\t\t\t\t\tcall = EDIT_HANDLER[b.invoke];\r\n\t\t\t\t\t\t\tif(isF(call) && false !== call.apply(me, b.params)){\r\n\t\t\t\t\t\t\t\tc = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(true === c){\r\n\t\t\t\t\t\t\tme.fireEvent('changed', 'commit', me);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn c;\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 停止事务模式，并提交之前做的编辑操作。\r\n\t\t\t\t * <p>\r\n\t\t\t\t * 如果之前有编辑操作，则会触发'changed'事件。\r\n\t\t\t\t * @return {TableModel} this\r\n\t\t\t\t */\r\n\t\t\t\tendEdit : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tme.commitEdit();\r\n\t\t\t\t\tme.cancelEdit();\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 返回true表示当前为编辑模式下\r\n\t\t\t\t */\r\n\t\t\t\tisEditing : function(){\r\n\t\t\t\t\treturn true === this.editing;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 由子类负责实现的根据传入参数，创建Record实例的功能方法。\r\n\t\t\t\t * @param {Object} value 数据队列中的一项；而数据队列是由insert方法的参数或者是创建数据结构时配置参数的values属性中获得的。\r\n\t\t\t\t * @return {Record} Record实例，如果不能创建，则返回undefined或null或false。\r\n\t\t\t\t */\r\n\t\t\t\tcreateRecord : Cmp.emptyFn\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n}());","/**\r\n * 使用二维数组形式读取传入数据的TableModel实现。\r\n * <p>\r\n *\r\n * @class Cmp.util.ArrayTableModel\r\n * @extend Cmp.util.TableModel\r\n *\r\n * @version 1.0.0\r\n * @since 2015-10-31\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\r\n\tCmp.define('Cmp.util.ArrayTableModel',{\r\n\t\textend : 'Cmp.util.TableModel',\r\n\t\trequires : [\r\n\t\t\t'Cmp.util.Record'\r\n\t\t],\r\n\t\tfactory : function(ext, reqs){\r\n\t\t\tvar superClass = ext.prototype,\r\n\t\t\t\tRecordClass = reqs[0];\r\n\t\t\treturn Cmp.extend(ext, {\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t * 创建一条数据的工厂方法，此处传入是一个数组。\r\n\t\t\t\t *\r\n\t\t\t\t * @param {Array} value\r\n\t\t\t\t * @return {Record} record对象实例。\r\n\t\t\t\t */\r\n\t\t\t\tcreateRecord : function(value){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(isA(value)){\r\n\t\t\t\t\t\tvar ks = me.keies,\r\n\t\t\t\t\t\t\ti = value.length,\r\n\t\t\t\t\t\t\tlen = ks.length,\r\n\t\t\t\t\t\t\to = {};\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t len = i < len ? i : len;\r\n\t\t\t\t\t\t for(i=0;i<len;i++){\r\n\t\t\t\t\t\t \to[ks[i]] = value[i];\r\n\t\t\t\t\t\t }\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t return new RecordClass({\r\n\t\t\t\t\t\t\tallowKeies : ks,\r\n\t\t\t\t\t\t\tvalue : o\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n}());","/**\r\n * @class Cmp.flow.FlowItem\r\n * @extend Cmp.Widget\r\n * 步骤类进度导航条中的一个步骤的显示部件；\r\n * \r\n * <p>\r\n * 构建部件时可以的属性配置说明如下：\r\n * @cfg {String} label (可选)下方文字内容\r\n * @cfg {String} anchor (可选)在步骤条上的文字；此文字不宜超过1个字符；但是可以设定一个类似<i class=\"fa fa-checked\"></i> 这样的一个HTML片段；\r\n * @cfg {Boolean} allowedClick (可选)等于true时表示该步骤为激活状态时是可以被点击的；\r\n * @cfg {Function} handler (可选)当点击该步骤时的回调方法；注意，只有allowedClick配置等于true且处于'enabled'状态时点击才会调用该方法； \r\n * @cfg {Object} scope (可选)调用handler方法时的this设定对象\r\n * @cfg {String} state (可选)初始时状态值；可以设定的有：'active'|'disabled'|'enabled'; 分别表示：当前激活且处于焦点；失效的；激活的；默认为:'enabled'\r\n * </p>\r\n * \r\n * @version 2.3.0\r\n * @since 2016-06-10\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\r\n\tvar HTML = [];\r\n\tHTML.push('<div class=\"c-flowitem-bar\">');\r\n\tHTML.push('<div class=\"c-flowitem-bk\"></div>');\r\n\tHTML.push('<div class=\"c-flowitem-anchor\"><div class=\"c-flowitem-anchor-inner\"></div></div>');\r\n\tHTML.push('</div>');\r\n\tHTML.push('<div class=\"c-flowitem-label\"></div>');\r\n\tHTML = HTML.join('');\r\n\r\n\tCmp.define('Cmp.flow.FlowItem',{\r\n\t\textend : 'Cmp.Widget',\r\n\t\tcls : true,\r\n\t\tfactory : function(ext, reqs){\r\n\t\t\tvar superclass = ext.prototype;\r\n\t\t\treturn Cmp.extend(ext, {\r\n\t\t\t\r\n\t\t\t\t/**\r\n\t\t\t\t * @public\r\n\t\t\t\t * 设定标签文字\r\n\t\t\t\t * @param {String} label 标签文字\r\n\t\t\t\t */\r\n\t\t\t\tsetLabel : function(label){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.labelBox){\r\n\t\t\t\t\t\tme.labelBox.update(label);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tme.label = label;\r\n\t\t\t\t\t}\r\n\t\t\t\t}, \r\n\t\t\t\t/**\r\n\t\t\t\t * @public\r\n\t\t\t\t * 在步骤条上的文字\r\n\t\t\t\t * @param {String} text 步骤条上的文字；此文字不宜超过1个字符；但是可以设定一个类似<i class=\"fa fa-checked\"></i> 这样的一个HTML片段；\r\n\t\t\t\t */\r\n\t\t\t\tsetAnchorText : function(text){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.anchorBox){\r\n\t\t\t\t\t\tme.anchorBox.update(text);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tme.anchor = text;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @public\r\n\t\t\t\t * 置为激活且处于焦点的状态\r\n\t\t\t\t */\r\n\t\t\t\tactive : function(){\r\n\t\t\t\t\tthis.setState('active');\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @public\r\n\t\t\t\t * 置为失效状态\r\n\t\t\t\t */\r\n\t\t\t\tdisable : function(){\r\n\t\t\t\t\tthis.setState('disabled');\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @public\r\n\t\t\t\t * 置为失效状态\r\n\t\t\t\t */\r\n\t\t\t\tenable : function(){\r\n\t\t\t\t\tthis.setState('enabled');\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @public\r\n\t\t\t\t * 设定步骤状态；\r\n\t\t\t\t *\r\n\t\t\t\t * @param {String} state (可选)初始时状态值；可以设定的有：'active'|'disabled'|'enabled'; 分别表示：当前激活且处于焦点；失效的；激活的；默认为:'enabled'\r\n\t\t\t\t */\r\n\t\t\t\tsetState : function(state){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif('active' !== state && 'disabled' !== state){\r\n\t\t\t\t\t\tstate = 'enabled';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(me.state === state){\r\n\t\t\t\t\t\treturn ;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif('enabled' !== me.state){\r\n\t\t\t\t\t\tme.el.removeClass('c-flowitem-'+me.state);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif('enabled' !== state){\r\n\t\t\t\t\t\tme.el.addClass('c-flowitem-'+state);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.state = state;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tinitComponent : function(){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tcls = me.cls;\r\n\t\t\t\t\tif(isA(cls)){\r\n\t\t\t\t\t\tcls.unshift('c-flowitem');\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(isS(cls)){\r\n\t\t\t\t\t\tcls = ['c-flowitem', cls];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tcls = 'c-flowitem';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.cls = cls;\r\n\t\t\t\t\tsuperclass.initComponent.call(me);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tdoRender : function(){\r\n\t\t\t\t\tvar me = this,dom,v;\r\n\t\t\t\t\tsuperclass.doRender.call(me);\r\n\t\t\t\t\tme.el.update(HTML);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(true === me.allowedClick){\r\n\t\t\t\t\t\tme.el.setAttribute('clickable','clickable');\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif('disabled' === me.state){\r\n\t\t\t\t\t\tme.el.addClass('c-flowitem-disabled');\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if('active' === me.state){\r\n\t\t\t\t\t\tme.el.addClass('c-flowitem-active');\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tme.state = 'enabled';\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tdom = me.el.dom.firstChild.childNodes[1].firstChild;\r\n\t\t\t\t\tme.anchorBox = Cmp.get(dom);\r\n\r\n\t\t\t\t\tdom = me.el.dom.childNodes[1];\r\n\t\t\t\t\tme.labelBox = Cmp.get(dom);\r\n\t\t\t\t\t\r\n\t\t\t\t\t//\r\n\t\t\t\t\tv = me.anchor;\r\n\t\t\t\t\tdelete me.anchor;\r\n\t\t\t\t\tif(isS(v)){\r\n\t\t\t\t\t\tme.setAnchorText(v);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tv = me.label;\r\n\t\t\t\t\tdelete me.label;\r\n\t\t\t\t\tif(isS(v)){\r\n\t\t\t\t\t\tme.setLabel(v);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.el.on('click', me.onClick, me);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t */\r\n\t\t\t\tonClick : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(true === me.allowedClick && 'enabled' === me.state && isF(me.handler)){\r\n\t\t\t\t\t\tme.handler.call(me.scope||me, me);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\t\r\n}());","/**\r\n * @class Cmp.flow.Flow\r\n * @extend Cmp.Widget\r\n *\r\n * 步骤类进度导航条部件；\r\n * <p>\r\n * 构建部件时可以的属性配置说明如下：\r\n * @cfg {Array} stepItems 按照流程步骤列举的步骤项配置；具有以下属性：\r\n *\t\t\t{String} key 步骤项标识；当变化步骤时会使用该值；\r\n *\t\t\t{String} label 该步骤项的步骤文字；\r\n *\t\t\t{String} anchorText 该步骤项在流程中的文字设定；默认使用次序数值+1；\r\n *\t\t\t{Boolean} allowedClick 等于true时，表示该项为激活状态时是可以被点击的;\r\n * @cfg {Number} activeIndex 初始时处于焦点的步骤次序；如果为第一个，则设定为0；默认值：0；早于该步骤的状态为激活状态；晚于该步骤的为失效状态；\r\n * @cfg {Numbe/Width} itemWidth 每一个步骤项占用的宽度；默认为:'6rem'\r\n * </p>\r\n * \r\n * @version 2.3.0\r\n * @since 2016-06-10\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\tCmp.define('Cmp.flow.Flow',{\r\n\t\textend : 'Cmp.Widget',\r\n\t\tcls : true,\r\n\t\trequires : [\r\n\t\t\t'Cmp.flow.FlowItem'\r\n\t\t],\r\n\t\tfactory : function(ext, reqs){\r\n\t\t\tvar superclass = ext.prototype,\r\n\t\t\t\tFlowItem = reqs[0];\r\n\t\t\treturn Cmp.extend(ext, {\r\n\t\t\t\t/**\r\n\t\t\t\t * 设定当前处于焦点状态的步骤次序；如果小于0；则全部步骤项为禁用状态；如果大于等于步骤项数量，则全部为激活状态\r\n\t\t\t\t * @parma {Number} ix 当前处于激活状态的步骤次序值;当不是一个数字时，不予处理；\r\n\t\t\t\t */\r\n\t\t\t\tsetActiveIndex : function(ix){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(!isN(ix) || me.activeIndex === ix){\r\n\t\t\t\t\t\treturn ;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar i=0,len = isA(me.flowItems) ? me.flowItems.length : 0,it;\r\n\t\t\t\t\tfor(;i<len;i++){\r\n\t\t\t\t\t\tit = me.flowItems[i];\r\n\t\t\t\t\t\tif(i < ix){\r\n\t\t\t\t\t\t\t//小于指定值，为激活状态\r\n\t\t\t\t\t\t\tit.enable();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if(i === ix){\r\n\t\t\t\t\t\t\t//等于设定值，为焦点状态\r\n\t\t\t\t\t\t\tit.active();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t//剩下的就是大于设定值为禁用状态\r\n\t\t\t\t\t\t\tit.disable();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.activeIndex = ix;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tinitComponent : function(){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tcls = me.cls;\r\n\t\t\t\t\tif(isA(cls)){\r\n\t\t\t\t\t\tcls.unshift('c-flow');\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(isS(cls)){\r\n\t\t\t\t\t\tcls = ['c-flow', cls];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tcls = 'c-flow';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.cls = cls;\r\n\t\t\t\t\tsuperclass.initComponent.call(me);\r\n\t\t\t\t\tme.addEvents(\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * @event \r\n\t\t\t\t\t\t * 点击一个有效状态的步骤项时分发此事件；\r\n\t\t\t\t\t\t * @param {String} itemKey 步骤项标识\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t'clickitem'\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tdoRender : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tsuperclass.doRender.call(me);\r\n\t\t\t\t\tvar its = me.stepItems,\r\n\t\t\t\t\t\ti = 0,\r\n\t\t\t\t\t\tlen = isA(its) ? its.length : 0,\r\n\t\t\t\t\t\tit,\r\n\t\t\t\t\t\tiits = [];\r\n\t\t\t\t\tfor(;i<len;i++){\r\n\t\t\t\t\t\tit = Cmp.apply({}, its[i]); \r\n\t\t\t\t\t\tif(me.itemWidth){\r\n\t\t\t\t\t\t\tit.width = me.itemWidth; \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!isS(it.anchorText)){\r\n\t\t\t\t\t\t\tit.anchor = (i+1)+'';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tit.anchor = it.anchorText;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdelete it.anchorText;\r\n\t\t\t\t\t\tit = new FlowItem(it);\r\n\t\t\t\t\t\tit.render(me.el);\r\n\t\t\t\t\t\tiits.push(it);\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\tdelete me.stepItems;\r\n\t\t\t\t\tme.flowItems = iits;\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar ix = isN(me.activeIndex) ? me.activeIndex : 0;\r\n\t\t\t\t\tdelete me.activeIndex;\r\n\t\t\t\t\tme.setActiveIndex(ix);\r\n\t\t\t\t}\r\n\t\t\t});\t\r\n\t\t}\r\n\t\r\n\t});\r\n\t\r\n}());","/**\r\n * 表格选择功能控制器\r\n *\r\n * @abstract\r\n * @class Cmp.grid.SelectionModel\r\n * @extend Object\r\n * \r\n * @version 2.0.0\r\n * @since 2016-03-31\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\r\n\tvar SelectionModel = function(cfg){\r\n\t\tvar me = this;\r\n\t\tif(cfg){\r\n\t\t\tCmp.apply(me, cfg);\r\n\t\t}\r\n\t\tme.inited = false;\r\n\t}\r\n\tSelectionModel.prototype = {\r\n\t\t/**\r\n\t\t * 初始化表格样式；\r\n\t\t * @param {GridPanel} grid 表格实例\r\n\t\t */\r\n\t\tinitStyle : function(grid){\r\n\t\t\tvar me = this;\r\n\t\t\tme.grid = grid;\r\n\t\t\tgrid.addEvents(\r\n\t\t\t\t/**\r\n\t\t\t\t * @event\r\n\t\t\t\t * 选择发生变化后，分发此事件\r\n\t\t\t\t * @param {SelectionModel} this\r\n\t\t\t\t */\r\n\t\t\t\t'selchanged'\r\n\t\t\t);\r\n\t\t},\r\n\t\t/**\r\n\t\t * 返回true表示允许进行选中操作\r\n\t\t * \r\n\t\t */\r\n\t\tisAllowedSelect : function(){\r\n\t\t\treturn !this.noselect;\r\n\t\t},\r\n\t\t/**\r\n\t\t * 获得当前选中的数量\r\n\t\t */\r\n\t\tgetCount : function(){\r\n\t\t\tvar me = this;\r\n\t\t\tif(me.noselect){\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\treturn isA(me.selections) ? me.selections.length : 0;\r\n\t\t},\r\n\t\t/**\r\n\t\t * 清空所有选择的数据，并分发选择变化事件。\r\n\t\t *　该方法相当于无参数调用了setSelections\r\n\t\t */\r\n\t\tclearSelection : function(){\r\n\t\t\tthis.setSelections();\r\n\t\t},\r\n\t\t/**\r\n\t\t * 设定选中的内容。并分发选择变化事件。\r\n\t\t * @param {Array} sels 已选中的数据,具体格式根据不同的选择模型控制器有所不同。\r\n\t\t */\r\n\t\tsetSelections : function(sels){\r\n\t\t\tvar me = this;\r\n\t\t\tif(me.noselect){\r\n\t\t\t\treturn ;\t\r\n\t\t\t}\r\n\t\t\tme.selections = sels;\r\n\t\t\tme.fireEvent('selchanged', me, me.grid);\r\n\t\t},\r\n\t\t/**\r\n\t\t * 获得当前选择的内容\r\n\t\t * @return {Array} 已选中的数据,具体格式根据不同的选择模型控制器有所不同。\r\n\t\t */\r\n\t\tgetSelections : function(){\r\n\t\t\tvar me = this;\r\n\t\t\tif(me.noselect){\r\n\t\t\t\treturn [];\t\r\n\t\t\t}\r\n\t\t\treturn me.selections;\r\n\t\t},\r\n\t\t/**\r\n\t\t * 获得最后选中的内容。\r\n\t\t * @return {Object} 最后选中的数据,具体格式根据不同的选择模型控制器有所不同。\r\n\t\t */\r\n\t\tgetSelected : function(){\r\n\t\t\tvar me = this;\r\n\t\t\tif(me.noselect){\r\n\t\t\t\treturn undefined;\t\r\n\t\t\t}\r\n\t\t\treturn isA(me.selections) && me.selections.length > 0 ?\r\n\t\t\t\tme.selections[me.selections.length-1] : undefined;\r\n\t\t},\r\n\t\t/**\r\n\t\t * 绑定行事件\r\n\t\t * @param {Row} row 表格中每一行的数据信息\r\n\t\t */\r\n\t\tbindRowEvent : Cmp.emptyFn, \r\n\t\t/**\r\n\t\t * 释放行事件\r\n\t\t * @param {Row} row 表格中每一行的数据信息\r\n\t\t */\r\n\t\treleaseRowEvent : Cmp.emptyFn,\r\n\t\t/**\r\n\t\t * 绑定单元格事件\r\n\t\t *\r\n\t\t * @param {Element} cell 单元格的承载容器\r\n\t\t * @param {Object} value 单元格上显示的值\r\n\t\t * @param {Record} record 绘制该行的数据\r\n\t\t * @param {Number} rowIndex 该单元格在当前表格上的行次序\r\n\t\t * @param {Number} colIndex 该单元格在当前表格上的列次序\r\n\t\t */ \r\n\t\tbindCellEvent : Cmp.emptyFn, \r\n\t\t/**\r\n\t\t * 释放单元格事件\r\n\t\t * @param {Element} cell 单元格的承载容器\r\n\t\t * @param {Number} rowIndex 该单元格在当前表格上的行次序\r\n\t\t * @param {Number} colIndex 该单元格在当前表格上的列次序\r\n\t\t */ \r\n\t\treleaseCellEvent : Cmp.emptyFn,\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tfireEvent : function(){\r\n\t\t\tvar grid = this.grid;\r\n\t\t\tif(grid){\r\n\t\t\t\tgrid.fireEvent.apply(grid, arguments);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tCmp.define('Cmp.grid.SelectionModel',{\r\n\t\tfactory : function(){\r\n\t\t\treturn SelectionModel;\r\n\t\t}\r\n\t});\r\n}());","/**\r\n * 表格组件中的行选择功能控制器\r\n *\r\n * @class Cmp.grid.RowSelectionModel\r\n * @extend Cmp.grid.SelectionModel\r\n * \r\n * @version 2.0.0\r\n * @since 2016-03-31\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\r\n\tCmp.define('Cmp.grid.RowSelectionModel',{\r\n\t\textend : 'Cmp.grid.SelectionModel',\r\n\t\tfactory : function(ext){\r\n\t\t\tvar superClass = ext.prototype;\r\n\t\t\t\r\n\t\t\t\r\n\t\t\treturn Cmp.extend(ext, {\r\n\t\t\t\t/**\r\n\t\t\t\t * @cfg {Boolean} single 等于true时表示为单行选中模式，否则为多行选中。默认为false.\r\n\t\t\t\t */\r\n\t\t\t\t/**\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tinitStyle : function(grid){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tsuperClass.initStyle.call(me, grid);\r\n\t\t\t\t\tif(me.isAllowedSelect() && grid && grid.el){\r\n\t\t\t\t\t\tgrid.el.addClass('c-grid-rowselect');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.rows = {};\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tbindRowEvent : function(row){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.isAllowedSelect()){\r\n\t\t\t\t\t\trow.on('click', me.onClickRow, me);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\treleaseRowEvent : function(row){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\trow.un('click', me.onClickRow, me);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t */\r\n\t\t\t\tonClickRow : function(event, row){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\trid = row.getId();\r\n\t\t\t\t\tif(row.selected){\r\n\t\t\t\t\t\tme._removeSelection(row);\r\n\t\t\t\t\t\tme.unSelected(row);\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tme._addSelection(row);\r\n\t\t\t\t\t\tme.toSelected(row);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t */\r\n\t\t\t\t_addSelection : function(row){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tr = row.record;\r\n\t\t\t\t\tif(!me.single){\r\n\t\t\t\t\t\tvar ss = me.getSelections();\r\n\t\t\t\t\t\tif(ss){\r\n\t\t\t\t\t\t\tss.push(r);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tss = [r]; \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tme.setSelections(ss);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tif(me.selectedRow){\r\n\t\t\t\t\t\t\tme.unSelected(me.selectedRow);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tme.setSelections([r]);\r\n\t\t\t\t\t\tme.selectedRow = row;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t */\r\n\t\t\t\t_removeSelection : function(row){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.single){\r\n\t\t\t\t\t\t//单选\r\n\t\t\t\t\t\tme.setSelections();\r\n\t\t\t\t\t\tme.selectedRow = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\t//多选\r\n\t\t\t\t\t\tvar ss = me.getSelections(),\r\n\t\t\t\t\t\t\tr = row.record;\r\n\t\t\t\t\t\tss = ss.slice(0);\r\n\t\t\t\t\t\tfor(var i=0,len = ss.length;i<len;i++){\r\n\t\t\t\t\t\t\tif(ss[i] === r){\r\n\t\t\t\t\t\t\t\tss.splice(i, 1);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tme.setSelections(ss);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t */\r\n\t\t\t\ttoSelected : function(row){\r\n\t\t\t\t\trow.el.addClass('c-grid-selected');\r\n\t\t\t\t\trow.selected = true;\t\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t */\r\n\t\t\t\tunSelected : function(row){\r\n\t\t\t\t\trow.el.removeClass('c-grid-selected');\r\n\t\t\t\t\trow.selected = false;\t\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n}());","/**\r\n * 表格组件中的带有CheckBox选择控件的行选择功能控制器\r\n *\r\n * @class Cmp.grid.CheckboxSelectionModel\r\n * @extend Cmp.grid.RowSelectionModel\r\n * @implement Cmp.grid.Column\r\n * \r\n * @version 2.0.0\r\n * @since 2016-03-31\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\tvar HTML = '<i class=\"fa\"></i>';\r\n\t\r\n\tCmp.define('Cmp.grid.CheckboxSelectionModel',{\r\n\t\textend : 'Cmp.grid.RowSelectionModel',\r\n\t\tfactory : function(ext){\r\n\t\t\tvar superClass = ext.prototype;\r\n\t\t\treturn Cmp.extend(ext, {\r\n\t\t\t\t/**\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tsetSelections : function(ss){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tvar count = isA(ss) ? ss.length : 0,\r\n\t\t\t\t\t\trowCount = me.grid.getRowModel().getCount();\r\n\t\t\t\t\tsuperClass.setSelections.call(me, ss);\r\n\t\t\t\t\tif(0 === count){\r\n\t\t\t\t\t\tif(me.headCls){\r\n\t\t\t\t\t\t\tme.headBox.removeClass(me.headCls);\r\n\t\t\t\t\t\t\tme.headCls = undefined;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(rowCount === count){\r\n\t\t\t\t\t\tvar cls = 'c-grid-checkboxsel-full';\r\n\t\t\t\t\t\tif(me.headCls !== cls){\r\n\t\t\t\t\t\t\tif(me.headCls){\r\n\t\t\t\t\t\t\t\tme.headBox.removeClass(me.headCls);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tme.headBox.addClass(cls);\r\n\t\t\t\t\t\t\tme.headCls = cls;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tvar cls = 'c-grid-checkboxsel-part';\r\n\t\t\t\t\t\tif(me.headCls !== cls){\r\n\t\t\t\t\t\t\tif(me.headCls){\r\n\t\t\t\t\t\t\t\tme.headBox.removeClass(me.headCls);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tme.headBox.addClass(cls);\r\n\t\t\t\t\t\t\tme.headCls = cls;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @impl Cmp.grid.Column#getColumnWidth()\r\n\t\t\t\t */\r\n\t\t\t\tgetColumnWidth : function(){\r\n\t\t\t\t\treturn this.columnWidth || 0;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 绘制头部\r\n\t\t\t\t * @impl Cmp.grid.Column#renderHead()\r\n\t\t\t\t * @param {Element} box 承载头部内容的Element\r\n\t\t\t\t * @param {Number} colIndex 该列次序值\r\n\t\t\t\t * @param {TableModel} data 所在表格绑定的数据源\r\n\t\t\t\t */\r\n\t\t\t\trenderHead : function(box, colIndex, data){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tbox.addClass('c-grid-checkboxsel');\r\n\t\t\t\t\tif(true !== me.single){\r\n\t\t\t\t\t\tbox.update(HTML);\r\n\t\t\t\t\t\tbox.on('click', me.onClickHeadBox, me);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(isN(me.width)){\r\n\t\t\t\t\t\tme.width = me.width+'px';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(isS(me.width)){\r\n\t\t\t\t\t\tbox.setWidth(me.width);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.columnWidth = box.getWidth();\r\n\t\t\t\t\tme.headBox = box;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t */\r\n\t\t\t\tonClickHeadBox : function(ev){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\trows = me.grid.getRowModel().getRows(),\r\n\t\t\t\t\t\ti=0,len = rows.length,r;\r\n\t\t\t\t\tif('c-grid-checkboxsel-full' === me.headCls){\r\n\t\t\t\t\t\t//当前为全部选中状态；\r\n\t\t\t\t\t\tfor(;i<len;i++){\r\n\t\t\t\t\t\t\tme.unSelected(rows[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tme.clearSelection();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\t//部分选中或一个都没选中；\r\n\t\t\t\t\t\tvar ss = [];\r\n\t\t\t\t\t\tfor(;i<len;i++){\r\n\t\t\t\t\t\t\tr = rows[i];\r\n\t\t\t\t\t\t\tme.toSelected(r);\r\n\t\t\t\t\t\t\tss.push(r.record);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tme.setSelections(ss);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 获知表体中该列的一个单元格。\r\n\t\t\t\t * @impl Cmp.grid.Column#renderCell()\r\n\t\t\t\t *\r\n\t\t\t\t * @param {Element} box 承载头部内容的Element\r\n\t\t\t\t * @param {Record} record 该行数据\r\n\t\t\t\t * @param {Element} row 显示该行数据的Element\r\n\t\t\t\t * @param {Number} rowIndex 该行数据所在的次序值\r\n\t\t\t\t * @param {Number} colIndex 该列次序值\r\n\t\t\t\t * @param {TableModel} data 所在表格绑定的数据源\r\n\t\t\t\t * @return {Object} 绘制该单元格时用的从record获取的原始值\r\n\t\t\t\t */\r\n\t\t\t\trenderCell : function(box, record, row, rowIndex, colIndex, data){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tbox.addClass('c-grid-checkboxsel');\r\n\t\t\t\t\tbox.update(HTML);\r\n\t\t\t\t\tif(isS(me.width)){\r\n\t\t\t\t\t\tbox.setWidth(me.width);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n}());","/**\r\n * 表格中每一列的绘制工具类\r\n * @class Cmp.grid.Column\r\n * @extend Object\r\n * \r\n * @version 2.0.0\r\n * @since 2016-03-31\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\tvar SORT_BOX_HTML = [],\r\n\t\ttoString = Object.prototype.toString;\r\n\t\t\r\n\tSORT_BOX_HTML.push('<div class=\"c-grid-sort-uparrow fa fa-caret-up\"></div>');\t\r\n\tSORT_BOX_HTML.push('<div class=\"c-grid-sort-downarrow fa fa-caret-down\"></div>');\r\n\tSORT_BOX_HTML = SORT_BOX_HTML.join('');\r\n\t\r\n\tvar Column = function(config){\r\n\t\tvar me = this;\r\n\t\tif(config){\r\n\t\t\tCmp.apply(me, config);\r\n\t\t}\r\n\t\t\r\n\t\tme.width = isN(me.width) ? me.width+'px' : me.width;\r\n\t}\r\n\tColumn.prototype = {\r\n\t\t\r\n\t\t/**\r\n\t\t * @cfg {String} dataIndex 绘制该列单元格时从数据中取值上使用字段索引；如果不设定，则默认取到的值为'';\r\n\t\t */\r\n\t\t\r\n\t\t/**\r\n\t\t * @cfg {String} text 该列在表头上的显示文字。\r\n\t\t */\r\n\t\t\r\n\t\t/**\r\n\t\t * @cfg {Function} render 绘制单元格的自定义绘制方法。通过该方法获取单元格内的innerHTML字串值。\r\n\t\t *\t\t如果不设定，则使用取到值的字符串；调用方法时，传入的参数如下：\r\n\t\t * \t\t\t@param {Object} value 取到的原生数据\r\n\t\t * \t\t\t@param {Record} record 该行数据\r\n\t\t * \t\t\t@param {Number} rowIndex 该行数据所在的次序值\r\n\t\t * \t\t\t@param {Number} colIndex 该列次序值\r\n\t\t * \t\t\t@param {TableModel} data 所在表格绑定的数据源\r\n\t\t */\r\n\t\t\r\n\t\t/**\r\n\t\t * @cfg {Object} scope 调用render方法时的this对象设定。\r\n\t\t */\r\n\t\t\r\n\t\t/**\r\n\t\t * @cfg {String/Number} width 该列宽度设定。如果为一个数值则认为设定的像素值，否则是具体设定值。默认为：'4rem'\r\n\t\t */\r\n\t\t\r\n\t\t/**\r\n\t\t * @cfg {Boolean} sortable 等于true时，认为该列可以排序。\r\n\t\t */\r\n\t\t\r\n\t\t/**\r\n\t\t * @cfg {Object} style 渲染值单元格时的样式设定；\r\n\t\t */\r\n\t\t \r\n\t\t/**\r\n\t\t * @cfg {Boolean} displayTooltip 等于true时，会将显示值设定到tooltip上，防止因为溢出无法显示；默认为false;\r\n\t\t */ \r\n\t\t \r\n\t\t/**\r\n\t\t * 获得当前列占用的宽度\r\n\t\t */ \r\n\t\tgetColumnWidth : function(){\r\n\t\t\treturn this.columnWidth || 0;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * 绘制头部\r\n\t\t * @param {Element} box 承载头部内容的Element\r\n\t\t * @param {Number} colIndex 该列次序值\r\n\t\t * @param {TableModel} data 所在表格绑定的数据源\r\n\t\t */\r\n\t\trenderHead : function(box, colIndex, data){\r\n\t\t\tvar me = this,el;\r\n\t\t\t//排序\r\n\t\t\tif(true === me.sortable){\r\n\t\t\t\tme.sortBox = box.createChild({\r\n\t\t\t\t\tcls : 'c-grid-sortbox',\r\n\t\t\t\t\thtml : SORT_BOX_HTML\r\n\t\t\t\t});\r\n\t\t\t\tbox.on('click', function(){\r\n\t\t\t\t\tme.onClickHead(data);\r\n\t\t\t\t});\r\n\t\t\t\tme.changeSotrStyle(data.sortInfo);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tbox.addClass('c-grid-nosort');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//文字 <strong>名称</strong>\r\n\t\t\tme.textBox = box.createChild({\r\n\t\t\t\ttag : 'strong',\r\n\t\t\t\thtml : me.text||''\r\n\t\t\t});\r\n\t\t\tif(isS(me.width)){\r\n\t\t\t\tbox.setStyle('width', me.width);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tme.columnWidth = box.getWidth();\r\n\t\t\t\r\n\t\t\tdata.on('changed', me.onDataChanged, me);\r\n\t\t},\r\n\t\t/**\r\n\t\t * 获知表体中该列的一个单元格。\r\n\t\t *\r\n\t\t * @param {Element} box 承载单元格内容的Element\r\n\t\t * @param {Record} record 该行数据\r\n\t\t * @param {Element} row 显示该行数据的Element\r\n\t\t * @param {Number} rowIndex 该行数据所在的次序值\r\n\t\t * @param {Number} colIndex 该列次序值\r\n\t\t * @param {TableModel} data 所在表格绑定的数据源\r\n\t\t * @return {Object} 绘制该单元格时用的从record获取的原始值\r\n\t\t */\r\n\t\trenderCell : function(box, record, row, rowIndex, colIndex, data){\r\n\t\t\tvar me = this,\r\n\t\t\t\tnm = me.dataIndex,\r\n\t\t\t\tv = nm ? record.get(nm) : undefined,\r\n\t\t\t\thtml;\r\n\t\t\t\r\n\t\t\tif(isF(me.render)){\r\n\t\t\t\thtml = me.render.call(me.scope || window, v, record, rowIndex, colIndex, data);\r\n\t\t\t\thtml = html || '';\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\thtml = v ? v+'' : '';\r\n\t\t\t}\t\r\n\t\t\tbox.update(html);\r\n\t\t\t\r\n\t\t\tif(true === me.displayTooltip){\r\n\t\t\t\tbox.setAttribute('title', html);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(isS(me.width)){\r\n\t\t\t\tbox.setStyle('width', me.width);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(me.style){\r\n\t\t\t\thtml = me.style;\r\n\t\t\t\t//不准设定宽度\r\n\t\t\t\tdelete html.width;\r\n\t\t\t\tbox.setStyle(html);\r\n\t\t\t}\r\n\t\t\tif(!me.columnWidth){\r\n\t\t\t\tme.columnWidth = box.getWidth();\r\n\t\t\t}\r\n\t\t\treturn v;\r\n\t\t},\r\n\t\tonDataChanged : function(type, data){\r\n\t\t\tthis.changeSotrStyle(data.sortInfo);\r\n\t\t},\r\n\t\t/**\r\n\t\t * \r\n\t\t */\r\n\t\tchangeSotrStyle : function(sort){\r\n\t\t\tvar me = this,\r\n\t\t\t\tnm = me.dataIndex,\r\n\t\t\t\tdir = me.sortDir,\r\n\t\t\t\tnnm = sort ? sort.key : false,\r\n\t\t\t\tndir = sort ? sort.dir : 'asc';\r\n\t\t\tif(!me.sortBox){\r\n\t\t\t\treturn ;\r\n\t\t\t}\r\n//\t\t\tputLog('changeSotrStyle> dataIndex:'+nm+', dir:'+dir+', datasort:'+nnm+', datadir:'+ndir);\r\n\t\t\tif(nm !== nnm){\r\n\t\t\t\t//不再是当前列\r\n\t\t\t\tif(dir){\r\n\t\t\t\t\tme.sortBox.removeClass(dir === 'desc' ? 'c-grid-sort-down' : 'c-grid-sort-up');\r\n\t\t\t\t}\r\n\t\t\t\tme.sortDir = false;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t//还是当前列\r\n\t\t\t\tif(ndir !== dir){\r\n\t\t\t\t\tme.sortBox.removeClass(dir === 'desc' ? 'c-grid-sort-down' : 'c-grid-sort-up');\r\n\t\t\t\t\tme.sortBox.addClass(ndir === 'desc' ? 'c-grid-sort-down' : 'c-grid-sort-up');\r\n\t\t\t\t}\r\n\t\t\t\tme.sortDir = ndir;\r\n\t\t\t}\t\r\n\t\t},\r\n\t\t/**\r\n\t\t * 点击一个可以排序表头时的响应方法\r\n\t\t */\r\n\t\tonClickHead : function(data){\r\n\t\t\tvar me = this,\r\n\t\t\t\tnm = me.dataIndex,\r\n\t\t\t\tdir = me.sortDir;\r\n\t\t\tif(nm){\r\n\t\t\t\tdata.sort(nm, 'asc' === dir ? 'desc':'asc');\t\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tCmp.define('Cmp.grid.Column',{\r\n\t\tfactory : function(){\r\n\t\t\treturn Column;\r\n\t\t}\r\n\t});\r\n}());","/**\r\n * 表格列控制器\r\n *\r\n * @class Cmp.grid.ColumnModel\r\n * @extend Object\r\n * \r\n * @version 2.0.0\r\n * @since 2016-03-31\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\t/**\r\n\t * @private {Cmp.grid.Column} Column模块的构造方法；初始化之后有值 \r\n\t */\r\n\tvar Column;\r\n\t\r\n\t/**\r\n\t * \r\n\t */\r\n\tvar ColumnModel = function(columns){\r\n\t\tvar me = this;\r\n\t\tif(isA(columns)){\r\n\t\t\tvar i=0,len = columns.length,c,cols = [];\r\n\t\t\tfor(;i<len;i++){\r\n\t\t\t\tc = columns[i];\r\n\t\t\t\tif(isO(c)){\r\n\t\t\t\t\tif(!isF(c.renderHead)){\r\n\t\t\t\t\t\tc = new Column(c);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcols.push(c);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tme.columns = cols;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tme.columns = [];\r\n\t\t}\r\n\t}\r\n\tColumnModel.prototype = {\r\n\t\t/**\r\n\t\t * 获得列数量 \r\n\t\t */\r\n\t\tgetCount : function(){\r\n\t\t\treturn this.columns.length;\r\n\t\t},\r\n\t\t/**\r\n\t\t * 获得指定的列\r\n\t\t * @param {Number} colIndex 列次序\r\n\t\t * @return {Column}\r\n\t\t */\r\n\t\tgetColumn : function(colIndex){\r\n\t\t\treturn this.columns[colIndex];\r\n\t\t}\r\n\t}\r\n\t\r\n\tCmp.define('Cmp.grid.ColumnModel',{\r\n\t\trequires : ['Cmp.grid.Column'],\r\n\t\tfactory : function(ext, reqs){\r\n\t\t\tColumn = reqs[0];\r\n\t\t\treturn ColumnModel;\r\n\t\t}\r\n\t});\r\n\t\r\n\t\r\n}());","/**\r\n * 表格部件的绘制控制器。负责具体的绘制工作。\r\n * \r\n * @class Cmp.grid.GridView\r\n * @extend Object\r\n * \r\n * @version 2.0.0\r\n * @since 2016-03-31\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\t/**\r\n\t * @private \r\n\t */\r\n\tvar DH = Cmp.util.DomHelper;\r\n\t\r\n\tvar EMPTY_TABEL_HTML = ['<table cellpadding=\"0\" cellspacing=\"0\">'];\r\n\tEMPTY_TABEL_HTML.push('<tbody></tbody></table>');\r\n\tEMPTY_TABEL_HTML = EMPTY_TABEL_HTML.join('');\r\n\t\r\n\t/**\r\n\t * @private\r\n\t * 数据模型发生变化时调用的方法\r\n\t */\r\n\tvar onDataChanged = function(){\r\n\t\tvar me = this,\r\n\t\t\tview = me.view,\r\n\t\t\tgrid = me.grid;\r\n\t\tgrid.getSelectionModel().clearSelection();\t\r\n\t\tview.renderBody(grid);\t\r\n\t\tview.layoutRows(grid);\r\n\t}\r\n\t/**\r\n\t * @constructor\r\n\t */\r\n\tvar GridView = function(cfg){\r\n\t\tvar me = this;\r\n\t\tif(isO(cfg)){\r\n\t\t\tCmp.apply(me, cfg);\r\n\t\t}\r\n\t}\r\n\tGridView.prototype = {\r\n\t\t/**\r\n\t\t * 渲染指定的表格组件\r\n\t\t * @param {GridPanel} grid 所渲染的表格\r\n\t\t */\r\n\t\trender : function(grid){\r\n\t\t\tvar me = this,\r\n\t\t\t\tbox = grid.body || grid.el,\r\n\t\t\t\tel,o;\r\n\t\t\t\r\n\t\t\t//\r\n\t\t\tif(true !== grid.hideHeader){\r\n\t\t\t\tel = box.createChild({\r\n\t\t\t\t\tcls : 'c-grid-head',\r\n\t\t\t\t\thtml : '<div class=\"c-grid-row\"></div>'\r\n\t\t\t\t});\r\n\t\t\t\tgrid.headBox = Cmp.get(el.dom.firstChild);\r\n\t\t\t\tme.renderHead(grid);\r\n\t\t\t\tgrid.headWarp = el;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tbox.addClass('c-grid-noheader');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tel = box.createChild({\r\n\t\t\t\tcls : 'c-grid-body',\r\n\t\t\t\thtml : '<div class=\"c-grid-bodybox\"></div>'\r\n\t\t\t});\r\n\t\t\tgrid.bodyBox = Cmp.get(el.dom.firstChild);\r\n\t\t\tme.renderBody(grid);\r\n\t\t\t\r\n\t\t\t//表底部\r\n\t\t\to = grid.footer;\r\n\t\t\tif(o){\r\n\t\t\t\tif(isO(o) \r\n\t\t\t\t\t&& !isF(o.render)){\r\n//\t\t\t\t\to = new PK.PagingBar(o);\r\n\t\t\t\t\to = false;\r\n\t\t\t\t}\r\n\t\t\t\tif(!o || !isF(o.render)){\r\n\t\t\t\t\to = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(o){\r\n\t\t\t\tel = box.createChild({\r\n\t\t\t\t\tcls : 'c-grid-foot',\r\n\t\t\t\t\thtml : '<div class=\"c-grid-footbox\"></div>'\r\n\t\t\t\t});\r\n\t\t\t\tgrid.footBox = Cmp.get(el.dom.firstChild);\r\n\t\t\t\to.render(grid.footBox);\r\n\t\t\t\tgrid.footer = o;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tbox.addClass('c-grid-nofoot');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar sm = grid.getSelectionModel();\r\n\t\t\tif(sm){\r\n\t\t\t\tif(isF(sm.initStyle)){\r\n\t\t\t\t\tsm.initStyle(grid);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(grid.striped){\r\n\t\t\t\tbox.addClass('c-grid-striped');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//绑定事件\r\n\t\t\tif(grid.headWarp){\r\n\t\t\t\tgrid.bodyBox.on('scroll', function(){\r\n\t\t\t\t\tgrid.headWarp.dom.scrollLeft = grid.bodyBox.dom.scrollLeft;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tme.bindDataEvent(grid);\r\n\t\t\t\r\n\t\t\tme.layoutRows(grid, true);\r\n\t\t},\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tbindDataEvent : function(grid){\r\n\t\t\tif(grid.data && isF(grid.data.on)){\r\n\t\t\t\tgrid.data.on('changed', onDataChanged, {\r\n\t\t\t\t\tview : this,\r\n\t\t\t\t\tgrid : grid\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\treleaseDataEvent : function(grid){\r\n\t\t\tif(grid.data && isF(grid.data.un)){\r\n\t\t\t\tgrid.data.un('changed', onDataChanged, {\r\n\t\t\t\t\tview : this,\r\n\t\t\t\t\tgrid : grid\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tlayoutRows : function(grid, includHead){\r\n\t\t\tvar cm = grid.getColumnModel(),\r\n\t\t\t\ti=0, len = cm.getCount(),c,\r\n\t\t\t\trw = grid.bodyBox.getScrollWidth(),\r\n\t\t\t\tbw = grid.bodyBox.getWidth(),\t\r\n\t\t\t\trm = grid.getRowModel(),\r\n\t\t\t\tw = 0;\r\n\t\t\t\t\r\n\t\t\tfor(;i<len;i++){\r\n\t\t\t\tc = cm.getColumn(i);\r\n\t\t\t\tw += c.getColumnWidth();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(rm.getRowsHeight() > grid.bodyBox.getHeight()){\r\n\t\t\t\tbw = bw - rw;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tw = bw > w ? bw : w;\r\n\t\t\t\r\n\t\t\t\r\n\t\t\trm.setRowWidth(w);\r\n\t\t\t\r\n\t\t\tif(includHead){\r\n\t\t\t\tgrid.headBox.setWidth(w+rw);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * @private\r\n\t\t * 渲染指定表格中的表头部分\r\n\t\t * @param {GridPanel} grid 表格\r\n\t\t */\r\n\t\trenderHead : function(grid){\r\n\t\t\tvar box = grid.headBox,bd,cm,tr,td,inner;\r\n\t\t\tif(!box){\r\n\t\t\t\treturn ;\r\n\t\t\t}\r\n\t\t\tbox.update(EMPTY_TABEL_HTML);\r\n\t\t\tbd = box.dom.firstChild.firstChild;\r\n\t\t\tcm = grid.getColumnModel();\r\n\t\t\tvar i=0, len = cm.getCount(),c;\r\n\t\t\ttr = DH.createDom({tag:'tr',parentNode:bd});\r\n\t\t\tfor(;i<len;i++){\r\n\t\t\t\tc = cm.getColumn(i);\r\n\t\t\t\ttd = DH.createDom({tag:'td',parentNode:tr});\r\n\t\t\t\tinner = Cmp.get(DH.createDom({tag:'div',parentNode:td,cls:'c-grid-cell'}));\r\n\t\t\t\tc.renderHead(inner, i, grid.data);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * 渲染指定表格中的主体部分\r\n\t\t * @param {GridPanel} grid 表格\r\n\t\t */\r\n\t\trenderBody : function(grid){\r\n\t\t\tvar me = this,\r\n\t\t\t\tbox = grid.bodyBox,\r\n\t\t\t\trm = grid.getRowModel(),\r\n\t\t\t\tdata = grid.data,\r\n\t\t\t\trs = data && isF(data.getRecords) ? data.getRecords() : [];\r\n\t\t\trm.renderRows(box, rs);\r\n\t\t}\r\n\t};\r\n\t\r\n\t\r\n\t\r\n\tCmp.define('Cmp.grid.GridView',{\r\n\t\tfactory : function(){\r\n\t\t\treturn GridView;\r\n\t\t}\r\n\t});\r\n}());","/**\r\n * 表格中每一行的数据信息。\r\n * @class Cmp.grid.Row\r\n * @extend Object\r\n * \r\n * @version 2.0.0\r\n * @since 2016-03-31\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\r\n\tvar DH = Cmp.util.DomHelper;\r\n\tvar EMPTY_TABEL_HTML = ['<table cellpadding=\"0\" cellspacing=\"0\">'];\r\n\tEMPTY_TABEL_HTML.push('<tbody></tbody></table>');\r\n\tEMPTY_TABEL_HTML = EMPTY_TABEL_HTML.join('');\r\n\t\r\n\tvar Row = function(record, rowIndex, grid){\r\n\t\tvar me = this;\r\n\t\tme.record = record;\r\n\t\tme.rowIndex = rowIndex;\r\n\t\tme.grid = grid;\r\n\t\tme.cells = [];\r\n\t\tme.events = {};\r\n\t}\r\n\tRow.prototype = {\r\n\t\t/**\r\n\t\t * 在绘制行的Element上添加一个事件监听方法;调用回调方法时参数1为事件数据,参数2为该行\r\n\t\t * \r\n\t\t * @param {String} eventName 事件名\r\n\t\t * @param {String} handler 回调方法\r\n\t\t * @param {String} scope 调用回调方法时设定的this对象\r\n\t\t */\r\n\t\taddListener : function(eventName, handler, scope){\r\n\t\t\tif(!eventName || !isF(handler)){\r\n\t\t\t\treturn ;\r\n\t\t\t}\r\n\t\t\tvar me = this,\r\n\t\t\t\ten = me.events[eventName];\r\n\t\t\t\t\r\n\t\t\tif(!en){\r\n\t\t\t\ten = new Cmp.util.EventProxy();\r\n\t\t\t\tme.events[eventName] = en;\r\n\t\t\t\t\r\n\t\t\t\tif(me.rendered){\r\n\t\t\t\t\tme.el.on(eventName, me.onEvent, me);\r\n\t\t\t\t}\r\n\t\t\t}\t\r\n\t\t\t\r\n\t\t\ten.addListener(handler, scope);\r\n\t\t},\r\n\t\t/**\r\n\t\t * 在绘制行的Element上移除一个事件的监听;\r\n\t\t * @param {String} eventName 事件名\r\n\t\t * @param {String} handler 回调方法\r\n\t\t * @param {String} scope 调用回调方法时设定的this对象\r\n\t\t */\r\n\t\tremoveListener : function(eventName, handler, scope){\r\n\t\t\tif(!eventName || !isF(handler)){\r\n\t\t\t\treturn ;\r\n\t\t\t}\r\n\t\t\tvar me = this,\r\n\t\t\t\ten = me.events[eventName];\r\n\t\t\tif(en){\r\n\t\t\t\ten.removeListener(handler, scope);\r\n\t\t\t}\t\r\n\t\t},\r\n\t\t/**\r\n\t\t * 获得该行占用高度\r\n\t\t */\r\n\t\tgetHeight : function(){\r\n\t\t\tvar me = this;\r\n\t\t\tif(me.el){\r\n\t\t\t\treturn me.el.getHeight();\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t/**\r\n\t\t * 设定该行的宽度\r\n\t\t */\r\n\t\tsetWidth : function(w){\r\n\t\t\tvar me = this;\r\n\t\t\tif(me.el){\r\n\t\t\t\tme.el.setWidth(w);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * 获得该行键值\r\n\t\t */\r\n\t\tgetId : function(){\r\n\t\t\tvar me = this;\r\n\t\t\tif(!me.id){\r\n\t\t\t\tme.id = 'Row-'+me.rowIndex;\r\n\t\t\t}\r\n\t\t\treturn me.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * 在指定的容器内绘制该行\r\n\t\t */\r\n\t\trender : function(box){\r\n\t\t\tvar me = this,\r\n\t\t\t\tg = me.grid,\r\n\t\t\t\tcm = g.getColumnModel(),\r\n\t\t\t\tsm = g.getSelectionModel(),\r\n\t\t\t\trow,bd,tr,td,inner,\r\n\t\t\t\tcls = ['c-grid-row'];\r\n\t\t\tif(me.rendered){\r\n\t\t\t\treturn; \r\n\t\t\t}\t\r\n\t\t\tme.rendered = true;\r\n\t\t\t\r\n\t\t\tif(isF(g.getRowClass)){\r\n\t\t\t\trow = g.getRowClass(me.record, me.rowIndex);\r\n\t\t\t\tif(isA(row)){\r\n\t\t\t\t\tcls = cls.concat(row);\r\n\t\t\t\t}\r\n\t\t\t\telse if(isS(row)){\r\n\t\t\t\t\tcls.push(row);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\trow = box.createChild({\r\n\t\t\t\tcls : cls,\r\n\t\t\t\thtml : EMPTY_TABEL_HTML\r\n\t\t\t});\r\n\t\t\tme.el = row;\r\n\t\t\tbd = row.dom.firstChild.firstChild;\r\n\t\t\ttr = DH.createDom({tag:'tr',parentNode:bd});\r\n\t\t\tvar i=0, len = cm.getCount(),c;\r\n\t\t\t\r\n\t\t\tfor(;i<len;i++){\r\n\t\t\t\ttd = DH.createDom({tag:'td',parentNode:tr});\r\n\t\t\t\tinner = Cmp.get(DH.createDom({tag:'div',parentNode:td,cls:'c-grid-cell'}));\r\n\t\t\t\tme.cells.push({\r\n\t\t\t\t\tel : inner,\r\n\t\t\t\t\trowIndex : me.rowIndex,\r\n\t\t\t\t\tcolIndex : i\r\n\t\t\t\t});\r\n\t\t\t\tc = cm.getColumn(i);\r\n\t\t\t\tc = c.renderCell(inner, me.record, row, me.rowIndex, i, g.data);\r\n\t\t\t\tif(sm){\r\n\t\t\t\t\tsm.bindCellEvent(inner, c, me.record, me.rowIndex, i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(sm){\r\n\t\t\t\tsm.bindRowEvent(me);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t},\r\n\t\t/**\r\n\t\t * 移除该行\r\n\t\t */\r\n\t\tremove : function(){\r\n\t\t\tvar me = this,\r\n\t\t\t\tsm = me.grid.getSelectionModel(),\r\n\t\t\t\tcs = me.cells,\r\n\t\t\t\ti,len,o;\r\n\t\t\t\r\n\t\t\t//注销选择控制器的事件监听\r\n\t\t\tif(sm){\r\n\t\t\t\t//单元格\r\n\t\t\t\tfor(i=0,len = cs.length; i<len;i++){\r\n\t\t\t\t\tc = cs[i];\r\n\t\t\t\t\tsm.releaseCellEvent(c.el, c.rowIndex, c.colIndex);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t//行\r\n\t\t\t\tsm.releaseRowEvent(me);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//事件代理\r\n\t\t\tcs = me.events;\r\n\t\t\tfor(i in cs){\r\n\t\t\t\tc = cs[i];\r\n\t\t\t\tme.el.un(i, me.onEvent, me);\r\n\t\t\t\tc.destory();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tme.el.remove();\r\n\t\t},\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tonEvent : function(ev){\r\n\t\t\tvar me = this,\r\n\t\t\t\ttype = ev.type,\r\n\t\t\t\ten = me.events[type];\r\n\t\t\tif(en){\r\n\t\t\t\ten.fire(ev, me);\r\n\t\t\t}\t\r\n\t\t}\r\n\t};\r\n\t\r\n\tRow.prototype.on = Row.prototype.addListener;\r\n\tRow.prototype.un = Row.prototype.removeListener;\r\n\t\r\n\tCmp.define('Cmp.grid.Row',{\r\n\t\tfactory : function(){\r\n\t\t\treturn Row;\r\n\t\t}\r\n\t});\r\n}());","/**\r\n * 表格部件中对于行的管理模型；\r\n * \r\n * @class Cmp.grid.RowModel\r\n * @extend Object\r\n * \r\n * @version 2.0.0\r\n * @since 2016-03-31\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\tvar UV = Cmp.util.ValueHelper;\r\n\t\r\n\tCmp.define('Cmp.grid.RowModel',{\r\n\t\trequires : ['Cmp.grid.Row'],\r\n\t\tfactory : function(ext, reqs){\r\n\t\t\tvar rowClass = reqs[0];\r\n\t\t\t\r\n\t\t\tvar RowModel = function(grid){\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tme.grid = grid;\r\n\t\t\t\tme.rows = {};\r\n\t\t\t}\r\n\t\t\tRowModel.prototype = {\r\n\t\t\t\t/**\r\n\t\t\t\t * 获得当前所有显示行所占用的总高度 \r\n\t\t\t\t */\r\n\t\t\t\tgetRowsHeight : function(){\r\n\t\t\t\t\tvar me = this,h,i,r;\r\n\t\t\t\t\tif(1 > me.getCount()){\r\n\t\t\t\t\t\treturn 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\th = 0;\r\n\t\t\t\t\tfor(i in me.rows){\r\n\t\t\t\t\t\tr = me.rows[i];\r\n\t\t\t\t\t\th += r.getHeight();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn h;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 获得行的数量\r\n\t\t\t\t */\r\n\t\t\t\tgetCount : function(){\r\n\t\t\t\t\treturn this.count;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 获得当前所有的Row\r\n\t\t\t\t */\r\n\t\t\t\tgetRows : function(){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\trows = me.rows,\r\n\t\t\t\t\t\ti,r,\r\n\t\t\t\t\t\trs = [];\r\n\t\t\t\t\tfor(i in rows){\r\n\t\t\t\t\t\trs.push(rows[i]);\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\t\r\n\t\t\t\t\trs.sort(function(r1, r2){\r\n\t\t\t\t\t\tvar ri1 = UV.toInteger(r1.rowIndex, -1),\r\n\t\t\t\t\t\t\tri2 = UV.toInteger(r2.rowIndex, -1);\r\n\t\t\t\t\t\treturn ri1 - ri2;\t\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn rs;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 清除之前绘制的行\r\n\t\t\t\t */\r\n\t\t\t\tclearRows : function(){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\trows = me.rows,\r\n\t\t\t\t\t\ti,r;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tfor(i in rows){\r\n\t\t\t\t\t\tr = rows[i];\r\n\t\t\t\t\t\tr.remove();\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\tme.rows = {};\r\n\t\t\t\t\tme.count = 0;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 清除之前绘制内容，重新绘制指定的数据\r\n\t\t\t\t * @param {Element} box\r\n\t\t\t\t * @param {Array} records 由{Record}对象组成的数组。\r\n\t\t\t\t */\r\n\t\t\t\trenderRows : function(box, records){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\ti=0,len = records.length || 0,r;\r\n\t\t\t\t\tme.clearRows();\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor(;i<len;i++){\r\n\t\t\t\t\t\tr = me.renderRow(box, records[i], i);\r\n\t\t\t\t\t\tme.rows[r.getId()] = r;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.count = len;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 设定每行的宽度\r\n\t\t\t\t */\r\n\t\t\t\tsetRowWidth : function(w){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\trs = me.rows,\r\n\t\t\t\t\t\ti,r;\r\n\t\t\t\t\tfor(i in rs){\r\n\t\t\t\t\t\tr = rs[i];\r\n\t\t\t\t\t\tr.setWidth(w);\r\n\t\t\t\t\t}\t\r\n\t\t\t\t},\r\n\t\t\t\t\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t */\r\n\t\t\t\trenderRow : function(box, record, rowIndex){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\trow = new rowClass(record, rowIndex, me.grid);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\trow.render(box);\t \r\n\t\t\t\t\treturn row;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t};\r\n\t\t\treturn RowModel;\r\n\t\t}\r\n\t});\r\n}());","/**\r\n * 表格展示部件\r\n * \r\n * @class Cmp.grid.GridPanel\r\n * @extend Cmp.Componet\r\n * \r\n * @version 2.0.0\r\n * @since 2016-03-31\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\r\n\tCmp.define('Cmp.grid.GridPanel',{\r\n\t\textend : 'Cmp.Widget',\r\n\t\trequires : [\r\n\t\t\t'Cmp.grid.GridView',\r\n\t\t\t'Cmp.grid.RowSelectionModel',\r\n\t\t\t'Cmp.grid.ColumnModel',\r\n\t\t\t'Cmp.grid.RowModel'\r\n\t\t],\r\n\t\tcls : true,\r\n\t\tfactory : function(ext, reqs){\r\n\t\t\tvar superClass = ext.prototype,\r\n\t\t\t\tviewClass = reqs[0],\r\n\t\t\t\tselModelClass = reqs[1],\r\n\t\t\t\tcolModelClass = reqs[2],\r\n\t\t\t\trowModelClass = reqs[3];\r\n\t\t\treturn Cmp.extend(ext, {\r\n\t\t\t\t/**\r\n\t\t\t\t * @cfg {TableModel} data 该表格初始时绑定的数据模型。 \r\n\t\t\t\t */\r\n\t\t\t\t\r\n\t\t\t\t/**\r\n\t\t\t\t * @cfg {Array} columns 表格每一列的配置。\r\n\t\t\t\t */ \r\n\t\t\t\r\n\t\t\t\t/**\r\n\t\t\t\t * @cfg {Boolean} hideHeader (可选)等于true时表示不会绘制标题，默认为false。\r\n\t\t\t\t */\r\n\t\t\t\r\n\t\t\t\t/**\r\n\t\t\t\t * @cfg {Widget/Object} footer (可选)绘制在表格底部的展示部件。当没有配置或配置值等于false时，表示不展示底部内容。\r\n\t\t\t\t *\t如果为一个配置对象，则使用该配置对象创建PagingBar实例，并将该PagingBar绘制到底部；\r\n\t\t\t\t *\t如果为一个Widget部件实例，则直接将其绘制在表格底部。\r\n\t\t\t\t */\r\n\t\t\t\t\r\n\t\t\t\t/**\r\n\t\t\t\t * @cfg {Boolean} striped 等于true时采用斑马条纹形式，设定每行的底色，默认为false。\r\n\t\t\t\t */\r\n\t\t\t\t\r\n\t\t\t\t/**\r\n\t\t\t\t * @cfg {Function} getRowClass\r\n\t\t\t\t * 设定每一个行使用CSS样式的调用方法，当没有设定或者方法返回null时，表示不额外添加CSS样式；\r\n\t\t\t\t * 另外，即使配置了该方法，striped配置继续有效。 调用时，传入参数如下：\r\n\t\t\t\t * @param {Record} record 该行数据\r\n\t\t\t\t * @param {Number} rowIndex 该行在表格中的行次序。\r\n\t\t\t\t */\r\n\t\t\t\t \r\n\t\t\t\t/**\r\n\t\t\t\t * 获得该表格部件的绘制控制器\r\n\t\t\t\t */\r\n\t\t\t\tgetView : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(!me.view){\r\n\t\t\t\t\t\tme.view = new viewClass();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn me.view;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 获得该表格的选择控制器\r\n\t\t\t\t */\r\n\t\t\t\tgetSelectionModel : function(){\r\n\t\t\t\t\treturn this.selModel;\r\n\t\t\t\t},\t\t\t\t \r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tinitComponent : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tsuperClass.initComponent.call(me);\r\n\t\t\t\t\tvar cls = ['c-grid'];\r\n\t\t\t\t\tif(isS(me.cls)){\r\n\t\t\t\t\t\tcls.push(me.cls);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(isA(me.cls)){\r\n\t\t\t\t\t\tcls = cls.concat(me.cls);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.cls = cls;\r\n\t\t\t\t\tme.getColumnModel();\r\n\t\t\t\t\tme.getRowModel();\r\n\t\t\t\t\tif(me.sm || me.selModel){\r\n\t\t\t\t\t\tme.selModel = me.selModel || me.sm;\r\n\t\t\t\t\t\tif(isO(me.selModel)){\r\n\t\t\t\t\t\t\tif(!isF(me.selModel.setSelections)){\r\n\t\t\t\t\t\t\t\tme.selModel = new selModelClass(me.selModel);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tme.selModel = new selModelClass();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tme.selModel = new selModelClass({noselect : true});\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 获得该表格的列管理器\r\n\t\t\t\t */\r\n\t\t\t\tgetColumnModel : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(!me.columnModel){\r\n\t\t\t\t\t\tme.columnModel = new colModelClass(me.columns);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn me.columnModel;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 获得该表格的行管理器\r\n\t\t\t\t */\r\n\t\t\t\tgetRowModel : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(!me.rowModel){\r\n\t\t\t\t\t\tme.rowModel = new rowModelClass(me);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn me.rowModel;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tdoRender : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tsuperClass.doRender.call(me);\r\n\t\t\t\t\tvar view = me.getView();\r\n\t\t\t\t\tview.render(me);\r\n\t\t\t\t}\r\n\t\t\t});\t\r\n\t\t}\r\n\t});\r\n}());","/**\r\n * @abstract\r\n * @class Cmp.layout.Layout\r\n * @extend Object\r\n * 布局控制器的基本功能抽象实现类；\r\n * \r\n * @version 2.3.0\r\n * @since 2016-05-31\r\n * @author Jinhai\r\n * \r\n */\r\n(function(){\r\n\r\n\tvar Layout = function(cfg){\r\n\t\tvar me = this;\r\n\t\tif(isO(cfg)){\r\n\t\t\tCmp.apply(me, cfg);\r\n\t\t}\r\n\t}\r\n\tLayout.prototype = {\r\n\t\t/**\r\n\t\t * @public\r\n\t\t * 获得指定位置上的显示项\r\n\t\t * @param {Number} index\r\n\t\t * @return {Widget}\r\n\t\t */\r\n\t\tgetItemAt : function(index){\r\n\t\t\tvar o = this.items[index];\r\n\t\t\treturn o ? o.cmp : undefined;\r\n\t\t},\r\n\t\t/**\r\n\t\t * @public\r\n\t\t * 获得容器上显示部件的数量\r\n\t\t */\r\n\t\tgetItemCount : function(){\r\n\t\t\tvar me = this;\r\n\t\t\treturn isA(me.items) ? me.items.length : 0;\r\n\t\t},\r\n\t\t/**\r\n\t\t * @public\r\n\t\t * 对指定的容器进行布局。\r\n\t\t * 该方法会将容器中设定的各个子部件，按照顺序，依次在容器的承载Element上进行渲染。\r\n\t\t * 该方法只能被调用一次，调用完成后，该布局管理器则会与该容器进行绑定。如果想要再次进行布局，则需要调用relayout方法。\r\n\t\t * \r\n\t\t * @param {Contaner} contaner 容器实例\r\n\t\t */\r\n\t\tlayout : function(contaner){\r\n\t\t\tvar me = this,\r\n\t\t\t\tbox = contaner.getLayoutTarget();\r\n\t\t\tif(me.contaner){\r\n\t\t\t\t//已经绘制过了，不能嫁二夫啊\r\n\t\t\t\treturn ;\r\n\t\t\t}\r\n\t\t\tme.contaner = contaner;\r\n\t\t\tme.items = [];\r\n\t\t\t\r\n\t\t\tme.beforeLayout(box);\r\n\t\t\t\r\n\t\t\tvar items = contaner.items,\r\n\t\t\t\ti=0,len = isA(items) ? items.length : 0;\r\n\t\t\tfor(;i<len;i++){\r\n\t\t\t\tme.renderItem(items[i], box, i);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * @public\r\n\t\t * 对设定的容器重新进行布局。\r\n\t\t * 重新布局的过程中，会重新遍历容器中各个子部件；对还没有渲染得进行渲染。\r\n\t\t */\r\n\t\trelayout : function(){\r\n\t\t\t//TODO\r\n\t\t},\r\n\t\t/**\r\n\t\t * @public \r\n\t\t * 在布局容器的最后面增加一个显示不见\r\n\t\t * @param {Object} item\r\n\t\t * @return {Boolean} 成功删除返回true。\r\n\t\t */\r\n\t\tappendItem : function(item){\r\n\t\t\t//TODO\r\n\t\t},\r\n\t\t/**\r\n\t\t * @public \r\n\t\t * 删除指定的显示部件；\r\n\t\t * @param {Number} index 所删除部件实例在容器中的次序。\r\n\t\t * @return {Boolean} 成功删除返回true。\r\n\t\t */\r\n\t\tremoveItem : function(index){\r\n\t\t\tvar me = this,\r\n\t\t\t\tit = me.getItemAt(index);\r\n\t\t\tif(it){\r\n\t\t\t\t//从缓存中删除\r\n\t\t\t\tme.items.splice(index, 1);\r\n\t\t\t\t//从Dom树中删除\r\n\t\t\t\tit.cmp.destroy();\r\n\t\t\t\tit.el.remove();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t/**\r\n\t\t * @private\r\n\t\t * 在为容器绘制子部件之前调用的方法\r\n\t\t * @param {Element} target 绘制子部件的Element\r\n\t\t */\r\n\t\tbeforeLayout : Cmp.emptyFn, \r\n\t\t/**\r\n\t\t * @private\r\n\t\t * 渲染一个子部件，该方法允许子类进行重写；\r\n\t\t * @param {Object/Widget} item 子部件\r\n\t\t * @param {Element} box \r\n\t\t * @param {Number} index 绘制部件在配置中的次序。\r\n\t\t * @reutrn {Widget} 子部件的{Widget}实例\r\n\t\t */\r\n\t\trenderItem : function(item, box, index){\r\n\t\t\tvar me = this,\r\n\t\t\t\t//按照顺序预占\r\n\t\t\t\tel = box.createChild({\r\n\t\t\t\t\tcls : 'c-ly-item'\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\t\tme.items[index] = {\r\n\t\t\t\tel : el\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tif(isO(item)){\r\n\t\t\t\tif(!isF(item.render)){\r\n\t\t\t\t\tCmp.create(item, function(cmp){\r\n\t\t\t\t\t\tif(isO(cmp) && isF(cmp.render)){\r\n\t\t\t\t\t\t\tcmp.render(me.items[index].el);\r\n\t\t\t\t\t\t\tme.items[index].cmp = cmp;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tme.items[index].el.setStyle('display', 'none');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\titem.render(me.items[index].el);\r\n\t\t\t\t\tme.items[index].cmp = item;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tme.items[index].el.setStyle('display', 'none');\r\n\t\t\t}\r\n\t\t} \r\n\t};\r\n\tCmp.define('Cmp.layout.Layout',{\r\n\t\tfactory : function(ext, reqs){\r\n\t\t\treturn Layout;\r\n\t\t}\r\n\t});\r\n}());","/**\r\n * @abstract\r\n * @class Cmp.layout.FormLayout\r\n * @extend Cmp.layout.Layout\r\n * 布局控制器的基本功能抽象实现类；\r\n * \r\n * @version 2.3.0\r\n * @since 2016-05-31\r\n * @author Jinhai\r\n * \r\n */\r\n(function(){\r\n\tCmp.define('Cmp.layout.FormLayout',{\r\n\t\textend : 'Cmp.layout.Layout',\r\n\t\tcls :  true,\r\n\t\tfactory : function(ext, reqs){\r\n\t\t\tvar superClazz = ext.prototype;\r\n\t\t\t\r\n\t\t\treturn Cmp.extend(ext, {\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tbeforeLayout : function(box){\r\n\t\t\t\t\tbox.addClass('c-formlayout');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n}());","/**\r\n * 树节点的绘制渲染器\r\n *\r\n * <p>\r\n * @class Cmp.tree.TreeNodeView\r\n * @extend Object\r\n * \r\n * @version 2.1.0\r\n * @since 2016-05-31\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\t\r\n\tvar seq = 10000,\r\n\t\tbuildId = function(){\r\n\t\t\treturn 'tv-'+(++seq);\r\n\t\t},\r\n\t\tHTML_TMP,\r\n\t\thtml = [];\r\n\t\r\n\t//节点前的\t\r\n\thtml.push('<div class=\"c-treenode-warp\">');\r\n\t//打开/关闭/节点图标+\r\n\thtml.push('<div class=\"c-treenode-trigger\"><span class=\"arrow\"></span><span class=\"node\"></span></div>');\r\n\t//内容区\r\n\thtml.push('<div class=\"c-treenode-inner\">');\r\n\thtml.push('<div class=\"c-treenode-body\"><span class=\"icon\"></span><span class=\"text\"></span></div>');\r\n\thtml.push('</div></div>');\r\n\tHTML_TMP = html.join('');\r\n\t\r\n\tTreeNodeView = function(node){\r\n\t\tvar me = this;\r\n\t\tme.node = node;\r\n\t\tme.id = buildId();\r\n\t}\r\n\tTreeNodeView.prototype = {\r\n\t\t/**\r\n\t\t * \r\n\t\t */\r\n\t\tgetId : function(){\r\n\t\t\treturn this.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * 返回true表示正处于展开状态\r\n\t\t */\r\n\t\tisExtended : function(){\r\n\t\t\treturn !!this.extended;\r\n\t\t},\r\n\t\t/**\r\n\t\t * 将该节点的状态置为收缩状态\r\n\t\t */\r\n\t\tcollend : function(){\r\n\t\t\tvar me = this;\r\n\t\t\tif(me.isExtended()){\r\n\t\t\t\tme.itemBox.removeClass('c-treenode-extended');\r\n\t\t\t\tme.childrenBox.hide();\r\n\t\t\t\tme.extended = false;\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * 将该节点的状态置为展开状态\r\n\t\t * 展开该节点\r\n\t\t */\r\n\t\textend : function(){\r\n\t\t\tvar me = this;\r\n\t\t\tif(!me.isExtended()){\r\n\t\t\t\tme.itemBox.addClass('c-treenode-extended');\r\n\t\t\t\tme.childrenBox.show();\r\n\t\t\t\tme.extended = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * 返回true表示该节点为选中状态\r\n\t\t */\r\n\t\tisSelected : function(){\r\n\t\t\treturn !!this.selected;\r\n\t\t},\r\n\t\t/**\r\n\t\t * 将该节点置为选中状态\r\n\t\t */\r\n\t\tselect : function(){\r\n\t\t\tvar me = this;\r\n\t\t\tif(!me.isSelected()){\r\n\t\t\t\tme.itemBox.addClass('c-treenode-selected');\r\n\t\t\t\tme.selected = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * 将该节点置为非选中状态\r\n\t\t */\r\n\t\tunselect : function(){\r\n\t\t\tvar me = this;\r\n\t\t\tif(me.isSelected()){\r\n\t\t\t\tme.itemBox.removeClass('c-treenode-selected');\r\n\t\t\t\tme.selected = false;\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * 显示为读取状态\r\n\t\t */\r\n\t\tshowLoding : function(){\r\n\t\t\tvar me = this,\r\n\t\t\t\toldCls = me.nodeIconBox.dom.className;\r\n\t\t\t\r\n\t\t\tme.nodeIconBox.dom.className = 'fa fa-spinner fa-pulse';\r\n\t\t\tme.nodeIconBox.oldCls = oldCls;\t\r\n\t\t},\r\n\t\t/**\r\n\t\t * 隐藏读取状态，恢复之前的状态\r\n\t\t */\r\n\t\thideLoading : function(){\r\n\t\t\tvar me = this;\r\n\t\t\tme.nodeIconBox.dom.className = me.nodeIconBox.oldCls;\r\n\t\t\tdelete \tme.nodeIconBox.oldCls;\r\n\t\t},\r\n\t\t/**\r\n\t\t * 获得承载子节点的承载容器\r\n\t\t */\r\n\t\tgetChildrenBox : function(){\r\n\t\t\tvar me = this;\r\n\t\t\tif(!me.childrenBox){\r\n\t\t\t\tme.childrenBox = me.el.createChild({\r\n\t\t\t\t\tcls : 'c-treenode-childbox'\r\n\t\t\t\t});\r\n\t\t\t\tme.childrenBox.setHideModal('display');\r\n\t\t\t\tme.childrenBox.hide();\r\n\t\t\t}\r\n\t\t\treturn me.childrenBox;\r\n\t\t},\r\n\t\t/**\r\n\t\t * 清空挂在该节点下的子孙节点的渲染器\r\n\t\t */\r\n\t\tclearChilden : function(){\r\n\t\t\tvar me = this,\r\n\t\t\t\tvs = me.childViews,\r\n\t\t\t\ti = 0,\r\n\t\t\t\tlen = isA(vs) ? vs.length : 0;\r\n\t\t\tfor(;i<len;i++){\r\n\t\t\t\tvs[i].remove();\r\n\t\t\t}\r\n\t\t\tme.childViews = undefined;\r\n\t\t},\r\n\t\t/**\r\n\t\t * 从显示的树上，删除该节点的渲染器实例；如果之下包含有子节点，则一并删除。\r\n\t\t * PS：只是删除渲染器实例，对于数据节点是不负责删除的。\r\n\t\t */\r\n\t\tremove : function(){\r\n\t\t\tvar me = this;\r\n\t\t\t//先删除子节点\r\n\t\t\tme.clearChilden();\r\n\r\n\t\t\t//清除指向数据对象的引用\r\n\t\t\tdelete me.node;\r\n\t\t\t\r\n\t\t\t//删除本身\r\n\t\t\tme.el.remove();\r\n\t\t},\r\n\t\t\r\n\t\t\r\n\t\t/**\r\n\t\t * 添加一个挂在节点下的子节点\r\n\t\t */\r\n\t\taddChild : function(view){\r\n\t\t\tvar me = this;\r\n\t\t\tif(!isA(me.childViews)){\r\n\t\t\t\tme.childViews = [];\r\n\t\t\t}\r\n\t\t\tme.childViews.push(view);\r\n\t\t},\r\n\t\t/**\r\n\t\t * 返回true表示渲染过子节点\r\n\t\t * \r\n\t\t */\r\n\t\tisRenderedForChildren : function(){\r\n\t\t\treturn !!this.childrenBox;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * @public \r\n\t\t * 在指定的容器上渲染所配置的节点\r\n\t\t * @param {Element} box 容器\r\n\t\t * @param {TreeView} view 树渲染器\r\n\t\t */\r\n\t\trender : function(box, view){\r\n\t\t\tvar me = this,\r\n\t\t\t\tn = me.node,\r\n\t\t\t\tlv = n.getTreeLayer(),\r\n\t\t\t\tv,\r\n\t\t\t\tdom,subDom,cns;\r\n\t\t\t\r\n//\t\t\tputLog('render> node id:'+n.getId()+', text:'+n.getText()+', layer:'+lv);\r\n\t\t\t\r\n\t\t\tme.el = box.createChild({\r\n\t\t\t\tcls : 'c-treenode'\r\n\t\t\t});\r\n\t\t\tme.itemBox = me.el.createChild({\r\n\t\t\t\tcls : 'c-treenode-item',\r\n\t\t\t\thtml : HTML_TMP\r\n\t\t\t});\r\n\t\t\tif(lv > 0){\r\n\t\t\t\tme.itemBox.setStyle('paddingLeft',0.8*lv+'rem');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tdom = me.itemBox.dom.firstChild;\r\n\t\t\t\r\n\t\t\tme.nodeIconBox = Cmp.get(dom.firstChild.childNodes[1]);\r\n\t\t\t\r\n\t\t\tcns = dom.childNodes[1].firstChild.childNodes;\r\n\t\t\tme.iconBox = Cmp.get(cns[0]);\r\n\t\t\tme.textBox = Cmp.get(cns[1]);\r\n\t\t\t\r\n\t\t\tv = n.getIcon();\r\n\t\t\tif(isS(v)){\r\n\t\t\t\tv = ['icon',v];\r\n\t\t\t}\r\n\t\t\telse if(isA(v)){\r\n\t\t\t\tv = v.unshift('icon');\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tv = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(v){\r\n\t\t\t\tme.iconBox.setClass(v);\r\n\t\t\t\tme.itemBox.removeClass('c-treenode-noicon');\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tme.iconBox.setClass('icon');\r\n\t\t\t\tme.itemBox.addClass('c-treenode-noicon');\r\n\t\t\t}\r\n\t\t\tme.textBox.update(n.getText() || '');\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif(n.isLeaf()){\r\n\t\t\t\tme.itemBox.addClass('c-treenode-leaf');\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tme.itemBox.addClass(['c-treenode-folder']);\r\n\t\t\t\tsubDom = dom.firstChild.firstChild;\r\n\t\t\t\tme.arrowBox = Cmp.get(subDom);\r\n\t\t\t\tme.arrowBox.on('click', function(ev){\r\n\t\t\t\t\tev.stopPropagation();\r\n\t\t\t\t\tview.onClickArrow(n);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//单击\r\n\t\t\tme.itemBox.on('click', function(ev){\r\n\t\t\t\tev.stopPropagation();\r\n\t\t\t\tview.onClickNode(n);\r\n\t\t\t});\r\n\t\t\t//双击\r\n\t\t\tme.itemBox.on('dblclick', function(ev){\r\n\t\t\t\tev.stopPropagation();\r\n\t\t\t\tview.onDbClickNode(n);\r\n\t\t\t});\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tCmp.define('Cmp.tree.TreeNodeView',{\r\n\t\tfactory : function(){\r\n\t\t\treturn TreeNodeView;\r\n\t\t}\r\n\t});\r\n\t\r\n}());","/**\r\n * 树节点的数据描述类；\r\n * \r\n * @class Cmp.tree.TreeNode\r\n * @extend Object\r\n * \r\n * @version 2.1.0\r\n * @since 2016-05-31\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\t/**\r\n\t * @constructor\r\n\t */\r\n\tvar TreeNode = function(cfg){\r\n\t\tcfg = cfg || {};\r\n\t\tvar me = this,\r\n\t\t\tid = cfg.id || buildId(),\r\n\t\t\tleaf = !!cfg.leaf,\r\n\t\t\tasync = !!cfg.async,\r\n\t\t\talwaysReload = !!cfg.alwaysReload,\r\n\t\t\t_tree;\r\n\t\tif(!async){\r\n\t\t\t//不需要异步获取，需要创建子节点对象\r\n\t\t\tvar cns = [],\r\n\t\t\t\tcs = cfg.children,\r\n\t\t\t\ti=0, len = isA(cs) ? cs.length : 0,\r\n\t\t\t\tc;\r\n\t\t\tfor(;i<len;i++){\r\n\t\t\t\tc = new TreeNode(cs[i]);\r\n\t\t\t\tcns.push(c);\r\n\t\t\t\tc.parent = me;\r\n\t\t\t}\r\n\t\t\tme.childNodes = cns;\t\r\n\t\t}\r\n\t\t\r\n\t\tme.data = {id:id};\r\n\t\tCmp.apply(me.data, cfg);\r\n\t\t\r\n\t\tdelete me.data.leaf;\r\n\t\tdelete me.data.async;\r\n\t\tdelete me.data.children;\r\n\t\tdelete me.data.alwaysReload;\r\n\t\t/**\r\n\t\t * 返回节点标识ID\r\n\t\t */\r\n\t\tme.getId = function(){\r\n\t\t\treturn id;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * 返回true表示需要采用异步获取形式获取子节点\r\n\t\t */\r\n\t\tme.isAsync = function(){\r\n\t\t\treturn async;\r\n\t\t}\r\n\t\t/**\r\n\t\t * 返回true表示每次展开时都需要采用异步获取形式获取子节点\r\n\t\t */\r\n\t\tme.isAlwaysReload = function(){\r\n\t\t\treturn async && alwaysReload;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * 返回true表示该节点是不可以展开的叶子节点。\r\n\t\t */\r\n\t\tme.isLeaf = function(){\r\n\t\t\treturn leaf;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * 该方法为TreePanel专用方法。\r\n\t\t * 将该节点绑定在指定的树上。\r\n\t\t * @param {TreePanel} tree\r\n\t\t */\r\n\t\tme.bindTree = function(tree){\r\n\t\t\t_tree = tree;\r\n\t\t},\r\n\t\t/**\r\n\t\t * 获得该节点所绑定的树\r\n\t\t * @return {TreePanel} \r\n\t\t */\r\n\t\tme.getTree = function(){\r\n\t\t\treturn _tree;\r\n\t\t}\r\n\t}\r\n\tTreeNode.prototype = {\r\n\t\t/**\r\n\t\t * @cfg {String} id (可选)树节点标识ID，在树中这个ID应该是唯一的。\r\n\t\t */\r\n\t\t/**\r\n\t\t * @cfg {String/Array} icon (可选)文字的前置图标的配置CSS样式或样式名组成的数组。\r\n\t\t */\r\n\t\t/**\r\n\t\t * @cfg {String} text (可选)显示文字。\r\n\t\t */\r\n\t\t\r\n\t\t/**\r\n\t\t * @cfg {Boolean} leaf (可选)等于true时表示此节点是不可以展开的叶子节点。默认为false。\r\n\t\t */\r\n\t\t\r\n\t\t/**\r\n\t\t * @cfg {Array} children (可选)子节点配置；当async等于true时该配置无效。\r\n\t\t */\r\n\t\t\r\n\t\t/**\r\n\t\t * @cfg {Boolean} async (可选配置，leaf不等于true时有效)等于true时表示获取该节点的子节点时需要采用异步形式，\r\n\t\t *\t\t暨通过绑定树的TreeLoader获取子节点。默认为false。\r\n\t\t */\r\n\t\t\r\n\t\t/**\r\n\t\t * @cfg {Boolean} alwaysReload (可选配置，leaf不等于true且async等于true时有效)等于true时表示每次一展开该节点时\r\n\t\t *\t\t都需要重新从绑定树的TreeLoader获取子节点。默认为false。\r\n\t\t */\r\n\t\t\r\n\t\t/**\r\n\t\t * 获得该节点文字的前置图标\r\n\t\t */\r\n\t\tgetIcon : function(){\r\n\t\t\treturn this.data.icon;\r\n\t\t},\r\n\t\t/**\r\n\t\t * 设定该节点文字的前置图标，如果该节点已经被绑定在某棵树上，则同时更新其显示。\r\n\t\t * \r\n\t\t */\r\n\t\tsetIcon : function(icon){\r\n\t\t\t//TODO\r\n\t\t},\r\n\t\t/**\r\n\t\t * 获得该节点显示的文字\r\n\t\t * @return {String} text 显示文字。\r\n\t\t */\r\n\t\tgetText : function(){\r\n\t\t\treturn this.data.text;\r\n\t\t},\r\n\t\t/**\r\n\t\t * 设定该节点显示的文字，如果该节点已经被绑定在某棵树上，则同时更新其显示。\r\n\t\t */\r\n\t\tsetText : function(text){\r\n\t\t\tvar me = this,\r\n\t\t\t\tt = me.getTree();\r\n\t\t\tif(t){\r\n\t\t\t\tif(me.editing){\r\n\t\t\t\t\t//编辑状态\r\n\t\t\t\t\tme.editCache.text = text;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tme.data.text = text;\r\n\t\t\t\t}\r\n\t\t\t\tt.updateNodeView(me);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tme.data.text = text;\r\n\t\t\t}\t\r\n\t\t},\r\n\t\t/**\r\n\t\t * 获得此节点的父节点\r\n\t\t * @return {TreeNode} 父节点实例；\r\n\t\t */\r\n\t\tgetParent : function(){\r\n\t\t\treturn this.parent;\r\n\t\t},\r\n\t\t/**\r\n\t\t * 获得该节点在所绑定树上的深度级别；\r\n\t\t * 如果该节点为根节点，返回值为0；\r\n\t\t */\r\n\t\tgetTreeLayer : function(){\r\n\t\t\tvar me = this;\r\n\t\t\tif(isN(me.treeLayer)){\r\n\t\t\t\treturn me.treeLayer;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tvar p = me.getParent();\r\n\t\t\t\tif(p){\r\n\t\t\t\t\tme.treeLayer = p.getTreeLayer()+1;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tme.treeLayer = 0;\r\n\t\t\t\t}\r\n\t\t\t\treturn me.treeLayer;\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * 获得该节点的子节点。\r\n\t\t * @param {Function} cb 回调方法，得到子节点之后，调用该方法。并将子节点传入。\r\n\t\t * @param {Object} scope 调用回调方法时的this对象设定。\r\n\t\t */\r\n\t\tgetChildren : function(cb, scope){\r\n\t\t\tvar me = this;\r\n\t\t\tif(me.isLeaf()){\r\n\t\t\t\tCmp.invoke(cb, scope,[]);\r\n\t\t\t}\r\n\t\t\telse if(me.isAsync()){\r\n\t\t\t\t//异步形式\r\n\t\t\t\tif(!isA(me.childNodes) || me.isAlwaysReload()){\r\n\t\t\t\t\t//还没有获取过子节点，或者是每次都需要获取子节点；需要使用TreeLoader获取\r\n\t\t\t\t\tvar loader = me.getTree();\r\n\t\t\t\t\tif(loader){\r\n\t\t\t\t\t\tloader = loader.getLoader();\r\n\t\t\t\t\t\tif(loader && isF(loader.load)){\r\n\t\t\t\t\t\t\tloader.load(me, function(os){\r\n\t\t\t\t\t\t\t\tvar i=0,\r\n\t\t\t\t\t\t\t\t\tlen = isA(os) ? os.length : 0,\r\n\t\t\t\t\t\t\t\t\tc,cns = [];\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tfor(;i<len;i++){\r\n\t\t\t\t\t\t\t\t\tc = new TreeNode(os[i]);\r\n\t\t\t\t\t\t\t\t\tc.parent = me;\r\n\t\t\t\t\t\t\t\t\tcns.push(c);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tme.childNodes = cns;\r\n\t\t\t\t\t\t\t\tCmp.invoke(cb, scope,[cns]);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\treturn ;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tCmp.invoke(cb, scope,[]);\r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tCmp.invoke(cb, scope,[me.childNodes]);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * 使该节点进入编辑状态。此后对该节点进行的set操作将不会同步到显示上。直到调用submitEdit或endEdit方法。\r\n\t\t */\r\n\t\tstartEdit : function(){\r\n\t\t\t\r\n\t\t},\r\n\t\t/**\r\n\t\t * 提交属性编辑内容使之同步到显示上，然后继续保持编辑状态。\r\n\t\t */\r\n\t\tsubmitEdit : function(){\r\n\t\t\t//TODO\r\n\t\t},\r\n\t\t/**\r\n\t\t * 提交属性编辑并结束编辑状态。\r\n\t\t */\r\n\t\tendEdit : function(){\r\n\t\t\t//TODO\r\n\t\t}\r\n\t};\r\n\t\r\n\t\r\n\tCmp.define('Cmp.tree.TreeNode',{\r\n\t\tfactory : function(){\r\n\t\t\treturn TreeNode;\r\n\t\t}\r\n\t});\r\n}());","/**\r\n * 纵向结构树的渲染器\r\n * @class Cmp.tree.TreeView\r\n * @extend Object\r\n * \r\n * @version 2.1.0\r\n * @since 2016-05-31\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\r\n\tCmp.define('Cmp.tree.TreeView',{\r\n\t\trequires : [\r\n\t\t\t'Cmp.tree.TreeNode',\r\n\t\t\t'Cmp.tree.TreeNodeView'\r\n\t\t],\r\n\t\tfactory : function(ext, reqs){\r\n\t\t\tvar nodeClazz = reqs[0],\r\n\t\t\t\tnodeViewClazz = reqs[1];\r\n\t\t\t\r\n\t\t\tvar TreeView = function(){\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tme.nodeViews = {};\r\n\t\t\t\tme.delayClick = false;\r\n\t\t\t\t\r\n\t\t\t\tme.finishDaleyByClick = function(){\r\n\t\t\t\t\tme.delayClick = false;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t//延迟发送点击事件\r\n\t\t\t\tme.clickDaley = new Cmp.util.DelayedTask({\r\n\t\t\t\t\tdelay : 500,\t\t\t\t\r\n\t\t\t\t\thandler : me.finishDaleyByClick,\r\n\t\t\t\t\tscope : me\t\t\t\r\n\t\t\t\t});\r\n\t\t\t} \r\n\t\t\tTreeView.prototype = {\r\n\t\t\t\t\r\n\t\t\t\t/**\r\n\t\t\t\t * 在指定的容器上渲染指定树\r\n\t\t\t\t */\r\n\t\t\t\trender : function(tree, target){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.tree){\r\n\t\t\t\t\t\t//已经绘制过了\r\n\t\t\t\t\t\treturn ;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.tree = tree;\r\n\t\t\t\t\tme.treeBox = target;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(tree.useArrow){\r\n\t\t\t\t\t\ttarget.addClass('c-tree-usrarrow');\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.mask = target.createChild({\r\n\t\t\t\t\t\tcls : 'c-tree-mask'\r\n\t\t\t\t\t});\r\n\t\t\t\t\tme.mask.setHideModal('display');\r\n\t\t\t\t\tme.mask.hide();\r\n\t\t\t\t\tvar rootView = me.renderTreeNode(tree.root, me.treeBox);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(tree.hidderRoot){\r\n\t\t\t\t\t\t//隐藏了根节点，需要展开这个跟\r\n\t\t\t\t\t\trootView.node.treeLayer = -1;\r\n\t\t\t\t\t\trootView.itemBox.setStyle('display','none');\r\n\t\t\t\t\t\tme.doExtendNode(rootView);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 绘制一个节点\r\n\t\t\t\t */\r\n\t\t\t\trenderTreeNode : function(node, box){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(isO(node)){\r\n\t\t\t\t\t\tif(!isF(node.getId)){\r\n\t\t\t\t\t\t\tnode = new nodeClazz(node);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tnode.bindTree(me.tree);\r\n\t\t\t\t\t\tvar view = me.createTreeNodeView(node);\r\n\t\t\t\t\t\tview.render(box, me);\r\n\t\t\t\t\t\tme.nodeViews[node.getId()] = view;\r\n\t\t\t\t\t\treturn view;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn undefined;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 创建指定绘制指定节点的渲染器；\r\n\t\t\t\t */\r\n\t\t\t\tcreateTreeNodeView : function(node){\r\n\t\t\t\t\treturn new nodeViewClazz(node);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @public\r\n\t\t\t\t * 获得指定节点所对应的渲染器实例\r\n\t\t\t\t * @param {String/Object/TreeNode} node\r\n\t\t\t\t * @return {TreeNodeView} \r\n\t\t\t\t */\r\n\t\t\t\tgetNodeView : function(node){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(isO(node)){\r\n\t\t\t\t\t\tif(isF(node.getId)){\r\n\t\t\t\t\t\t\tnode = node.getId();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tnode = node.id;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(isS(node)){\r\n\t\t\t\t\t\treturn me.nodeViews[node];\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn undefined;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 响应树节点上的展开/收缩触发器被点击时的处理\r\n\t\t\t\t * @param {String/Object/TreeNode} node\r\n\t\t\t\t */\r\n\t\t\t\tonClickArrow : function(node){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tv = me.getNodeView(node);\r\n\t\t\t\t\tif(!v){\r\n\t\t\t\t\t\treturn ;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(v.isExtended()){\r\n\t\t\t\t\t\tme.doCollectNode(v);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tme.doExtendNode(v);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 响应点击树节点上事件\r\n\t\t\t\t */\r\n\t\t\t\tonClickNode : function(node){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tv = me.getNodeView(node);\r\n\t\t\t\t\tif(!v){\r\n\t\t\t\t\t\treturn ;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!me.delayClick){\r\n\t\t//\t\t\t\tputLog('TreeView#onClickNode>');\r\n\t\t\t\t\t\tme.delayClick = true;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar acv = me.activedView;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(acv){\r\n\t\t\t\t\t\t\tacv.unselect();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(!acv || acv.getId() !== v.getId()){\r\n\t\t\t\t\t\t\tv.select();\r\n\t\t\t\t\t\t\tme.activedView = v;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tme.activedView = undefined;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tme.tree.fireEvent('selectedchange', me.activedView ? me.activedView.node : undefined, me.tree);\r\n\t\t\t\t\t\tme.clickDaley.run();\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 响应双击树节点上事件\r\n\t\t\t\t */\r\n\t\t\t\tonDbClickNode : function(node){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tv = me.getNodeView(node);\r\n\t\t\t\t\tif(v){\r\n\t\t\t\t\t\tme.tree.fireEvent('dblclicknode', v.node, me.tree);\r\n\t\t\t\t\t}\t\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 展开指定的节点\r\n\t\t\t\t */\r\n\t\t\t\tdoExtendNode : function(nodeView, cb, scope){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tnode = nodeView.node;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(!nodeView.isRenderedForChildren()\r\n\t\t\t\t\t\t|| node.isAlwaysReload()){\r\n\t\t\t\t\t\t//没有绘制过子节点或者是需要每次都去获取子节点\r\n\t\t\t\t\t\tme.mask.show();\r\n\t\t\t\t\t\tnodeView.showLoding();\r\n\t\t\t\t\t\tnode.getChildren(function(cns){\r\n\t\t\t\t\t\t\tme.mask.hide();\r\n\t\t\t\t\t\t\tnodeView.hideLoading();\r\n\t\t\t\t\t\t\tvar box = nodeView.getChildrenBox(),\r\n\t\t\t\t\t\t\t\ti = 0,\r\n\t\t\t\t\t\t\t\tlen = isA(cns) ? cns.length : 0,\r\n\t\t\t\t\t\t\t\tcn;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t//清空之前的\r\n\t\t\t\t\t\t\tnodeView.clearChilden();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif(len > 0){\r\n\t\t\t\t\t\t\t\tfor(;i<len;i++){\r\n\t\t\t\t\t\t\t\t\tcn = me.renderTreeNode(cns[i], box);\r\n\t\t\t\t\t\t\t\t\tif(cn){\r\n\t\t\t\t\t\t\t\t\t\tnodeView.addChild(cn);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\tcn = me.renderEmptyChild(box, node.getTreeLayer());\r\n\t\t\t\t\t\t\t\tif(cn){\r\n\t\t\t\t\t\t\t\t\tnodeView.addChild(cn);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tnodeView.extend();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tme.tree.fireEvent('extendednode', node, me.tree);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif(isF(cb)){\r\n\t\t\t\t\t\t\t\tcb.call(scope);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tnodeView.extend();\r\n\t\t\t\t\t\tme.tree.fireEvent('extendednode', node, me.tree);\r\n\t\t\t\t\t\tif(isF(cb)){\r\n\t\t\t\t\t\t\tcb.call(scope);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 收缩指定的节点\r\n\t\t\t\t */\r\n\t\t\t\tdoCollectNode : function(nodeView){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tnodeView.collend();\r\n\t\t\t\t\tme.tree.fireEvent('collectednode', nodeView.node, me.tree);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 在指定的位置添加一个表示空子节点的虚拟节点；\r\n\t\t\t\t * @reutrn {Element} \r\n\t\t\t\t */\r\n\t\t\t\trenderEmptyChild : function(box, lv){\r\n\t\t\t\t\tvar me = this,el;\r\n\t\t\t\t\ts = 0.8*(lv+2)+'rem';\r\n\t\t\t\t\t\r\n\t\t\t\t\tel = box.createChild({\r\n\t\t\t\t\t\tcls : 'c-treenode c-treenode-empty',\r\n\t\t\t\t\t\thtml : '<div class=\"c-treenode-item\" style=\"padding-left:'+s+';\"><div class=\"c-treenode-warp\">空</div></div>'\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\r\n\t\t\treturn TreeView;\r\n\t\t}\r\n\t});\r\n}());","/**\r\n * 纵向结构树显示面板\r\n *\r\n * @class Cmp.tree.TreePanel\r\n * @extend Cmp.Widget\r\n * \r\n * @version 2.1.0\r\n * @since 2016-05-31\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\t/**\r\n\t * 展开树上指定的节点\r\n\t */\r\n\tvar extendNodes = function(tree, nodes){\r\n\t\tvar view = tree.getView(),\r\n\t\t\ti=0,len = nodes.length,v;\r\n\t\t\r\n\t\tfor(;i<len;i++){\r\n\t\t\tv = view.getNodeView(nodes[i]);\r\n\t\t\tif(!v || v.isExtended()){\r\n\t\t\t\t//不存在，或者是已经处于展开状态\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t//存在，并且没有展开呢；\r\n\t\t\t\tview.doExtendNode(v, function(){\r\n\t\t\t\t\textendNodes(tree, nodes);\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\t\r\n\t}\r\n\t\r\n\tCmp.define('Cmp.tree.TreePanel',{\r\n\t\textend : 'Cmp.Widget',\r\n\t\trequires : [\r\n\t\t\t'Cmp.tree.TreeView'\r\n\t\t],\r\n\t\tcls : true,\r\n\t\tfactory : function(ext, reqs){\r\n\t\t\tvar superClazz = ext.prototype,\r\n\t\t\t\ttreeViewClazz = reqs[0];\r\n\t\t\t\r\n\t\t\treturn Cmp.extend(ext, {\r\n\t\t\t\t/**\r\n\t\t\t\t * @cfg {Boolean} useArrow 等于true时使用箭头形式来表现节点的展开/收缩状态；等于false时使用加/减号来表现。\r\n\t\t\t\t *\t\t默认为false。\r\n\t\t\t\t */\r\n\t\t\t\t\r\n\t\t\t\t/**\r\n\t\t\t\t * @cfg {TreeNode/Object} root 树根节点或者是创建根节点的配置对象 \r\n\t\t\t\t */\r\n\t\t\t\t\r\n\t\t\t\t/**\r\n\t\t\t\t * @cfg {Boolean} hidderRoot 等于true时，隐藏根节点。\r\n\t\t\t\t */\r\n\t\t\t\t\r\n\t\t\t\t/**\r\n\t\t\t\t * @cfg {TreeLoader} treeLoader 子节点数据读取器; 当树上有节点为异步获取子节点时，会使用该配置。\r\n\t\t\t\t */\r\n\t\t\t\t \r\n\t\t\t\t/**\r\n\t\t\t\t * @cfg {String/Array} extendNode 初始时，需要展开的节点。\r\n\t\t\t\t *\t\t注意：因为节点可能采用的异步获取子节点的形式；因此在配置展开节点的时候，要从根向下进行配置。\r\n\t\t\t\t */ \r\n\t\t\t\t/**\r\n\t\t\t\t * 获得该树所配置的子节点数据读取器。\r\n\t\t\t\t * @return {TreeLoader} 子节点数据读取器\r\n\t\t\t\t */\r\n\t\t\t\tgetLoader : function(){\r\n\t\t\t\t\treturn this.treeLoader;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 更新指定树节点的显示内容\r\n\t\t\t\t * @parm {TreeNode/Object} node 树节点显示配置(全量)；如果是一个对象，那么必须配置有id属性；\r\n\t\t\t\t */\r\n\t\t\t\tupdateNodeView : function(node){\r\n\t\t\t\t\t//TODO\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tinitComponent : function(){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tcls = me.cls;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(isA(cls)){\r\n\t\t\t\t\t\tcls.unshift('c-tree');\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\telse if(isS(cls)){\r\n\t\t\t\t\t\tcls = ['c-tree',cls];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tcls = 'c-tree';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.cls = cls;\r\n\t\t\t\t\tsuperClazz.initComponent.call(me);\r\n\t\t\t\t\tme.addEvents(\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * 双击节点发生变化后，分发此事件\r\n\t\t\t\t\t\t * @param {TreeNode} node 双击的节点\r\n\t\t\t\t\t\t * @param {TreePanel} this\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t'dblclicknode',\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * 选中的节点发生变化后，分发此事件\r\n\t\t\t\t\t\t * @param {TreeNode} node 当前选中的节点\r\n\t\t\t\t\t\t * @param {TreePanel} this\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t'selectedchange',\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * 节点展开后，分发此事件\r\n\t\t\t\t\t\t * @param {TreeNode} node 收缩的节点\r\n\t\t\t\t\t\t * @param {TreePanel} this\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t'extendednode',\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * 节点收缩后，分发此事件\r\n\t\t\t\t\t\t * @param {TreeNode} node 收缩的节点\r\n\t\t\t\t\t\t * @param {TreePanel} this\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t'collectednode'\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 获得实际控制该部件进行渲染得树渲染其\r\n\t\t\t\t */\r\n\t\t\t\tgetView : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(!me.view){\r\n\t\t\t\t\t\tme.view = new treeViewClazz();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn me.view; \r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tdoRender : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tsuperClazz.doRender.call(me);\r\n\t\t\t\t\tvar view = me.getView();\r\n\t\t\t\t\tview.render(me, me.el);\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar ens = isS(me.extendNode) ? [me.extendNode] : me.extendNode;\r\n\t\t\t\t\tif(isA(ens) && ens.length > 0){\r\n\t\t\t\t\t\textendNodes(me, ens);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdelete me.extendNode;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 获得当前选中的树节点；\r\n\t\t\t\t */\r\n\t\t\t\tgetSelected : function(){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tv = me.getView().activedView;\r\n\t\t\t\t\tif(v){\r\n\t\t\t\t\t\treturn v.node;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\treturn undefined;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n}());","/**\r\n * 标准操作按钮实现类，按钮属于控件的一种\r\n * @class Cmp.Button\r\n * @extend Cmp.Widget\r\n * <p>\r\n * 构建按钮时可以的属性配置说明如下：\r\n * @cfg {String/Array} icon (可选)图标的CSS样式设定；如果没有设定则认为是不需要显示图标。\r\n * @cfg {String} text (可选)按钮的文字设定，如果没有设定，则认为不需要显示文字。\r\n * @cfg {String} tooltip (可选)提示文字内容\r\n * @cfg {Function} handler (可选)当点击该按钮，且按钮没有处于失效状态时；调用该方法。\r\n * @cfg {Object} scope (可选)调用handler方法时的this设定对象\r\n * @cfg {Boolean} actived (可选)等于true时为选中状态；默认为false；\r\n * @cfg {Boolean} disabled (可选)等于true时该按钮为禁用状态；否则为可用状态。默认为false。\r\n * </p>\r\n * @version 2.3.0\r\n * @since 2016-05-31\r\n * @author Jinhai\r\n */ \r\nCmp.define('Cmp.Button',{\r\n\textend : 'Cmp.Widget',\r\n\tcls : true,\r\n\t\r\n\t\r\n\tfactory : function(ext, reqs){\r\n\t\t//TODO\r\n\t\tvar SP = ext.prototype;\r\n\t\treturn Cmp.extend(ext, {\r\n\t\t\t/**\r\n\t\t\t * 重新设定显示文字。\r\n\t\t\t */\r\n\t\t\tsetText : function(text){\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tme.text = text;\r\n\t\t\t\tif(me.textBox){\r\n\t\t\t\t\tme.textBox.update(text||'');\r\n\t\t\t\t\tif(text){\r\n\t\t\t\t\t\tme.el.removeClass('c-btn-notext');\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tme.el.addClass('c-btn-notext');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * 重新设定显示的图标\r\n\t\t\t * @param {Array/String} icon 设定图标的CSS样式名，或者是样式名组成的数组。\r\n\t\t\t */\r\n\t\t\tsetIcon : function(icon){\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tif(me.icon){\r\n\t\t\t\t\tme.iconBox.removeClass(me.icon);\r\n\t\t\t\t\tif(!icon){\r\n\t\t\t\t\t\t//之前有，之后没有\r\n\t\t\t\t\t\tme.el.addClass('c-btn-noicon');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(icon){\r\n\t\t\t\t\tme.iconBox.addClass(icon);\r\n\t\t\t\t\tif(!me.icon){\r\n\t\t\t\t\t\t//之后有，之前没有\r\n\t\t\t\t\t\tme.el.removeClass('c-btn-noicon');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tme.icon = icon;\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * 将该按钮设定为选中状态\r\n\t\t\t */\r\n\t\t\tactive : function(){\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tif(!me.actived){\r\n\t\t\t\t\tme.el.setAttribute('actived', 'actived');\r\n\t\t\t\t}\r\n\t\t\t\tme.actived = true;\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * 将该按钮设定为非选中状态\r\n\t\t\t */\r\n\t\t\tunactive : function(){\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tif(me.actived){\r\n\t\t\t\t\tme.el.removeAttribute('actived');\r\n\t\t\t\t}\r\n\t\t\t\tme.actived = false;\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * 将按钮置为可用状态\r\n\t\t\t */\r\n\t\t\tenable : function(){\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tif(me.disabled){\r\n\t\t\t\t\tme.disabled = false;\r\n\t\t\t\t\tif(me.el){\r\n\t\t\t\t\t\tme.el.removeClass('c-btn-disabled');\r\n\t\t\t\t\t\tme.el.dom.disabled = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * 将按钮置为不可用状态\r\n\t\t\t */\r\n\t\t\tdisable : function(){\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tif(!me.disabled){\r\n\t\t\t\t\tme.disabled = true;\r\n\t\t\t\t\tif(me.el){\r\n\t\t\t\t\t\tme.el.addClass('c-btn-disabled');\r\n\t\t\t\t\t\tme.el.dom.disabled = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * 设定按钮的提示信息\r\n\t\t\t * @param {String} tooltip 提示信息文字\r\n\t\t\t */\r\n\t\t\tsetTooltip : function(tooltip){\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tif(me.el){\r\n\t\t\t\t\tme.el.setAttribute('title', tooltip || '');\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tme.tooltip = tooltip;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * @private\r\n\t\t\t * @overwrite\r\n\t\t\t */\r\n\t\t\tinitComponent : function(){\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tSP.initComponent.call(me);\r\n\t\t\t\tme.tagName = 'button';\r\n\t\t\t\tvar cls = ['c-btn'];\r\n\t\t\t\tif(isS(me.cls)){\r\n\t\t\t\t\tcls.push(me.cls);\r\n\t\t\t\t}\r\n\t\t\t\telse if(isA(me.cls)){\r\n\t\t\t\t\tcls = cls.concat(me.cls);\r\n\t\t\t\t}\r\n\t\t\t\tme.cls = cls;\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * @private\r\n\t\t\t * @overwrite\r\n\t\t\t */\r\n\t\t\tdoRender : function(){\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tSP.doRender.call(me);\r\n\t\t\t\tme.el.setHideModal('display');\r\n\t\t\t\tme.iconBox = me.el.createChild({\r\n\t\t\t\t\ttag : 'i'\r\n\t\t\t\t});\r\n\t\t\t\tif(me.icon){\r\n\t\t\t\t\tme.iconBox.addClass(me.icon);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tme.el.addClass('c-btn-noicon');\r\n\t\t\t\t}\r\n\t\t\t\tme.textBox = me.el.createChild({\r\n\t\t\t\t\ttag : 'b',\r\n\t\t\t\t\tcls : me.textCls || undefined\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tif(me.text){\r\n\t\t\t\t\tme.textBox.update(me.text);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tme.el.addClass('c-btn-notext');\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(me.tooltip){\r\n\t\t\t\t\tme.el.setAttribute('title', me.tooltip);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(isS(me.btnCls) || isA(me.btnCls)){\r\n\t\t\t\t\tme.el.addClass(me.btnCls);\r\n\t\t\t\t}\r\n\t\t\t\tme.disabled = !!me.disabled;\r\n\t\t\t\tif(me.disabled){\r\n\t\t\t\t\tme.el.addClass('c-btn-disabled');\r\n\t\t\t\t\tme.el.dom.disabled = true;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tme.actived = !!me.actived;\r\n\t\t\t\tif(me.actived){\r\n\t\t\t\t\tme.el.setAttribute('actived', true);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tme.el.on('click', me.onClickButton, me);\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * 响应点击按钮时的处理逻辑\r\n\t\t\t */\r\n\t\t\tonClickButton : function(){\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tif(!me.disabled && isF(me.handler)){\r\n\t\t\t\t\tme.handler.call(me.scope || me, me);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n});","/**\r\n * @class Cmp.Contaner\r\n * @extend Cmp.Widget\r\n * 容器基准类\r\n * <p>\r\n * 容器指的是可以容纳其他部件并且使用布局器负责绘制布局的通用部件。\r\n * 容器内的各个子部件是依靠使用布局管理器来进行绘制的；\r\n * \r\n * \r\n * <p>\r\n * 构建按钮时可以的属性配置说明如下：\r\n * @cfg {String|Layout} layout (可选)容器的布局控制器实例或者是通过可以通过Cmp.require方法获得一个布局管理器构造方法的模块标识字串。\r\n * @cfg {Object} layoutConfig (可选)设定的layout属性为一个字符串时有效；创建布局控制器实例时的配置对象；\r\n * @cfg {Widget|Object|Array} items (可选)部件{Widget}实例或者是可以通过Cmp.create方法创建部件{Widget}实例的对象，或对象数组。\r\n * </p>\r\n * \r\n * @version 2.0.0\r\n * @since 2016-03-31\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\r\n\tCmp.define('Cmp.Contaner',{\r\n\t\textend : 'Cmp.Widget',\r\n\t\trequires : [\r\n\t\t\t'Cmp.layout.Layout'\r\n\t\t],\r\n\t\tfactory : function(ext, reqs){\r\n\t\t\tvar superClazz = ext.prototype,\r\n\t\t\t\tlayoutClazz = reqs[0];\r\n\t\t\t\r\n\t\t\treturn Cmp.extend(ext, {\r\n\t\t\t\t/**\r\n\t\t\t\t * @public\r\n\t\t\t\t * 获得指定位置上的显示部件;如果还没有绘制，则返回undefined;\r\n\t\t\t\t * @param {Number} index\r\n\t\t\t\t * @return {Widget}\r\n\t\t\t\t */\r\n\t\t\t\tgetItemAt : function(index){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.layoutReady){\r\n\t\t\t\t\t\treturn me.getLayout().getItemAt(index);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\treturn undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 获得容器上显示部件的数量;\r\n\t\t\t\t * 如果还没有绘制，则返回配置数量；否则返回实际绘制的数量。\r\n\t\t\t\t */\r\n\t\t\t\tgetItemCount : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.layoutReady){\r\n\t\t\t\t\t\treturn me.getLayout().getItemCount();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\treturn isA(me.items) ? me.items.length : 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @public\r\n\t\t\t\t * 增加一个显示部件\r\n\t\t\t\t * @param {Widget/Object} item 部件实例或者可以一个部件的初始化配置对象。\r\n\t\t\t\t * @return {Contaner} this\r\n\t\t\t\t */\r\n\t\t\t\taddItem : function(item){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.layoutReady){\r\n\t\t\t\t\t\treturn me.getLayout().appendItem(item);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tif(isA(me.items)){\r\n\t\t\t\t\t\t\tme.items.push(item);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if(isO(me.items)){\r\n\t\t\t\t\t\t\tme.items = [me.items, item];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tme.items = [item];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @public\r\n\t\t\t\t * 根据索引值删除容器中的一个显示部件。\r\n\t\t\t\t * @param {Number} index 索引值，\r\n\t\t\t\t * @return {Boolean} 如果成功删除，则返回true。\r\n\t\t\t\t */\r\n\t\t\t\tremoveItemAt : function(index){\r\n\t\t\t\t\treturn this.getLayout().removeItem(index);\t\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tinitComponent : function(){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tly = me.layout;\r\n\t\t\t\t\tsuperClazz.initComponent.call(me);\r\n\t\t\t\t\tme.layoutReady = false;\r\n\t\t\t\t\t//创建布局管理器\r\n\t\t\t\t\tif(isS(ly)){\r\n\t\t\t\t\t\t//布局的模块标识\r\n\t\t\t\t\t\tCmp.require(ly, function(clz){\r\n\t\t\t\t\t\t\tif(isF(clz)){\r\n\t\t\t\t\t\t\t\tvar lyo = new clz(me.layoutConfig || {});\r\n\t\t\t\t\t\t\t\tif(isF(lyo.layout)){\r\n\t\t\t\t\t\t\t\t\tme.layout = lyo;\r\n\t\t\t\t\t\t\t\t\tme.layoutReady = true;\r\n\t\t\t\t\t\t\t\t\tme.fireLayoutReady();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\t\tputLog('根据名称获得的布局管理器，没有实现布局方法,将使用默认的；设定的管理器名称：'+JSON.stringify(ly));\r\n\t\t\t\t\t\t\t\t\tme.layout = new layoutClazz(me.layoutConfig || {});\r\n\t\t\t\t\t\t\t\t\tme.layoutReady = true;\r\n\t\t\t\t\t\t\t\t\tme.fireLayoutReady();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\tputLog('无法获取指定的布局管理器,将使用默认的；设定的管理器标识名：'+ly);\r\n\t\t\t\t\t\t\t\tme.layout = new layoutClazz(me.layoutConfig || {});\r\n\t\t\t\t\t\t\t\tme.layoutReady = true;\r\n\t\t\t\t\t\t\t\tme.fireLayoutReady();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(isO(ly)){\r\n\t\t\t\t\t\tif(isF(ly.layout)){\r\n\t\t\t\t\t\t\tme.layout = ly;\r\n\t\t\t\t\t\t\tme.layoutReady = true;\r\n\t\t\t\t\t\t\tme.fireLayoutReady();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tCmp.create(ly, function(lyo){\r\n\t\t\t\t\t\t\t\tif(isF(lyo.layout)){\r\n\t\t\t\t\t\t\t\t\tme.layout = lyo;\r\n\t\t\t\t\t\t\t\t\tme.layoutReady = true;\r\n\t\t\t\t\t\t\t\t\tme.fireLayoutReady();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\t\tputLog('无法获取指定的布局管理器,将使用默认的；设定的管理器：'+JSON.stringify(ly));\r\n\t\t\t\t\t\t\t\t\tme.layout = new layoutClazz(me.layoutConfig || {});\r\n\t\t\t\t\t\t\t\t\tme.layoutReady = true;\r\n\t\t\t\t\t\t\t\t\tme.fireLayoutReady();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 获取该容器在绘制子部件的承载Element\r\n\t\t\t\t */\r\n\t\t\t\tgetLayoutTarget : function(){\r\n\t\t\t\t\treturn this.el;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 获得当前使用的布局管理器；\r\n\t\t\t\t * @return {Layout} 当前使用的布局管理器。\r\n\t\t\t\t */\r\n\t\t\t\tgetLayout : function(){\r\n\t\t\t\t\treturn this.layout;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @rewrite\r\n\t\t\t\t */\r\n\t\t\t\tdoRender : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tsuperClazz.doRender.call(me);\r\n\t\t\t\t\tif(me.layoutReady){\r\n\t\t\t\t\t\tme.doLayout();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tme.onReadyCreateLayout(me.doLayout, me);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t */\r\n\t\t\t\tdoLayout : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tme.getLayout().layout(me);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t */\t\r\n\t\t\t\tonReadyCreateLayout : function(fn, scope){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.layoutReady){\r\n\t\t\t\t\t\tCmp.invoke(fn, scope);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tif(!me.readLayoutListeners){\r\n\t\t\t\t\t\t\tme.readLayoutListeners = [];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tme.readLayoutListeners.push({\r\n\t\t\t\t\t\t\tfn : fn,\r\n\t\t\t\t\t\t\tscope : scope\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}, \r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t */\r\n\t\t\t\tfireLayoutReady : function(){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\ti = 0, o,\r\n\t\t\t\t\t\tlen = isA(me.readLayoutListeners) ? me.readLayoutListeners.length : 0;\r\n\t\t\t\t\tfor(;i<len;i++){\r\n\t\t\t\t\t\to = me.readLayoutListeners[i];\r\n\t\t\t\t\t\tCmp.invoke(o.fn, o.scope);\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t});\t\r\n\t\t}\r\n\t});\r\n}());","/**\r\n * @class Cmp.DateList\r\n * @extend Cmp.Widget\r\n * 日历展示列表\r\n * \r\n * <p>\r\n * 构建时可以的属性配置说明如下：\r\n * @cfg {Date} value 初始时选中的日期； \r\n * @cfg {Date} minValue 允许设定的最小日期值，在没有设定的时候，默认为: 1970年1月1日\r\n * @cfg {Date} maxValue 允许设定的最大日期值，在没有设定的时候，默认为: 2099年12月31日\r\n * </p>\r\n * \r\n * @version 1.0.0\r\n * @since 2016-05-31\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\r\n\tvar DATALIST_BOX_HTML = [],\r\n\t\tMONTH_TEXT = [\r\n\t\t\t'一月','二月','三月','四月',\r\n\t\t\t'五月','六月','七月','八月',\r\n\t\t\t'九月','十月','十一','十二'\r\n\t\t];\r\n\t\r\n\t/**\r\n\t * 获得在某月的天数\r\n\t * @param {Number} year (必须)年份值，如：2016\r\n\t * @param {Number} month (必须)月份值，取值范围：0~11，\r\n\t */\t\r\n\tvar getDaysOfMonth = function(year, month){\r\n\t\tswitch(month){\r\n\t\t\t//四月\r\n\t\t\tcase 3:\r\n\t\t\t//六月\r\n\t\t\tcase 5:\r\n\t\t\t//九月\r\n\t\t\tcase 8:\r\n\t\t\t//十一月\r\n\t\t\tcase 10:\r\n\t\t\t\treturn 30;\r\n\t\t\tcase 1:\r\n\t\t\t\tif(0 === year % 400 || (0 !== year % 100 && 0 === year % 4)){\r\n\t\t\t\t\t//闰年\r\n\t\t\t\t\treturn 29;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\t//平年\r\n\t\t\t\t\treturn 28;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\tdefault :\r\n\t\t\t\treturn 31\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tvar buildDayRow = function(rowClss){\r\n\t\tvar html = [];\r\n\t\thtml.push('<div class=\"c-datelist-row ');\r\n\t\thtml.push(rowClss);\r\n\t\thtml.push('\">');\r\n\t\thtml.push('<div class=\"c-datelist-cell\"><span class=\"c-datelist-cell-inner c-datelist-sun\">日</span></div>');\r\n\t\thtml.push('<div class=\"c-datelist-cell\"><span class=\"c-datelist-cell-inner c-datelist-mon\">一</span></div>');\r\n\t\thtml.push('<div class=\"c-datelist-cell\"><span class=\"c-datelist-cell-inner c-datelist-tue\">二</span></div>');\r\n\t\thtml.push('<div class=\"c-datelist-cell\"><span class=\"c-datelist-cell-inner c-datelist-wed\">三</span></div>');\r\n\t\thtml.push('<div class=\"c-datelist-cell\"><span class=\"c-datelist-cell-inner c-datelist-thu\">四</span></div>');\r\n\t\thtml.push('<div class=\"c-datelist-cell\"><span class=\"c-datelist-cell-inner c-datelist-fri\">五</span></div>');\r\n\t\thtml.push('<div class=\"c-datelist-cell\"><span class=\"c-datelist-cell-inner c-datelist-sat\">六</span></div>');\r\n\t\t\r\n\t\thtml.push('</div>');\r\n\t\treturn html.join('');\r\n\t}\r\n\t\r\n\tvar html = [];\t\r\n\t//HEAD Start\r\n\thtml.push('<div class=\"c-datelist-head\">');\r\n\thtml.push('<div class=\"c-datelist-head-left\">');\r\n\thtml.push('<div class=\"c-datelist-headbtn fa fa-fast-backward\" title=\"上一年\"></div>');\r\n\thtml.push('<div class=\"c-datelist-headbtn fa fa-step-backward\" title=\"上一月\"></div>');\r\n\thtml.push('</div>');\r\n\thtml.push('<div class=\"c-datelist-head-center\"></div>');\r\n\thtml.push('<div class=\"c-datelist-head-right\">');\r\n\thtml.push('<div class=\"c-datelist-headbtn fa fa-fast-forward\" title=\"下一年\"></div>');\r\n\thtml.push('<div class=\"c-datelist-headbtn fa fa-step-forward\" title=\"下一月\"></div>');\r\n\thtml.push('</div></div>');\r\n\t//HEAD End\r\n\t//BODY Start\r\n\thtml.push('<div class=\"c-datelist-body\">');\r\n\t//一个表示星期的标头\r\n\thtml.push(buildDayRow('c-datelist-week'));\r\n\t//7行日期\r\n\tfor(var i=0; i<6;i++){\r\n\t\thtml.push(buildDayRow('c-datelist-day'));\r\n\t}\r\n\thtml.push('</div>');\r\n\t//BODY End\r\n\tDATALIST_BOX_HTML = html.join('');\r\n\t\r\n\t/**\r\n\t * 呈现日期的按钮\r\n\t */\r\n\tvar DayButtom = function(dom, handler, scope){\r\n\t\tvar me = this;\r\n\t\tme.el = Cmp.get(dom);\r\n\t\tme.textEl = Cmp.get(dom.firstChild);\r\n\t\tme.disabled = false;\r\n\t\tme.selected = false;\r\n\t\tme.currentMonth = true;\r\n\t\tme.handler = handler;\r\n\t\tme.scope = scope;\r\n\t\t\r\n\t\tme.el.on('click', me.onClick, me);\r\n\t};\r\n\t\r\n\tDayButtom.prototype = {\r\n\t\t/**\r\n\t\t * 设定日期值\r\n\t\t * @param {Array} day 格式为：[year,month,dayOfMonth]的日期值\r\n\t\t * @param {Boolean} noCurrentMonth 等于true时，使用非当前月的显示模式\r\n\t\t * @param {Array} nowDay 格式为：[year,month,dayOfMonth]的当前日期值\r\n\t\t */\r\n\t\tsetValue : function(day, noCurrentMonth, nowDay){\r\n\t\t\tvar me = this,\r\n\t\t\t\tt = day[2];\r\n\t\t\t\t\r\n\t\t\tif(t < 10){\r\n\t\t\t\tt = '0'+t;\r\n\t\t\t}\t\r\n\t\t\tme.textEl.update(t);\r\n\t\t\tme.value = day;\r\n\t\t\tif(!!noCurrentMonth && true === me.currentMonth){\r\n\t\t\t\tme.el.addClass('c-datelist-nocurrent');\r\n\t\t\t\tme.currentMonth = false;\r\n\t\t\t}\r\n\t\t\telse if(!noCurrentMonth && false === me.currentMonth){\r\n\t\t\t\tme.el.removeClass('c-datelist-nocurrent');\r\n\t\t\t\tme.currentMonth = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(day[0] === nowDay[0]\r\n\t\t\t\t&& day[1] === nowDay[1]\r\n\t\t\t\t&& day[2] === nowDay[2]){\r\n\t\t\t\tme.el.addClass('c-datelist-today');\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tme.el.removeClass('c-datelist-today');\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * 返回true表示当前按钮为选中状态\r\n\t\t */\r\n\t\tisSelected : function(){\r\n\t\t\treturn !!this.selected;\r\n\t\t},\r\n\t\t/**\r\n\t\t * 将该按钮呈现为选中状态\r\n\t\t */\r\n\t\tselect : function(){\r\n\t\t\tvar me = this;\r\n\t\t\tif(!me.isSelected()){\r\n\t\t\t\tme.el.addClass('c-datelist-selected');\r\n\t\t\t\tme.selected = true;\r\n\t\t\t}\r\n\t\t\r\n\t\t},\r\n\t\t/**\r\n\t\t * 将该按钮呈现为非选中状态\r\n\t\t */\r\n\t\tunselect : function(){\r\n\t\t\tvar me = this;\r\n\t\t\tif(me.isSelected()){\r\n\t\t\t\tme.el.removeClass('c-datelist-selected');\r\n\t\t\t\tme.selected = false;\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * 返回true表示当前为失效状态。\r\n\t\t */\r\n\t\tisDisabled : function(){\r\n\t\t\treturn !!this.disabled;\r\n\t\t},\r\n\t\t/**\r\n\t\t * 禁用该按钮，不再响应点击事件。\r\n\t\t */\r\n\t\tdisable : function(){\r\n\t\t\tvar me = this;\r\n\t\t\tif(!me.isDisabled()){\r\n\t\t\t\tme.el.addClass('c-datelist-btn-disabled');\r\n\t\t\t\tme.el.setAttribute('disabled', true);\r\n\t\t\t\tme.disabled = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * 激活该按钮，开始响应点击事件。\r\n\t\t */\r\n\t\tenable : function(){\r\n\t\t\tvar me = this;\r\n\t\t\tif(me.isDisabled()){\r\n\t\t\t\tme.el.removeClass('c-datelist-btn-disabled');\r\n\t\t\t\tme.el.removeAttribute('disabled');\r\n\t\t\t\tme.disabled = false;\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tonClick : function(){\r\n\t\t\tvar me = this;\r\n\t\t\tif(!me.isDisabled() && isF(me.handler)){\r\n\t\t\t\tme.handler.call(me.scope, me.value, me);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\t/**\r\n\t * 比较两个日期，如果d1大于d2则返回正数；小于返回负数相等返回0\r\n\t * @param {Array} d1 格式如[year,month,day]的日期数据\r\n\t * @param {Array} d2 格式如[year,month,day]的日期数据\r\n\t */\r\n\tvar compareOfDay = function(d1, d2){\r\n\t\tfor(var i=0,v;i<3;i++){\r\n\t\t\tv = d1[i] - d2[i];\r\n\t\t\tif(v != 0){\r\n\t\t\t\treturn v;\r\n\t\t\t}\t\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n/**\r\n\t * 为指定的Dom对象绑定上类似于Button那样的功能方法。\r\n\t * @param {HTMLElement} dom\r\n\t * @param {Function} handler 点击时触发方法\r\n\t * @param {Object} value 绑定的值\r\n\t */\r\n\tvar buildBtnObject = function(dom, handler, value){\r\n\t\tvar me = this,\r\n\t\t\trel = {\r\n\t\t\t\tel : Cmp.get(dom),\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\thandler : handler,\r\n\t\t\t\tscope : me,\r\n\t\t\t\tvalue : value\r\n\t\t\t};\r\n\t\t\r\n\t\trel.el.on('click', function(){\r\n\t\t\tif(false === rel.disabled){\r\n\t\t\t\trel.handler.call(rel.scope || me, rel.value);\r\n\t\t\t}\r\n\t\t});\t\r\n\t\t\r\n\t\trel.disable = function(){\r\n\t\t\tif(false === rel.disabled){\r\n\t\t\t\trel.el.addClass('c-datelist-headbtn-disabled');\r\n\t\t\t\trel.disabled = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\trel.enable = function(){\r\n\t\t\tif(true === rel.disabled){\r\n\t\t\t\trel.el.removeClass('c-datelist-headbtn-disabled');\r\n\t\t\t\trel.disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn rel;\r\n\t}\r\n\t\r\n\t/** \r\n\t * 创建日期按钮\r\n\t */\r\n\tvar buildDayBtn = function(dom){\r\n\t\tvar me = this;\r\n\t\treturn new DayButtom(dom, me.onClickDayBtn, me);\r\n\t}\r\n\t\r\n\t/**\r\n\t * 刷新组件显示内容\r\n\t * @param {Number} year (必须)年份值，如：2016\r\n\t * @param {Number} month (必须)月份值，取值范围：0~11\r\n\t */\r\n\tvar refreshCmps = function(year, month){\r\n\t\tvar me = this,\r\n\t\t\tcmps = me.cmps,\r\n\t\t\tdayBtns = cmps.dayBtns,\r\n\t\t\tminDay = [me.minYear,me.minMonth,me.minDay],\r\n\t\t\tmaxDay = [me.maxYear,me.maxMonth,me.maxDay],\r\n\t\t\tnowDay = new Date();\r\n\t\tnowDay = [\r\n\t\t\tnowDay.getFullYear(),\r\n\t\t\tnowDay.getMonth(),\r\n\t\t\tnowDay.getDate()\r\n\t\t];\t\r\n\t\tvar setSelectedStatus = function(btn, dv){\r\n\t\t\tif(!me.value){\r\n\t\t\t\tbtn.unselect();\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tvar y = me.value.getFullYear(),\r\n\t\t\t\t\tm = me.value.getMonth(),\r\n\t\t\t\t\td = me.value.getDate();\r\n\t\t\t\t\r\n\t\t\t\tif(dv[0] === y && dv[1] === m && dv[2] === d){\r\n\t\t\t\t\tbtn.select();\r\n\t\t\t\t}\t\r\n\t\t\t\telse{\r\n\t\t\t\t\tbtn.unselect();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar setDisabledStatus = function(btn, dv){\r\n\t\t\tvar y = dv[0],m=dv[1],d = dv[2];\r\n\t\t\tif(compareOfDay(minDay, dv) < 1 \r\n\t\t\t\t&& compareOfDay(maxDay, dv) > -1){\r\n\t\t\t\tbtn.enable();\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tbtn.disable();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t//切换前一年的状态\r\n\t\tif(me.minYear === year){\r\n\t\t\tcmps.forwardYearBtn.disable();\r\n\t\t\tif(me.minMonth >= month){\r\n\t\t\t\tcmps.forwardMonthBtn.disable();\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tcmps.forwardMonthBtn.enable();\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(me.minYear > year){\r\n\t\t\tcmps.forwardYearBtn.disable();\r\n\t\t\tcmps.forwardMonthBtn.disable();\r\n\t\t}\r\n\t\telse{\r\n\t\t\tcmps.forwardYearBtn.enable();\r\n\t\t\tcmps.forwardMonthBtn.enable();\r\n\t\t}\r\n\t\t\r\n\t\t//切换后一年的状态\r\n\t\tif(me.maxYear > year){\r\n\t\t\tcmps.nextYearBtn.enable();\r\n\t\t\tcmps.nextMonthBtn.enable();\r\n\t\t}\r\n\t\telse if(me.maxYear === year){\r\n\t\t\tcmps.nextYearBtn.disable();\r\n\t\t\tif(me.maxMonth <= month){\r\n\t\t\t\tcmps.nextMonthBtn.disable();\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tcmps.nextMonthBtn.enable();\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tcmps.nextYearBtn.disable();\r\n\t\t\tcmps.nextMonthBtn.disable();\r\n\t\t}\r\n\t\t\r\n\t\t//刷新当前月份提示\r\n\t\tcmps.currentMonthBox.update(year+'年,'+(month+1)+'月');\r\n\t\t\r\n\t\t//刷新日期\t\t\r\n\t\tvar monthFirstDay = new Date(year, month, 1), //当前月的第一天。\r\n\t\t \tdayOfWeek = monthFirstDay.getDay(),//当前月的第一天的周中日;\r\n\t\t \t//上月的年份值，月份值\r\n\t\t \t//下一个月的年份值，月份值\r\n\t\t \tly,lm,\r\n\t\t \tstartDay, //日期列表中第一个位置的日期值\r\n\t\t \t//每月的天数\r\n\t\t \tmds,\r\n\t\t \tix,i,len,di,d;\r\n\t\t \r\n\t\t dayOfWeek = dayOfWeek == 0 ? 7 : dayOfWeek;\r\n\t\t \t\r\n\t\t //上一个月\r\n\t\t if(month > 0){\r\n\t\t \tly = year,\r\n\t\t \tlm = month-1;\r\n\t\t }\r\n\t\t else{\r\n\t\t \tly = year-1;\r\n\t\t \tlm = 11;\r\n\t\t }\r\n\t\t \r\n\t\t //上一个月的\r\n\t\t mds = getDaysOfMonth(ly, lm);\t\r\n\t\t startDay = mds - dayOfWeek;\r\n\t\t for(i=0,len = dayOfWeek; i < len; i++){\r\n\t\t \tdi = dayBtns[i];\r\n\t\t \td = [ly,lm,startDay+1+i];\r\n\t\t \tdi.setValue(d, true, nowDay);\r\n\t\t \tsetSelectedStatus(di, d);\r\n\t\t \tsetDisabledStatus(di, d);\r\n\t\t }\r\n\t\t \r\n\t\t //当前月\r\n\t\t mds = getDaysOfMonth(year, month);\t\r\n\t\t for(i=0, len = mds; i<len;i++){\r\n\t\t \tix = dayOfWeek+i;\r\n\t\t \tdi = dayBtns[ix];\r\n\t\t \td = [year, month,i+1];\r\n\t\t \tdi.setValue(d, false, nowDay);\r\n\t\t \tsetSelectedStatus(di, d);\r\n\t\t \tsetDisabledStatus(di, d);\r\n\t\t }\r\n\t\t \r\n\t\t //下一个月\r\n\t\t if(month == 11){\r\n\t\t \tly = year+1,lm = 0;\r\n\t\t }\r\n\t\t else{\r\n\t\t \tly = year,lm = month+1;\r\n\t\t }\r\n\t\t len = mds+dayOfWeek;\r\n\t\t if(dayBtns.length > len){\r\n\t\t \ti = len, len = dayBtns.length,ix=1;\r\n\t\t \tfor(;i<len;i++,ix++){\r\n\t\t \t\tdi = dayBtns[i];\r\n\t\t \t\td = [ly,lm,ix];\r\n\t\t \t\tdi.setValue(d, true, nowDay);\r\n\t\t \t\tsetSelectedStatus(di, d);\r\n\t\t\t \tsetDisabledStatus(di, d);\r\n\t\t \t}\r\n\t\t }\r\n\t}//End refreshCmps Function\t\t\r\n\r\n\tCmp.define('Cmp.DateList',{\r\n\t\textend : 'Cmp.Widget',\r\n\t\tcls : true,\r\n\t\tfactory : function(ext, reqs){\r\n\t\t\tvar superClazz = ext.prototype;\r\n\t\t\t\r\n\t\t\treturn Cmp.extend(ext, {\r\n\t\t\t\t/**\r\n\t\t\t\t * 设定选中的时间\r\n\t\t\t\t * @param {Data} date 时间对象；如果不设定，则说明没有被选中的。\r\n\t\t\t\t * @param {Boolean} refresh 等于true时会强制刷新;\r\n\t\t\t\t */\r\n\t\t\t\tsetValue : function(date, refresh){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.value === date && !refresh){\r\n\t\t\t\t\t\treturn ;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.value = date;\r\n\t\t\t\t\tif(me.cmps){\r\n\t\t\t\t\t\tvar y,m;\r\n\t\t\t\t\t\tif(isD(date)){\r\n\t\t\t\t\t\t\ty = date.getFullYear();\r\n\t\t\t\t\t\t\tm = date.getMonth();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tdate = new Date();\r\n\t\t\t\t\t\t\ty = date.getFullYear();\r\n\t\t\t\t\t\t\tm = date.getMonth();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tme.currentYear = y;\r\n\t\t\t\t\t\tme.currentMonth = m;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\trefreshCmps.call(me, y, m);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @public\r\n\t\t\t\t * 设定取值范围\r\n\t\t\t\t * @param {Date} min 最早日期设定，默认为: 1970年1月1日\r\n\t\t\t\t * @param {Date} max 最晚日期设定，默认为: 2099年12月31日\r\n\t\t\t\t */\r\n\t\t\t\tsetValueRange : function(min, max){\r\n\t\t\t\t\tvar me = this,v;\r\n\t\t\t\t\tif(isD(min) && isD(max)){\r\n\t\t\t\t\t\tif(min.getTime() > max.getTime()){\r\n\t\t\t\t\t\t\tv = min;\r\n\t\t\t\t\t\t\tmin = max;\r\n\t\t\t\t\t\t\tmax = v;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!isD(min)){\r\n\t\t\t\t\t\tme.minYear = 1970;\r\n\t\t\t\t\t\tme.minMonth = 0;\r\n\t\t\t\t\t\tme.minDay = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tme.minYear = min.getFullYear();\r\n\t\t\t\t\t\tme.minMonth = min.getMonth();\r\n\t\t\t\t\t\tme.minDay = min.getDate();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!isD(max)){\r\n\t\t\t\t\t\tme.maxYear = 2099;\r\n\t\t\t\t\t\tme.maxMonth = 11;\r\n\t\t\t\t\t\tme.maxDay = 31;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tme.maxYear = max.getFullYear();\r\n\t\t\t\t\t\tme.maxMonth = max.getMonth();\r\n\t\t\t\t\t\tme.maxDay = max.getDate();\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tinitComponent : function(){\r\n\t\t\t\t\tvar me = this,v = me.cls;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(isA(v)){\r\n\t\t\t\t\t\tv.unshift('c-datelist');\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(isS(v)){\r\n\t\t\t\t\t\tv = ['c-datelist', v];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tv = 'c-datelist';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.cls = v;\r\n\t\t\t\t\tsuperClazz.initComponent.call(me);\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.setValueRange(me.minValue, me.maxValue);\r\n\t\t\t\t\tdelete me.minValue;\r\n\t\t\t\t\tdelete me.maxValue;\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.addEvents(\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * 点击当前月的日期按钮时，分发此事件\r\n\t\t\t\t\t\t * @param {Date} day 点中日期的数据对象\r\n\t\t\t\t\t\t * @return {Boolean} 返回false将不会进行更新选中日期的操作，同时也不会在分发'selectedchanged'事件\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t'clickday',\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * 当通过鼠标选中日期，且不与之前设定的日期一样的时候，分发此事件。\r\n\t\t\t\t\t\t * @param {Date} day 选择后的日期数据对象\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t'selectedchanged'\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tdoRender : function(){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tbox,dom,subDoms,el,\r\n\t\t\t\t\t\tcmps = {};\r\n\t\t\t\t\tsuperClazz.doRender.call(me);\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tel = me.el.createChild({\r\n\t\t\t\t\t\tcls : 'c-datelist-box',\r\n\t\t\t\t\t\thtml : DATALIST_BOX_HTML\r\n\t\t\t\t\t});\r\n\t\t\t\t\tme.el.createChild({\r\n\t\t\t\t\t\tcls : 'c-datelist-arrow'\r\n\t\t\t\t\t});\r\n\t\t\t\t\tdom = el.dom.firstChild;\r\n\t\t\t\t\tsubDoms = dom.childNodes;\r\n\t\t\t\t\tcmps.forwardYearBtn = buildBtnObject.call(me, subDoms[0].firstChild, me.onClickForwardYear);\r\n\t\t\t\t\tcmps.forwardMonthBtn = buildBtnObject.call(me, subDoms[0].childNodes[1],me.onClickForwardMonth);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcmps.currentMonthBox = Cmp.get(subDoms[1]);\r\n\t\t\t\t\tcmps.nextYearBtn = buildBtnObject.call(me, subDoms[2].firstChild, me.onClickNextYear);\r\n\t\t\t\t\tcmps.nextMonthBtn = buildBtnObject.call(me, subDoms[2].childNodes[1], me.onClickNextMonth);\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t//\r\n\t\t\t\t\tdom = el.dom.childNodes[1];\r\n\t\t\t\t\tsubDoms = dom.childNodes;\r\n\t\t\t\t\tvar i=1,j,sd,dayBtns = [],row;\r\n\t\t\t\t\tfor(;i<7;i++){\r\n\t\t\t\t\t\trow = subDoms[i];\r\n\t\t\t\t\t\tsd = row.childNodes;\r\n\t\t\t\t\t\tfor(j=0;j<7;j++){\r\n\t\t\t\t\t\t\tdayBtns.push(buildDayBtn.call(me, sd[j]));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcmps.dayBtns = dayBtns;\r\n\t\t\t\t\tme.cmps = cmps;\r\n\t\t\t\t\tvar v = me.value;\r\n\t\t\t\t\tme.value = false;\r\n\t\t\t\t\tme.setValue(v);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 刷新到上一年同一个月\r\n\t\t\t\t */\r\n\t\t\t\tonClickForwardYear : function(){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\ty = me.currentYear-1,\r\n\t\t\t\t\t\tm = me.currentMonth;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tif(me.minYear === y && me.minMonth > m){\r\n\t\t\t\t\t\tm = me.minMonth;\r\n\t\t\t\t\t} \t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tme.currentYear = y;\r\n\t\t\t\t\tme.currentMonth = m;\r\n\t\t\t\t\trefreshCmps.call(me, y, m);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 刷新到上一个月\r\n\t\t\t\t */\r\n\t\t\t\tonClickForwardMonth : function(){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\ty,m;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(0 === me.currentMonth){\r\n\t\t\t\t\t\tm = 11;\r\n\t\t\t\t\t\ty = me.currentYear-1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tm = me.currentMonth-1;\r\n\t\t\t\t\t\ty = me.currentYear;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.currentYear = y;\r\n\t\t\t\t\tme.currentMonth = m;\r\n\t\t\t\t\trefreshCmps.call(me, y, m);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 刷新到下一年同一个月\r\n\t\t\t\t */\r\n\t\t\t\tonClickNextYear : function(){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\ty = me.currentYear+1,\r\n\t\t\t\t\t\tm = me.currentMonth;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(me.maxYear === y && me.maxMonth < m){\r\n\t\t\t\t\t\tm = me.maxMonth;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tme.currentYear = y;\r\n\t\t\t\t\tme.currentMonth = m;\r\n\t\t\t\t\trefreshCmps.call(me, y, m);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 刷新到下一个月\r\n\t\t\t\t */\r\n\t\t\t\tonClickNextMonth : function(){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\ty,m;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(11 === me.currentMonth){\r\n\t\t\t\t\t\tm = 0;\r\n\t\t\t\t\t\ty = me.currentYear+1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tm = me.currentMonth+1;\r\n\t\t\t\t\t\ty = me.currentYear;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.currentYear = y;\r\n\t\t\t\t\tme.currentMonth = m;\r\n\t\t\t\t\trefreshCmps.call(me, y, m);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 切换日期\r\n\t\t\t\t * @param {Array} 格式如[year,month,day]的日期数据\r\n\t\t\t\t */\r\n\t\t\t\tdoChangeValue : function(day){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\ty = day[0],\r\n\t\t\t\t\t\tm = day[1]\r\n\t\t\t\t\t\td = new Date(y, m, day[2]);\r\n\t\t\t\t\t//发送'clickday'事件\r\n\t\t\t\t\tif(false !== me.fireEvent('clickday', d, me)){\r\n\t\t\t\t\t\tif(me.value && me.value.getFullYear() === y \r\n\t\t\t\t\t\t\t\t&& me.value.getMonth() === m\r\n\t\t\t\t\t\t\t\t&& me.value.getDate() === day[2]){\r\n\t\t\t\t\t\t\t\t//无变化\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tme.value = d;\r\n\t\t\t\t\t\t\trefreshCmps.call(me, y, m);\r\n\t\t\t\t\t\t\tme.fireEvent('selectedchanged', d);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\t\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 点击任意一个日期按钮时的响应方法\r\n\t\t\t\t */\r\n\t\t\t\tonClickDayBtn : function(day, btn){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\ty = day[0],\r\n\t\t\t\t\t\tm = day[1];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(y === me.currentYear && m === me.currentMonth){\r\n\t\t\t\t\t\t//当前月份 \r\n\t\t\t\t\t\tme.doChangeValue(day);\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\telse if(y === me.currentYear){\r\n\t\t\t\t\t\t//年份相等，月份不同\r\n\t\t\t\t\t\tif(m > me.currentMonth){\r\n\t\t\t\t\t\t\tme.onClickNextMonth();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tme.onClickForwardMonth();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\t//年份不同\r\n\t\t\t\t\t\tif(y > me.currentYear){\r\n\t\t\t\t\t\t\tme.onClickNextMonth();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tme.onClickForwardMonth();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\t\t\r\n\r\n}());","/**\r\n * 模态对话框实现类；\r\n * @class Cmp.Dialog\r\n * @extend Cmp.Widget\r\n * <p>\r\n * 构建对话框时的属性配置说明如下：\r\n * @cfg {Function} handler (可选)当点击该按钮，且按钮没有处于失效状态时；调用该方法。\r\n * @cfg {Object} scope (可选)调用handler方法时的this设定对象\r\n * </p>\r\n * @version 2.3.0\r\n * @since 2016-05-31\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\r\n\tvar HTML_TMP = [];\r\n\tHTML_TMP.push('<div class=\"c-dlg-box\">');\r\n\t//头部，用于显示标题\r\n\tHTML_TMP.push('<div class=\"c-dlg-top\"><div class=\"c-dlg-title\">请稍等</div></div>');\r\n\t//主体部分，用显示内容\r\n\tHTML_TMP.push('<div class=\"c-dlg-center\"><div class=\"c-dlg-center-inner\"></div></div>');\r\n\t\r\n\t//底部部分，用于显示按钮\r\n\tHTML_TMP.push('<div class=\"c-dlg-bottom\"><div class=\"c-dlg-bottom-inner\"></div></div>');\r\n\t\r\n\tHTML_TMP.push('</div>');\r\n\t\r\n\tHTML_TMP = HTML_TMP.join('');\r\n\t\r\n\tvar BTNS_CONFIG = {\r\n\t\t'ok' : {\r\n\t\t\ttext : '确定'\r\n\t\t},\r\n\t\t'cancel' : {\r\n\t\t\ttext : '取消'\r\n\t\t}\r\n\t};\r\n\r\n\tCmp.define('Cmp.Dialog',{\r\n\t\textend : 'Cmp.Widget',\r\n\t\trequires : [\r\n\t\t\t'Cmp.Button'\r\n\t\t],\r\n\t\tcls : true,\r\n\t\tfactory : function(ext, reqs){\r\n\t\t\tvar superClass = ext.prototype,\r\n\t\t\t\tbtnClz = reqs[0];\r\n\t\t\treturn Cmp.extend(ext, {\r\n\t\t\t\t/**\r\n\t\t\t\t * 更新主体内容\r\n\t\t\t\t *\r\n\t\t\t\t * @param {String} bodyHtml 主体HTML\r\n\t\t\t\t * @param {String/Array} dlgCls 设定到Dialog本体上的Css设定；\r\n\t\t\t\t * @return {Element} bodyEl\r\n\t\t\t\t */\r\n\t\t\t\tupdateBody : function(bodyHtml, dlgCls){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tsubDoms,el;\r\n\t\t\t\t\t\r\n\t\t\t\t\t//删除之前设定内容\r\n\t\t\t\t\tsubDoms = me.body.dom.childNodes;\r\n\t\t\t\t\tif(subDoms && subDoms.length > 0){\r\n\t\t\t\t\t\twhile(subDoms.length > 0){\r\n\t\t\t\t\t\t\tel = Cmp.get(subDoms[subDoms.length-1]);\r\n\t\t\t\t\t\t\tel.remove();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(me.definedCls){\r\n\t\t\t\t\t\tme.el.removeClass(me.definedCls);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.body.update(bodyHtml);\r\n\t\t\t\t\tme.el.addClass(dlgCls);\r\n\t\t\t\t\tme.definedCls = dlgCls;\r\n\t\t\t\t},\r\n\t\t\t\r\n\t\t\t\t/**\r\n\t\t\t\t * 显示头部内容和底部按钮\r\n\t\t\t\t *\r\n\t\t\t\t * @param {String} title 标题文字\r\n\t\t\t\t * @param {Array} btns 按钮配置对象组成的数组；每项为需要显示按钮的配置；其中必须包含用于标识按钮的id属性，可以设定的有: 'ok','cancel'\r\n\t\t\t\t */\r\n\t\t\t\tshowBoth : function(title, btns){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tme.showTitle(title);\r\n\t\t\t\t\tme.showBottom(btns);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 隐藏头部内容和底部按钮\r\n\t\t\t\t */\r\n\t\t\t\thideBoth : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tme.hideTitle();\r\n\t\t\t\t\tme.hideBottom();\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 隐藏头部内容\r\n\t\t\t\t */\r\n\t\t\t\thideTitle : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(!me.hiddenTitie){\r\n\t\t\t\t\t\tme.hiddenTitie = true;\r\n\t\t\t\t\t\tme.el.addClass('c-dlg-notop');\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 显示头部内容\r\n\t\t\t\t */\r\n\t\t\t\tshowTitle : function(title){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.hiddenTitie){\r\n\t\t\t\t\t\tme.hiddenTitie = false;\r\n\t\t\t\t\t\tme.el.removeClass('c-dlg-notop');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.titleBox.update(title || '');\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 显示底部按钮\r\n\t\t\t\t */\r\n\t\t\t\tshowBottom : function(btns){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\ti,len,o,btn,cfg;\r\n\t\t\t\t\tif(me.hiddenBottom){\r\n\t\t\t\t\t\tme.hiddenBottom = false;\r\n\t\t\t\t\t\tme.el.removeClass('c-dlg-nobottom');\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//隐藏所有按钮\r\n\t\t\t\t\tfor(i in me.bottons){\r\n\t\t\t\t\t\tbtn = me.bottons[i];\r\n\t\t\t\t\t\tbtn.hide();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(isA(btns) && btns.length > 0){\r\n\t\t\t\t\t\tfor(i=0, len = btns.length; i<len; i++){\r\n\t\t\t\t\t\t\to = btns[i];\r\n\t\t\t\t\t\t\tbtn = me.bottons[o.id];\r\n\t\t\t\t\t\t\tif(btn){\r\n\t\t\t\t\t\t\t\tcfg = BTNS_CONFIG[o.id];\r\n\t\t\t\t\t\t\t\t//文字\r\n\t\t\t\t\t\t\t\tif(isS(o.text)){\r\n\t\t\t\t\t\t\t\t\tbtn.setText(o.text);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\t\tbtn.setText(cfg.text);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t//操作\r\n\t\t\t\t\t\t\t\tif(isF(o.handler)){\r\n\t\t\t\t\t\t\t\t\tbtn.handler = o.handler.createDelegate(o.scope, [o.id]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\t\tbtn.handler = undefined;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tbtn.show();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 隐藏底部按钮\r\n\t\t\t\t */\r\n\t\t\t\thideBottom : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(!me.hiddenBottom){\r\n\t\t\t\t\t\tme.hiddenBottom = true;\r\n\t\t\t\t\t\tme.el.addClass('c-dlg-nobottom');\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tinitComponent : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tsuperClass.initComponent.call(me);\r\n\t\t\t\t\tvar cls = ['c-dlg'];\r\n\t\t\t\t\tif(isS(me.cls)){\r\n\t\t\t\t\t\tcls.push(me.cls);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(isA(me.cls)){\r\n\t\t\t\t\t\tcls = cls.concat(me.cls);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.cls = cls;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tdoRender : function(){\r\n\t\t\t\t\tvar me = this,dom,subDom;\r\n\t\t\t\t\tsuperClass.doRender.call(me);\r\n\t\t\t\t\tme.el.setHideModal('display');\r\n\t\t\t\t\tme.el.update(HTML_TMP);\r\n\t\t\t\t\t\r\n\t\t\t\t\tdom = me.el.dom.firstChild;\r\n\t\t\t\t\t\r\n\t\t\t\t\tsubDom = dom.childNodes[0].firstChild;\r\n\t\t\t\t\tme.titleBox = Cmp.get(subDom);\r\n\t\t\t\t\t\r\n\t\t\t\t\tsubDom = dom.childNodes[1].firstChild;\r\n\t\t\t\t\tme.body = Cmp.get(subDom);\r\n\t\t\t\t\t\r\n\t\t\t\t\tsubDom = dom.childNodes[2].firstChild;\r\n\t\t\t\t\tme.buttonBox = Cmp.get(subDom);\r\n\t\t\t\t\tvar btns = {};\r\n\t\t\t\t\tbtns.ok = new btnClz({\r\n\t\t\t\t\t\tcls : 'c-btn-ok',\r\n\t\t\t\t\t\ttext : '确定'\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbtns.ok.render(me.buttonBox);\r\n\t\t\t\t\tbtns.ok.el.setHideModal('display');\r\n\t\t\t\t\t\r\n\t\t\t\t\tbtns.cancel = new btnClz({\r\n\t\t\t\t\t\tcls : 'c-btn-cancel',\r\n\t\t\t\t\t\ttext : '取消'\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbtns.cancel.render(me.buttonBox);\r\n\t\t\t\t\tbtns.cancel.el.setHideModal('display');\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.bottons = btns;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @public\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tshow : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tsuperClass.show.call(me);\r\n\t\t\t\t\tme.getBodyMask().show();\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @public\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\thide : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tsuperClass.hide.call(me);\r\n\t\t\t\t\tme.getBodyMask().hide();\r\n\t\t\t\t},\r\n\t\t\t\tgetBodyMask : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(!me.bodyMask){\r\n\t\t\t\t\t\tme.bodyMask = Cmp.getBody().createMask('DialogMask', 900000);\r\n\t\t\t\t\t\tme.bodyMask.addClass('c-dlg-mask');\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn me.bodyMask;\r\n\t\t\t\t}\r\n\t\t\t});\t\r\n\t\t}\r\n\t});\r\n}());","/**\r\n * 显示模态对话框工具；\r\n * \r\n * @static Cmp.Dialogs\r\n * @version 2.3.0\r\n * @since 2016-05-31\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\tvar bodyMask,dlg\r\n\t\r\n\t/**\r\n\t * 构建等待框的内部HTML\r\n\t */\r\n\tvar biuldWaitHtml = function(msg){\r\n\t\tvar html = [];\r\n\t\thtml.push('<div class=\"c-dlgs-icon\"></div>');\r\n\t\thtml.push('<div class=\"c-dlgs-msgbox\"><div class=\"c-dlgs-msgbox-inner\">');\r\n\t\thtml.push(msg);\r\n\t\thtml.push('</div></div>');\r\n\t\treturn html.join('');\r\n\t}\r\n\r\n\tvar Rel = {\r\n\t\t/**\r\n\t\t * 隐藏所打开的对话框；\r\n\t\t */\r\n\t\thide : function(){\r\n\t\t\tif(dlg){\r\n\t\t\t\tdlg.hide();\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * 显示等待框\r\n\t\t * @param {String} msg 显示的信息;\r\n\t\t */\r\n\t\tshowWait : function(msg){\r\n\t\t\tif(dlg){\r\n\t\t\t\tdlg.hideBoth();\r\n\t\t\t\tdlg.updateBody(biuldWaitHtml(msg), 'c-dlgs-wait');\r\n\t\t\t\tdlg.show();\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * 显示警告框，并显示'关闭'按钮；\r\n\t\t * @param {String} msg 显示的信息;\r\n\t\t * @param {String} title 警告框的标题文字\r\n\t\t */\r\n\t\tshowWarn : function(msg, title){\r\n\t\t\tif(dlg){\r\n\t\t\t\tdlg.showBoth(title || '', [{id : 'ok', text :'关闭',handler : function(){\r\n\t\t\t\t\tdlg.hide();\r\n\t\t\t\t}}]);\r\n\t\t\t\tdlg.updateBody(biuldWaitHtml(msg), 'c-dlgs-warn');\r\n\t\t\t\tdlg.show();\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * 显示执行成功样式的窗口，并显示'确认'按钮；\r\n\t\t *\r\n\t\t * @param {String} msg 显示的信息;\r\n\t\t * @param {String} title 成功框的标题文字\r\n\t\t * @param {Function} callback 点击成功框上'确认’按钮之后的回调方法；\r\n\t\t * @paarm {Object} scope 调用回调方法时的this对象设定；\r\n\t\t */\r\n\t\tshowSuccess : function(msg, title, callback, scope){\r\n\t\t\tif(dlg){\r\n\t\t\t\tdlg.showBoth(title || '', [{id : 'ok', text :'确认',handler : function(){\r\n\t\t\t\t\tdlg.hide();\r\n\t\t\t\t\tCmp.invoke(callback, scope);\r\n\t\t\t\t}}]);\r\n\t\t\t\tdlg.updateBody(biuldWaitHtml(msg), 'c-dlgs-success');\r\n\t\t\t\tdlg.show();\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * 显示执行成功样式的窗口，并显示'确定'和'取消'这两个按钮\r\n\t\t *\r\n\t\t * @param {String} msg 显示的信息;\r\n\t\t * @param {String} title 成功框的标题文字\r\n\t\t * @param {Function} callback 点击成功框上按钮之后的回调方法；\r\n\t\t *\t\t如果点击的时'确定'则传入true；如果点击的是'取消'则传入false；\r\n\t\t * @paarm {Object} scope 调用回调方法时的this对象设定；\r\n\t\t */\r\n\t\tshowSuccessForOkcanel : function(msg, title, callback, scope){\r\n\t\t\tif(dlg){\r\n\t\t\t\tdlg.showBoth(title || '', [\r\n\t\t\t\t\t{id : 'ok', text :'确定',\r\n\t\t\t\t\t\thandler : function(){\r\n\t\t\t\t\t\t\tdlg.hide();\r\n\t\t\t\t\t\t\tCmp.invoke(callback, scope,[true]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},{\r\n\t\t\t\t\t\tid : 'cancel', text :'取消',\r\n\t\t\t\t\t\thandler : function(btn){\r\n\t\t\t\t\t\t\tdlg.hide();\r\n\t\t\t\t\t\t\tCmp.invoke(callback, scope,[false]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t]);\r\n\t\t\t\tdlg.updateBody(biuldWaitHtml(msg), 'c-dlgs-success');\r\n\t\t\t\tdlg.show();\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * 显示执行成功样式的窗口，并显示'是'和'否'这两个按钮\r\n\t\t *\r\n\t\t * @param {String} msg 显示的信息;\r\n\t\t * @param {String} title 成功框的标题文字\r\n\t\t * @param {Function} callback 点击成功框上按钮之后的回调方法；\r\n\t\t *\t\t如果点击的时'是'则传入true；如果点击的是'否'则传入false；\r\n\t\t * @paarm {Object} scope 调用回调方法时的this对象设定；\r\n\t\t * @param {Object} btns 按钮文字配之；属性'ok'的值是为'OK'按钮定义的显示文字,默认为'是'；属性'cancel'的值是为'Cancel'按钮定义的显示文字,默认为'否'；\r\n\t\t */\r\n\t\tshowSuccessForYesNo : function(msg, title, callback, scope, btns){\r\n\t\t\tif(dlg){\r\n\t\t\t\tdlg.showBoth(title || '', [\r\n\t\t\t\t\t{id : 'ok', text : (btns ? (btns['ok']||'是') : '是'),\r\n\t\t\t\t\t\thandler : function(){\r\n\t\t\t\t\t\t\tdlg.hide();\r\n\t\t\t\t\t\t\tCmp.invoke(callback, scope,[true]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},{\r\n\t\t\t\t\t\tid : 'cancel', text : (btns ? (btns['cancel']||'否') : '否'),\r\n\t\t\t\t\t\thandler : function(btn){\r\n\t\t\t\t\t\t\tdlg.hide();\r\n\t\t\t\t\t\t\tCmp.invoke(callback, scope,[false]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t]);\r\n\t\t\t\tdlg.updateBody(biuldWaitHtml(msg), 'c-dlgs-success');\r\n\t\t\t\tdlg.show();\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * 显示一个带有疑问性质的确认框，并显示'确定'和'取消'这两个按钮；\r\n\t\t * \r\n\t\t * @param {String} msg 显示的信息;\r\n\t\t * @param {String} title 警告框的标题文字\r\n\t\t * @param {Function} callback 点击确认框上按钮之后的回调方法；\r\n\t\t *\t\t如果点击的时'确定'则传入true；如果点击的是'取消'则传入false；\r\n\t\t * @paarm {Object} scope 调用回调方法时的this对象设定；\r\n\t\t */\r\n\t\tshowConfirm : function(msg, title, callback, scope){\r\n\t\t\tif(dlg){\r\n\t\t\t\tdlg.updateBody(biuldWaitHtml(msg), 'c-dlgs-confirm');\r\n\t\t\t\tdlg.showBoth(\r\n\t\t\t\t\ttitle || '', \r\n\t\t\t\t\t[{\r\n\t\t\t\t\t\tid : 'ok', text :'确定',\r\n\t\t\t\t\t\thandler : function(btn){\r\n\t\t\t\t\t\t\tdlg.hide();\r\n\t\t\t\t\t\t\tCmp.invoke(callback, scope,[true]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},{\r\n\t\t\t\t\t\tid : 'cancel', text :'取消',\r\n\t\t\t\t\t\thandler : function(btn){\r\n\t\t\t\t\t\t\tdlg.hide();\r\n\t\t\t\t\t\t\tCmp.invoke(callback, scope,[false]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}]\r\n\t\t\t\t);\r\n\t\t\t\tdlg.show();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\tCmp.define('Cmp.Dialogs',{\r\n\t\trequires : [\r\n\t\t\t'Cmp.Dialog'\r\n\t\t],\r\n\t\tcls : true,\r\n\t\tfactory : function(ext, reqs){\r\n\t\t\tdlg = new reqs[0]();\r\n\t\t\tdlg.render(Cmp.getBody());\r\n\t\t\tdlg.hide();\r\n\t\t\treturn Rel;\r\n\t\t}\r\n\t});\r\n}());","/**\r\n * @class Cmp.PagingBar\r\n * @extend Cmp.Widget\r\n * 翻页控件实现；以事件+设置的形式实现翻页功能；此控件只提供视觉效果；\r\n * \r\n * @cfg {Boolean} hidePageSizeSelect (可选)等于true时，表示不去显示每页数量选项；\r\n * @cfg {Array} pageSizeOptions (可选)每页数量选项值，默认为：[10，20，50];设置数组数量不得超过5个；超过的将被截取；\r\n * @cfg {Number} pageLimit (可选)每页数量初始值，如果不设定则认为是pageSizeOptions选项的第一个；\r\n * @cfg {Number} pageIndex (可选)当前选中页，默认为0；\r\n * @cfg {Number} pageSize (可选)页总数，，默认为0；暨无结果\r\n *\r\n * @version 2.3.0\r\n * @since 2016-05-31\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\r\n\tvar UV = Cmp.util.ValueHelper,\r\n\t\t//标准模板\r\n\t\tHTML_TMP,\r\n\t\t//简化模板\r\n\t\tSIMPLE_HTML_TMP,\r\n\t\tNUMBER_CODE = [\r\n\t\t\t48,49,50,51,52,\r\n\t\t\t53,54,55,56,57\r\n\t\t],\r\n\t\thtml;\r\n\t//标准模板\r\n\thtml = [];\r\n\t//翻页按钮承载容器\r\n\thtml.push('<div class=\"c-pgbar-btns\">');\r\n\thtml.push('</div>');\r\n\t//信息提示\r\n\thtml.push('<div class=\"c-pgbar-msg\">共xxx页</div>');\r\n\t//页面跳转\r\n\thtml.push('<div class=\"c-pgbar-jump\">');\r\n\thtml.push('<span class=\"text\">到</span><input type=\"text\"></input><span class=\"text\">页</span>');\r\n\thtml.push('<button class=\"c-btn c-pgbar-jumpbtn\">确定</button>');\r\n\thtml.push('</div>');\t\r\n\t//页面数量选项\r\n\thtml.push('<div class=\"c-pgbar-ops\">');\r\n\t/*\r\n\thtml.push('<span class=\"text\">每页</span><span class=\"select\"></span>');\t\r\n\t*/\r\n\thtml.push('</div>');\t\r\n\t\r\n\tHTML_TMP = html.join('');\r\n\r\n\t//简化模板\r\n\thtml = [];\r\n\t//Buttons\r\n\thtml.push('<div class=\"c-pgbar-btns\">');\r\n\thtml.push('</div>');\r\n\t//页面跳转\r\n\thtml.push('<div class=\"c-pgbar-jump\">');\r\n\thtml.push('<span class=\"text\">到</span><input type=\"text\"></input><span class=\"text\">/xxx页</span>');\r\n\thtml.push('</div>');\r\n\t\r\n\t\t\r\n\tSIMPLE_HTML_TMP = html.join('');\r\n\r\n\t/**\r\n\t *　获得指定数字的位数\r\n\t */\r\n\tvar getDiForNumber = function(v){\r\n\t\tif(v < 10){\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if(v < 100){\r\n\t\t\treturn 2;\r\n\t\t}\r\n\t\telse if(v < 1000){\r\n\t\t\treturn 3;\r\n\t\t}\r\n\t\telse if(v < 10000){\r\n\t\t\treturn 4;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvar s = 0,\r\n\t\t\t\tt = v;\r\n\t\t\twhile(t > 0){\r\n\t\t\t\ts++;\r\n\t\t\t\tt = Math.floor(t/10);\r\n\t\t\t}\t\r\n\t\t\treturn s;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * 更新指定按钮的显示样式\r\n\t * @param {Button} btn 按钮实例\r\n\t * @param {Boolean} isShow 等于false时表示隐藏，此时后面的参数就无所谓了。默认为true；\r\n\t */\r\n\tvar updateBtnStyle = function(btn, isShow, text, pageIndex, actived, icon){\r\n\t\tif(false === isShow){\r\n\t\t\tbtn.hide();\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\tbtn.show();\r\n\t\tbtn.setText(text);\r\n\t\tif(undefined !== icon){\r\n\t\t\tbtn.setIcon(icon);\r\n\t\t}\r\n\t\tif(actived){\r\n\t\t\tbtn.active();\r\n\t\t}\r\n\t\telse{\r\n\t\t\tbtn.unactive();\r\n\t\t}\r\n\t\tbtn.pageIndex = pageIndex;\r\n\t}\r\n\t/**\r\n\t * @private\r\n\t * 创建一个类似于Button那样的一个结构对象\r\n\t * @param {HTMLElement} dom\r\n\t * @param {Function} handler 调用方法。\r\n\t * @param {Object} value 初始设定值\r\n\t */\r\n\tvar createButtonHandler = function(dom, handler, value){\r\n\t\tvar me = this,rel;\r\n\t\t\r\n\t\trel = {\r\n\t\t\tvalue : value,\r\n\t\t\tactived : false,\r\n\t\t\tdisabled : false,\r\n\t\t\tel : Cmp.get(dom)\r\n\t\t};\r\n\t\t\r\n\t\trel.getValue = function(){\r\n\t\t\treturn rel.value;\r\n\t\t}\r\n\t\trel.setValue = function(v){\r\n\t\t\trel.value = v;\r\n\t\t}\r\n\t\trel.setText = function(tx){\r\n\t\t\trel.el.update(tx||'');\r\n\t\t}\r\n\t\trel.active = function(){\r\n\t\t\tif(!rel.actived){\r\n\t\t\t\trel.el.setAttribute('actived', true);\r\n\t\t\t}\r\n\t\t\trel.actived = true;\r\n\t\t}\r\n\t\trel.unactive = function(){\r\n\t\t\tif(rel.actived){\r\n\t\t\t\trel.el.removeAttribute('actived');\r\n\t\t\t}\r\n\t\t\trel.actived = false;\r\n\t\t}\r\n\t\trel.enable = function(){\r\n\t\t\tif(rel.disabled){\r\n\t\t\t\trel.disabled = false;\r\n\t\t\t\tif(rel.el){\r\n\t\t\t\t\trel.el.removeClass('c-btn-disabled');\r\n\t\t\t\t\trel.el.dom.disabled = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\trel.disable = function(){\r\n\t\t\tif(!rel.disabled){\r\n\t\t\t\trel.disabled = true;\r\n\t\t\t\tif(rel.el){\r\n\t\t\t\t\trel.el.addClass('c-btn-disabled');\r\n\t\t\t\t\trel.el.dom.disabled = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\trel.hide = function(){\r\n\t\t\trel.el.hide();\r\n\t\t}\r\n\t\trel.show = function(){\r\n\t\t\trel.el.show();\r\n\t\t}\r\n\t\trel.el.setHideModal('display');\r\n\t\t//绑定Click事件\r\n\t\trel.el.on('click', function(){\r\n\t\t\thandler.call(me, rel);\r\n\t\t});\r\n\t\t\r\n\t\treturn rel;\r\n\t};\r\n\r\n\t/**\r\n\t * @private\r\n\t * 标准情况下页面总数未超出9页时的按钮刷新\r\n\t * @param {Number} pageIndex 页次序，首页时值为0；末页时，值等于pageTotal-1；\r\n\t * @param {Number} pageTotal 页总数\r\n\t */\r\n\tvar refreshByStandardWithInrange = function(pageIndex, pageTotal){\r\n\t\tvar me = this,\r\n\t\t\tbtns = me.pageBtns,\r\n\t\t\tpix = pageIndex+1,\r\n\t\t\tpi=2,pmi,pma,\r\n\t\t\tlength = btns.length,\r\n\t\t\ti=0,\r\n\t\t\tlen=length < pageTotal ? length : pageTotal-1,\r\n\t\t\tbtn;\r\n\t\t\t\r\n\t\tbtn = btns[length-1];\r\n\t\tbtn.el.removeClass('c-pgbar-move');\r\n\t\t\r\n\t\tfor(;i<len;i++){\r\n\t\t\tbtn = btns[i];\r\n\t\t\tpi = i+2;\r\n\t\t\tupdateBtnStyle(btn, true, pi+'', pi, pi===pix, false);\r\n\t\t}\r\n\t\t\r\n\t\tif(pageTotal < 9){\r\n\t\t\tme.lastBtn.hide();\r\n\t\t\tfor(;i<length;i++){\r\n\t\t\t\tbtn = btns[i];\r\n\t\t\t\tupdateBtnStyle(btn, false);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tme.lastBtn.show();\r\n\t\t\tme.lastBtn.setText(pageTotal);\r\n\t\t\tif(pix === pageTotal){\r\n\t\t\t\tme.lastBtn.active();\t\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tme.lastBtn.unactive();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @private\r\n\t * 标准情况下页面总数超出9页时的按钮刷新\r\n\t * @param {Number} pageIndex 页次序，首页时值为0；末页时，值等于pageTotal-1；\r\n\t * @param {Number} pageTotal 页总数\r\n\t */\r\n\tvar refreshByStandardWithOverflow = function(pageIndex, pageTotal){\r\n\t\t\r\n\t\tvar me = this,\r\n\t\t\tbtns = me.pageBtns,\r\n\t\t\tpix = pageIndex+1,\r\n\t\t\tpi,pmi,pma,\r\n\t\t\tlength = btns.length,\r\n\t\t\ti,len,btn;\r\n\t\t\t\r\n\t\tme.lastBtn.show();\r\n\t\tme.lastBtn.setText(pageTotal);\r\n\t\t\r\n\t\tif(pix === pageTotal){\r\n\t\t\tme.lastBtn.active();\t\r\n\t\t}\r\n\t\telse{\r\n\t\t\tme.lastBtn.unactive();\r\n\t\t}\r\n\t\t\r\n\t\tif(pageIndex < 5){\r\n\t\t\t//btn, isShow, text, pageIndex, actived, icon\r\n\t\t\tbtn = btns[0];\r\n\t\t\tupdateBtnStyle(btn, true, '2', 2,  2 === pix, false);\r\n\t\t\tbtn.el.removeClass('c-pgbar-move');\r\n\t\t\tfor(i=1,len = length-1; i<len;i++){\r\n\t\t\t\tpi = i+2;\r\n\t\t\t\tbtn = btns[i];\r\n\t\t\t\tupdateBtnStyle(btn, true, pi+'', pi, pi===pix);\r\n\t\t\t}\r\n\t\t\tbtn = btns[len];\r\n\t\t\tupdateBtnStyle(btn, true, '', 8,  false, ['fa','fa-ellipsis-h']);\r\n\t\t\tbtn.el.addClass('c-pgbar-move');\r\n\t\t}\r\n\t\telse if(pageIndex > pageTotal-5){\r\n\t\t\tpmi = pageTotal-7;\r\n\t\t\tbtn = btns[0];\r\n\t\t\tupdateBtnStyle(btn, true, '', pmi,  false, ['fa','fa-ellipsis-h']);\r\n\t\t\tbtn.el.addClass('c-pgbar-move');\r\n\t\t\tfor(i=1,len = length-1; i<len;i++){\r\n\t\t\t\tpi = i+pmi;\r\n\t\t\t\tbtn = btns[i];\r\n\t\t\t\tupdateBtnStyle(btn, true, pi+'', pi, pi===pix);\r\n\t\t\t}\r\n\t\t\tbtn = btns[len];\r\n\t\t\tpma = pageTotal-1;\r\n\t\t\tupdateBtnStyle(btn, true, pma+'', pma,  pma === pix, false);\r\n\t\t\tbtn.el.removeClass('c-pgbar-move');\r\n\t\t\t\r\n\t\t\t\r\n\t\t}\r\n\t\telse{\r\n\t\t\tpmi = pageIndex-2;\r\n\t\t\tpma = pageIndex +2;\r\n\t\t\t\r\n\t\t\tbtn = btns[0];\r\n\t\t\tupdateBtnStyle(btn, true, '', pmi-1,  false, ['fa','fa-ellipsis-h']);\r\n\t\t\tbtn.el.addClass('c-pgbar-move');\r\n\t\t\tfor(i=1,len = length-1; i<len;i++){\r\n\t\t\t\tpi = i+pmi;\r\n\t\t\t\tbtn = btns[i];\r\n\t\t\t\tupdateBtnStyle(btn, true, pi+'', pi, pi===pix);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tbtn = btns[len];\r\n\t\t\tupdateBtnStyle(btn, true, '', pma+1,  false, ['fa','fa-ellipsis-h']);\r\n\t\t\tbtn.el.addClass('c-pgbar-move');\r\n\t\t}\r\n\t};\r\n\t/**\r\n\t * @private\r\n\t * 标准模式下的内容刷新\r\n\t * @param {Number} pageIndex 页次序，首页时值为0；末页时，值等于pageTotal-1；\r\n\t * @param {Number} pageTotal 页总数\r\n\t */\t\r\n\tvar refreshByStandard = function(pageIndex, pageTotal){\r\n\t\tvar me = this,\r\n\t\t\tlastPageIndex = pageTotal-1,\r\n\t\t\tbtns = me.pageBtns,\r\n\t\t\tlength = btns.length,\r\n\t\t\ti,len,btn;\r\n\t\t//前页\r\n\t\tif(pageIndex > 0){\r\n\t\t\tme.backwardBtn.enable();\r\n\t\t}\r\n\t\telse{\r\n\t\t\tme.backwardBtn.disable();\r\n\t\t}\r\n\t\t//后页\r\n\t\tif(pageIndex < lastPageIndex){\r\n\t\t\tme.forwardBtn.enable();\r\n\t\t}\r\n\t\telse{\r\n\t\t\tme.forwardBtn.disable();\r\n\t\t}\r\n\t\tif(pageTotal < 1){\r\n\t\t\t//没有结果集\r\n\t\t\tme.msgBox.update('无数据');\r\n\t\t\tme.pageIndexInput.dom.disabled = true;\r\n\t\t\tme.jumpPageBtn.disable();\r\n\t\t\t\r\n\t\t\tme.firstBtn.hide();\r\n\t\t\tme.lastBtn.hide();\r\n\t\t\tfor(i=0; i<length;i++){\r\n\t\t\t\tbtn = btns[i];\r\n\t\t\t\tbtn.hide();\r\n\t\t\t}\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\t\r\n\t\tme.msgBox.update('共'+pageTotal+'页');\r\n\t\tif(pageTotal === 1){\r\n\t\t\tme.pageIndexInput.dom.disabled = true;\r\n\t\t\tme.jumpPageBtn.disable();\r\n\t\t}\r\n\t\telse{\r\n\t\t\tme.pageIndexInput.dom.disabled = false;\r\n\t\t\tme.pageIndexInput.dom.maxLength = getDiForNumber(pageTotal);\r\n\t\t\tme.jumpPageBtn.enable();\r\n\t\t}\r\n\t\t\r\n\t\tme.firstBtn.show();\r\n\t\tif(0 === pageIndex){\r\n\t\t\tme.firstBtn.active();\r\n\t\t}\r\n\t\telse{\r\n\t\t\tme.firstBtn.unactive();\r\n\t\t}\r\n\t\t\r\n\t\tif(pageTotal < 10){\r\n\t\t\trefreshByStandardWithInrange.call(me, pageIndex, pageTotal);\r\n\t\t}\r\n\t\telse{\r\n\t\t\trefreshByStandardWithOverflow.call(me, pageIndex, pageTotal);\r\n\t\t}\r\n\t}\r\n\r\n\tCmp.define('Cmp.PagingBar',{\r\n\t\textend : 'Cmp.Widget',\r\n\t\trequires : [\r\n\t\t\t'Cmp.Button',\r\n\t\t\t'Cmp.form.ComboBox',\r\n\t\t\t'Cmp.util.KeyMap'\r\n\t\t],\r\n\t\tcls : true,\r\n\t\tfactory : function(ext, reqs){\r\n\t\t\tvar superClazz = ext.prototype,\r\n\t\t\t\tbuttonClazz = reqs[0],\r\n\t\t\t\tComboBox = reqs[1],\r\n\t\t\t\tKeyMap = reqs[2]; \r\n\t\t\treturn Cmp.extend(ext, {\r\n\t\t\t\t\r\n\t\t\t\t/**\r\n\t\t\t\t * 设定数据查询结果；\r\n\t\t\t\t * @param {Object} rs 数据结果，具有以下几个属性：\r\n\t\t\t\t * \t\t\t{Number} pageIndex (可选)当前选中页；首页时值为0；末页时，值等于pageTotal-1；默认为0；\r\n\t\t\t\t * \t\t\t{Number} pageSize (可选)页总数，，默认为0；暨无结果\r\n\t\t\t\t * \r\n\t\t\t\t */\r\n\t\t\t\tsetDataResult : function(rs){\r\n\t\t\t\t\trs = rs || {};\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tix = !isN(rs.pageIndex) ? 0 : rs.pageIndex;\r\n\t\t\t\t\t\ttl = !isN(rs.pageSize) ? 0 : rs.pageSize;\r\n\t\t\t\t\t\r\n\t\t\t\t\trefreshByStandard.call(me, ix, tl);\r\n\t\t\t\t\tme.pageIndex = ix;\r\n\t\t\t\t\tme.pageSize = tl;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 获得当前页面次序值。如果为首页，则返回0。\r\n\t\t\t\t * @return {Number} 游标数值\r\n\t\t\t\t */\r\n\t\t\t\tgetPageIndex : function(){\r\n\t\t\t\t\treturn this.pageIndex;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 获得每次请求数据的最大条目数，暨每页显示数据的数量值。\r\n\t\t\t\t * @return {Number} 最大条目数\r\n\t\t\t\t */\r\n\t\t\t\tgetPageLimit : function(){\r\n\t\t\t\t\treturn this.pageLimit;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tinitComponent : function(){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tcls = me.cls;\r\n\t\t\t\t\tif(isA(cls)){\r\n\t\t\t\t\t\tcls.unshift('c-pgbar');\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\telse if(isS(cls)){\r\n\t\t\t\t\t\tcls = ['c-pgbar', cls];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tcls = 'c-pgbar';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.cls = cls;\r\n\t\t\t\t\tsuperClazz.initComponent.call(me);\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.addEvents(\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * 当操作控件上导致的页面次序发生变化前，分发此方法；\r\n\t\t\t\t\t\t *\r\n\t\t\t\t\t\t * @param {Number} pageIndex 期望达到的页面次序值；如果是首页，该值等于0；\r\n\t\t\t\t\t\t * @param {Number} beforePageIndex 之前的页面次序值；如果是首页，该值等于0；\r\n\t\t\t\t\t\t * @param {PagingBar} this\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t'indexchange',\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * 当操作控件上导致的页面显示数据数量发生变化前，分发此方法；\r\n\t\t\t\t\t\t * \r\n\t\t\t\t\t\t * @param {Number} limit 期望达到的页面显示数据数量值；\r\n\t\t\t\t\t\t * @param {Number} beforeLimit 之前的页面显示数据数量值；\r\n\t\t\t\t\t\t * @param {PagingBar} this\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t'limitchange'\r\n\t\t\t\t\t);\r\n\t\t\t\t\tcls = me.pageSizeOptions;\r\n\t\t\t\t\tif(!isA(cls) || cls.length === 0){\r\n\t\t\t\t\t\tcls = [10,20,50];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tif(cls.length > 5){\r\n\t\t\t\t\t\t\tcls = cls.slice(0, 5);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.pageSizeOptions = cls;\r\n\t\t\t\t\t\r\n\t\t\t\t\tcls = me.pageLimit;\r\n\t\t\t\t\tif(!isN(cls) || me.pageSizeOptions.indexOf(cls) < 0){\r\n\t\t\t\t\t\tcls = me.pageSizeOptions[0];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.pageLimit = cls;\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.pageSize = !isN(me.pageSize) ? 0 : me.pageSize;\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.pageIndex = !isN(me.pageIndex) ? 0 : me.pageIndex;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tdoRender : function(){\r\n\t\t\t\t\tvar me = this,dom;\r\n\t\t\t\t\tsuperClazz.doRender.call(me);\r\n\t\t\t\t\tme.doRenderByStandard();\r\n\t\t\t\t\t\r\n\t\t\t\t\t//初始化\r\n\t\t\t\t\trefreshByStandard.call(me, me.pageIndex, me.pageSize);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 标准形式绘制\r\n\t\t\t\t */\r\n\t\t\t\tdoRenderByStandard : function(){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\tdom,subDom,el,cns,btns = [],i,btn,\r\n\t\t\t\t\tbox = me.el.createChild({\r\n\t\t\t\t\t\tcls : 'c-pgbar-box',\r\n\t\t\t\t\t\thtml : HTML_TMP\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\tdom = box.dom;\r\n\t\t\t\t\t//按钮组\r\n\t\t\t\t\tme.btnBox = Cmp.get(dom.firstChild);\r\n\t\t\t\t\t\r\n\t\t\t\t\t//前页按钮\r\n\t\t\t\t\tme.backwardBtn = me.appendBtn('forward', undefined, 'c-pgbar-arrow', ['fa','fa-chevron-left'], me.onBackwardPage);\r\n\t\t\t\t\t//首页\r\n\t\t\t\t\tme.firstBtn = me.appendBtn('first', '1', undefined, undefined, me.onFirstPage);\r\n\t\t\t\t\t\r\n\t\t\t\t\t//7个动态按钮\r\n\t\t\t\t\tfor(i = 0;i<7;i++){\r\n\t\t\t\t\t\tk = 'btn-'+i;\r\n\t\t\t\t\t\tif(i != 6){\r\n\t\t\t\t\t\t\tbtns.push(me.appendBtn(k, (2+i)+'', undefined, undefined, me.onPageIndex));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tbtns.push(me.appendBtn(k, undefined, 'c-pgbar-move', ['fa','fa-ellipsis-h'], me.onPageIndex));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//末页\r\n\t\t\t\t\tme.lastBtn = me.appendBtn('last', 'Max', undefined, undefined, me.onLastPage);\r\n\t\t\t\t\t\r\n\t\t\t\t\t//后页\r\n\t\t\t\t\tme.forwardBtn =  me.appendBtn('backward', undefined, 'c-pgbar-arrow', ['fa','fa-chevron-right'], me.onForwardPage);\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.pageBtns = btns;\r\n\t\t\t\t\t\r\n\t\t\t\t\t//信息\r\n\t\t\t\t\tme.msgBox = Cmp.get(dom.childNodes[1]);\r\n\t\t\t\t\t\r\n\t\t\t\t\t//页面跳转\r\n\t\t\t\t\tcns = dom.childNodes[2].childNodes;\r\n\t\t\t\t\tme.pageIndexInput = Cmp.get(cns[1]);\r\n\t\t\t\t\tme.keyMap = new KeyMap(me.pageIndexInput, 'keypress');\r\n\t\t\t\t\tme.keyMap.addKey(13, me.onJumpPage, me);\r\n\t\t\t\t\tfor(var i=0;i<10;i++){\r\n\t\t\t\t\t\tme.keyMap.addKey(NUMBER_CODE[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.keyMap.preventKeyEvent();\r\n\t\t\t\t\tme.keyMap.bindKeyEvent();\r\n\t\t\t\t\tme.jumpPageBtn = createButtonHandler.call(me, cns[3], me.onJumpPage);\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t//控制每页数量的按钮\r\n\t\t\t\t\tif(!me.hidePageSizeSelect) {\r\n\t\t\t\t\t\tdom = dom.childNodes[3];\r\n\t\t\t\t\t\tfor(i=0, len = me.pageSizeOptions.length; i<len; i++){\r\n\t\t\t\t\t\t\tcns = me.pageSizeOptions[i];\r\n\t\t\t\t\t\t\tbtn = new buttonClazz({\r\n\t\t\t\t\t\t\t\tcls : 'c-pgbar-pgszbtn',\r\n\t\t\t\t\t\t\t\tvalue : cns,\r\n\t\t\t\t\t\t\t\ttext : cns,\r\n\t\t\t\t\t\t\t\ttooltip : '每页'+cns+'条',\r\n\t\t\t\t\t\t\t\thandler : me.fireLimitChangeEvent,\r\n\t\t\t\t\t\t\t\tscope : me\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tbtn.render(dom);\r\n\t\t\t\t\t\t\tif(me.pageLimit === cns){\r\n\t\t\t\t\t\t\t\tme.activePageSizeBtn = btn;\r\n\t\t\t\t\t\t\t\tbtn.active();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 增加一个按钮到按钮绘制区域\r\n\t\t\t\t */\r\n\t\t\t\tappendBtn : function(key, text, cls, icon, hanlder){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tbtn = new buttonClazz({\r\n\t\t\t\t\t\t\tkey : key,\r\n\t\t\t\t\t\t\ttext : text,\r\n\t\t\t\t\t\t\tcls : cls,\r\n\t\t\t\t\t\t\ticon : icon,\r\n\t\t\t\t\t\t\thandler : hanlder,\r\n\t\t\t\t\t\t\tscope : me\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tbtn.render(me.btnBox);\r\n\t\t\t\t\treturn btn;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 分发页数量发生改变事件\r\n\t\t\t\t */\r\n\t\t\t\tfireLimitChangeEvent : function(btn){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tvalue = btn.value,\r\n\t\t\t\t\t\tlimit = me.getPageLimit();\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(value === limit){\r\n\t\t\t\t\t\treturn ;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.pageLimit = value;\r\n\t\t\t\t\tif(false !== me.fireEvent('limitchange', value, limit, me)){\r\n\t\t\t\t\t\tme.activePageSizeBtn.unactive();\r\n\t\t\t\t\t\tbtn.active();\r\n\t\t\t\t\t\tme.activePageSizeBtn = btn\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tme.pageLimit = limit;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @param {Number} pageIndex 期望到达的界面次序\r\n\t\t\t\t */\r\n\t\t\t\tfireIndexChangeEvent : function(pageIndex){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tme.fireEvent('indexchange', pageIndex, me.getPageIndex(), me);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 点击前一页的处理方法\r\n\t\t\t\t */\r\n\t\t\t\tonBackwardPage : function(btn){\r\n\t\t//\t\t\tputLog('PagingBar#onBackwardPage>');\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tix = me.getPageIndex()-1;\r\n\t\t\t\t\tif(ix > -1){\r\n\t\t\t\t\t\tme.fireIndexChangeEvent(ix);\t\r\n\t\t\t\t\t}\t\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 点击后页的处理方法\r\n\t\t\t\t */\r\n\t\t\t\tonForwardPage : function(){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tix = me.getPageIndex()+1;\r\n//\t\t\t\t\tputLog('onForwardPage> pageIndex:'+me.getPageIndex()+', to index:'+ix);\t\r\n\t\t\t\t\tif(ix < me.pageSize){\r\n\t\t\t\t\t\tme.fireIndexChangeEvent(ix);\t\r\n\t\t\t\t\t}\t\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 点击末页的处理方法\r\n\t\t\t\t */\r\n\t\t\t\tonLastPage : function(){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tix = me.pageSize-1;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tif(me.getPageIndex() !== ix){\r\n\t\t\t\t\t\tme.fireIndexChangeEvent(ix);\t\r\n\t\t\t\t\t}\t\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 点击首页的处理方法\r\n\t\t\t\t */\r\n\t\t\t\tonFirstPage : function(btn){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.getPageIndex() !== 0){\r\n\t\t\t\t\t\tme.fireIndexChangeEvent(0);\t\r\n\t\t\t\t\t}\t\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 点击指定页数的处理方法\r\n\t\t\t\t */\r\n\t\t\t\tonPageIndex : function(btn){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tix = btn.pageIndex;\r\n\t\t\t\t\tme.fireIndexChangeEvent(ix-1);\r\n\t\t\t\t},\t\t\t\t\r\n\t\t\t\t/**\r\n\t\t\t\t * 跳转至指定页的处理方法\r\n\t\t\t\t */\r\n\t\t\t\tonJumpPage : function(){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tix = me.pageIndexInput.dom.value;\r\n\t\t\t\t\tix = UV.toInteger(ix, 0);\t\r\n\t\t\t\t\tif(ix > 0 && ix <= me.pageSize){\r\n\t\t\t\t\t\tme.fireIndexChangeEvent(ix-1);\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n}());","/**\r\n * @class Cmp.Panel\r\n * @extend Cmp.Contaner\r\n * 展示面板容器实现类\r\n * <p>\r\n * 面板类继承于容器类，也就是说面板中的内容可以使用布局管理器进行布局。\r\n * 另外它还有以下特性：\r\n * <li> 设定显示面板头部，并在头部位置显示图标、标题和小工具按钮。</li>\r\n * <li> </li>\r\n * </p>\r\n * \r\n * <p>\r\n * 构建按钮时可以的属性配置说明如下：\r\n * @cfg {String|Layout} layout (可选)容器的布局控制器实例或者是通过可以通过Cmp.require方法获得一个布局管理器构造方法的模块标识字串。\r\n * @cfg {Object} layoutConfig (可选)设定的layout属性为一个字符串时有效；创建布局控制器实例时的配置对象；\r\n * @cfg {Widget|Object|Array} items (可选)部件{Widget}实例或者是可以通过Cmp.create方法创建部件{Widget}实例的对象，或对象数组。\r\n * @cfg {Boolean} shadow (可选)等于true时，会使用阴影效果；默认值为false。\r\n * @cfg {Boolean} frame (可选)等于true时会使用凸显的面板效果；默认值为false。\r\n * @cfg {Boolean} actived (可选)等于true时会使用激活的显示效果，默认值为false。\r\n * @cfg {Boolean} hideTitle 等于true时，隐藏面板图标、标题和小工具所在的行栏。默认为false。\r\n * @cfg {String} title 标题文字，配置hideTitle等于true时此配置无效。\r\n * @cfg {String/Array} icon 面板图标，配置hideTitle等于true时此配置无效。\r\n * @cfg {Boolean} noborder 等于true时，将隐藏面板主体周围的边框。\r\n * </p>\r\n */\r\n(function(){\r\n\tvar HTML_TMP = [],MASK_HTML = [];\r\n\tHTML_TMP.push('<div class=\"c-panel-box\">');\r\n\t//TOP\r\n\tHTML_TMP.push('<div class=\"c-panel-top\">');\r\n\tHTML_TMP.push('<div class=\"c-panel-title\"><div class=\"icon\"></div><div class=\"text\"></div></div>');\r\n\tHTML_TMP.push('<div class=\"c-panel-tools\"></div>');\r\n\tHTML_TMP.push('</div>');\r\n\t\r\n\t//CENTER\r\n\tHTML_TMP.push('<div class=\"c-panel-center\"><div class=\"c-panel-center-inner\">');\r\n\tHTML_TMP.push('<div class=\"c-panel-tbar\"></div>');\r\n\tHTML_TMP.push('<div class=\"c-panel-body\"><div class=\"c-panel-body-inner\"></div></div>');\r\n\tHTML_TMP.push('<div class=\"c-panel-fbar\"></div>');\r\n\tHTML_TMP.push('</div></div>');\r\n\t\r\n\t//BOTTOM\r\n\tHTML_TMP.push('<div class=\"c-panel-bottom\"></div>');\r\n\tHTML_TMP.push('</div>');\r\n\r\n\tHTML_TMP = HTML_TMP.join('');\r\n\t\r\n\t\r\n\t//遮罩\t\r\n\tMASK_HTML.push('<div class=\"c-panel-mask-inner\">');\t\r\n\tMASK_HTML.push('<div class=\"c-panel-mask-msgbox\">');\t\r\n\tMASK_HTML.push('<div class=\"c-panel-mask-icon\"></div>');\t\r\n\tMASK_HTML.push('<div class=\"c-panel-mask-msg\"></div>');\t\r\n\tMASK_HTML.push('</div></div>');\t\r\n\tMASK_HTML = MASK_HTML.join('');\r\n\r\n\tCmp.define('Cmp.Panel',{\r\n\t\textend : 'Cmp.Contaner',\r\n\t\trequires : [\r\n\t\t\t'Cmp.Button'\r\n\t\t],\r\n\t\tcls : true,\r\n\t\tfactory : function(ext, reqs){\r\n\t\t\tvar superClazz = ext.prototype,\r\n\t\t\t\tbuttonClazz = reqs[0];\r\n\t\t\t\r\n\t\t\treturn Cmp.extend(ext, {\r\n\t\t\t\t/**\r\n\t\t\t\t * 显示挡住该面板的遮罩，阻止鼠标在面板上进行鼠标操作，直到调用hideMask方法后。\r\n\t\t\t\t *\r\n\t\t\t\t * @param {String} msg 等待框上的文字信息。\r\n\t\t\t\t */\r\n\t\t\t\tshowMask : function(msg){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(!me.el){\r\n\t\t\t\t\t\t//还没有绘制,\r\n\t\t\t\t\t\tme.maskMsg = msg;\r\n\t\t\t\t\t\treturn ;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(!me.mask){\r\n\t\t\t\t\t\t//遮罩为用时才去创建的对象\r\n\t\t\t\t\t\tme.mask = me.box.createChild({\r\n\t\t\t\t\t\t\tcls : 'c-panel-mask',\r\n\t\t\t\t\t\t\thtml : MASK_HTML\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tme.mask.setHideModal('display');\r\n\t\t\t\t\t\tme.maskMsg = Cmp.get(me.mask.dom.firstChild.firstChild.childNodes[1]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.maskMsg.update(msg || '请稍等...');\r\n\t\t\t\t\tme.mask.show();\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 隐藏挡住该面板的遮罩。\r\n\t\t\t\t */\r\n\t\t\t\thideMask : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.mask){\r\n\t\t\t\t\t\tme.mask.hide();\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tinitComponent : function(){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tcls = me.cls;\r\n\t\t\t\t\tif(isA(cls)){\r\n\t\t\t\t\t\tcls.unshift('c-panel');\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\telse if(isS(cls)){\r\n\t\t\t\t\t\tcls = ['c-panel', cls];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tcls = 'c-panel';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.cls = cls;\r\n\t\t\t\t\tsuperClazz.initComponent.call(me);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @final\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t * 子类不要再重写该方法\r\n\t\t\t\t */\r\n\t\t\t\tdoRender : function(){\r\n\t\t\t\t\tvar me = this,dom, el;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(true === me.shadow){\r\n\t\t\t\t\t\tme.el.addClass('c-panel-shadow');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(true ===  me.frame){\r\n\t\t\t\t\t\tme.el.addClass('c-panel-frame');\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\tif(true === me.actived){\r\n\t\t\t\t\t\tme.el.addClass('c-panel-actived');\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t//构建基本结构\r\n\t\t\t\t\tme.el.update(HTML_TMP);\t\r\n\t\t\t\t\tdom = me.el.dom.firstChild;\r\n\t\t\t\t\tme.box = Cmp.get(dom);\r\n\r\n\t\t\t\t\t//top\r\n\t\t\t\t\tdom = me.el.dom.firstChild.firstChild;\r\n\t\t\t\t\tme.topBox = Cmp.get(dom);\r\n\t\t\t\t\tdom = dom.firstChild;\r\n\t\t\t\t\tme.titleIconBox = Cmp.get(dom.firstChild);\r\n\t\t\t\t\tme.titleTextBox = Cmp.get(dom.childNodes[1]);\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t//body\r\n\t\t\t\t\tdom = me.el.dom.firstChild.childNodes[1];\r\n\t\t\t\t\tme.centerBox = Cmp.get(dom);\r\n\t\t\t\t\tdom = dom.firstChild;\r\n\t\t\t\t\tme.tbarBox = Cmp.get(dom.firstChild);\r\n\t\t\t\t\tme.body = Cmp.get(dom.childNodes[1].firstChild);\r\n\t\t\t\t\tme.bbarBox = Cmp.get(dom.childNodes[2]);\r\n\t\t\t\t\t\r\n\t\t\t\t\t//foot\r\n\t\t\t\t\tdom = me.el.dom.firstChild.childNodes[2];\r\n\t\t\t\t\tme.bottomBox = Cmp.get(dom);\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.renderTop();\r\n\t\t\t\t\tme.renderCenter();\r\n\t\t\t\t\tme.renderBottom();\r\n\t\t\t\t\t\r\n\t\t\t\t\t//最后再调用父类\r\n\t\t\t\t\tsuperClazz.doRender.call(me);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(me.autoSize){\r\n\t\t\t\t\t\tme.el.addClass('c-panel-autosize');\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 获取该容器在绘制子部件的承载Element\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tgetLayoutTarget : function(){\r\n\t\t\t\t\treturn this.body;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 绘制头部\r\n\t\t\t\t */\r\n\t\t\t\trenderTop : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(true === me.hideTitle){\r\n\t\t\t\t\t\tme.el.addClass('c-panel-notop');\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tif(isS(me.icon) || isA(me.icon)){\r\n\t\t\t\t\t\t\tme.titleIconBox.addClass(me.icon);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(isS(me.title)){\r\n\t\t\t\t\t\t\tme.titleTextBox.update(me.title);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 绘制中间部分\r\n\t\t\t\t */\r\n\t\t\t\trenderCenter : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(me.noborder){\r\n\t\t\t\t\t\tme.centerBox.addClass('c-panel-noborder');\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(me.tbar){\r\n\t\t\t\t\t\t//TODO\r\n\t\t\t\t\t\tif(isA(me.tbar)){\r\n\t\t\t\t\t\t\t//TODO Toolbar\r\n\t\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t\tme.tbar = new Cmp.Toolbar({\r\n\t\t\t\t\t\t\t\titems : me.tbar\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if(isO(me.tbar) && !isF(me.tbar.render)){\r\n//\t\t\t\t\t\t\tme.tbar = new Cmp.Toolbar(me.tbar);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(isF(me.tbar.render)){\r\n\t\t\t\t\t\t\tme.tbar.render(me.tbarBox);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tme.centerBox.addClass('c-panel-notbar');\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(me.bbar){\r\n\t\t\t\t\t\t//TODO\r\n\t\t\t\t\t\tif(isF(me.bbar.render)){\r\n\t\t\t\t\t\t\tme.tbar.render(me.bbarBox);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tme.centerBox.addClass('c-panel-nobbar');\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 绘制底部\r\n\t\t\t\t */\r\n\t\t\t\trenderBottom : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(isA(me.buttons)){\r\n\t\t\t\t\t\tvar i=0,len = me.buttons.length,b;\r\n\t\t\t\t\t\tfor(;i<len;i++){\r\n\t\t\t\t\t\t\tb = me.buttons[i];\r\n\t\t\t\t\t\t\tif(b){\r\n\t\t\t\t\t\t\t\tif(!isF(b.render)){\r\n\t\t\t\t\t\t\t\t\tb = new buttonClazz(b);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tb.render(me.bottomBox);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tme.el.addClass('c-panel-nobottom');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n}());","/**\r\n * @class Cmp.Tooltip\r\n * @extend Cmp.Widget\r\n * \r\n * 提示信息控件\r\n * 取代原声title的提示信息功能，提供更佳视觉样式和功能的牛x部件。\r\n * <p>\r\n * 构建时可以的属性配置说明如下：\r\n * @cfg {Boolean} closable (可选)等于true时，表示需要出现关闭按钮，并可以被手动关闭。默认为true;\r\n * @cfg {Number} autoCloseDelay (可选)自动关闭提示信息的延迟时间，单位：毫秒。小于1000时表示永远不关闭。\r\n *\t\t\t当closable等于false时默认为：3000；等于true时等于0。 \r\n * </p>\r\n * \r\n * @version 3.0.0\r\n * @since 2016-06-10\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\t\tvar DH = Cmp.util.DomHelper,\r\n\t\tUV = Cmp.util.ValueHelper,\r\n\t\tHTML_TMP,\r\n\t\thtml = [];\r\n\t\t\r\n\t\r\n\thtml.push('<div class=\"c-tip-box\">');\r\n\thtml.push('<div class=\"c-tip-inner\">');\r\n\thtml.push('<div class=\"c-tip-icon\">');\r\n\thtml.push('</div><div class=\"c-tip-body\">&nbsp;</div>');\r\n\thtml.push('<div class=\"c-tip-close\">');\r\n\thtml.push('</div></div>');\r\n\thtml.push('<div class=\"c-tip-arrow\"></div></div>');\r\n\thtml.push('</div>');//End box\r\n\t\r\n\tHTML_TMP = \thtml.join('');\r\n\t/**\r\n\t * @private\r\n\t * 获得在目标上方，左侧对齐的位置信息；\r\n\t * @param {Array} txy 目标位置\r\n\t * @param {Object} tsz 目标大小\r\n\t * @param {Object} sz 本体大小\r\n\t * @reutrn {Object} 具有以下属性的对象：\r\n\t * \t<li> {String} arrowCls : 设定指向箭头使用的CSS\r\n\t *\t<li> {Array} xy 显示位置\r\n\t */\r\n\tvar getTooltipPosInfoByTL = function(txy, tsz, sz){\r\n\t\tvar x = txy[0],\r\n\t\t\ty = txy[1]-sz.height;\r\n\t\t\r\n\t\treturn {\r\n\t\t\txy : [x,y],\r\n\t\t\tarrowCls : 'c-tip-blarrow'\r\n\t\t}\t\r\n\t}\r\n\t/**\r\n\t * @private\r\n\t * 获得在目标上方，右侧对齐的位置信息；\r\n\t * @param {Array} txy 目标位置\r\n\t * @param {Object} tsz 目标大小\r\n\t * @param {Object} sz 本体大小\r\n\t * @reutrn {Object} 具有以下属性的对象：\r\n\t * \t<li> {String} arrowCls : 设定指向箭头使用的CSS\r\n\t *\t<li> {Array} xy 显示位置\r\n\t */\r\n\tvar getTooltipPosInfoByTR = function(txy, tsz, sz){\r\n\t\tvar x = txy[0]-sz.width+tsz.width,\r\n\t\t\ty = txy[1]-sz.height;\r\n\t\t\r\n\t\treturn {\r\n\t\t\txy : [x,y],\r\n\t\t\tarrowCls : 'c-tip-brarrow'\r\n\t\t}\t\r\n\t}\r\n\t/**\r\n\t * @private\r\n\t * 获得在目标下方，左侧对齐的位置信息；\r\n\t * @param {Array} txy 目标位置\r\n\t * @param {Object} tsz 目标大小\r\n\t * @param {Object} sz 本体大小\r\n\t * @reutrn {Object} 具有以下属性的对象：\r\n\t * \t<li> {String} arrowCls : 设定指向箭头使用的CSS\r\n\t *\t<li> {Array} xy 显示位置\r\n\t */\r\n\tvar getTooltipPosInfoByBL = function(txy, tsz, sz){\r\n\t\tvar x = txy[0],\r\n\t\t\ty = txy[1]+tsz.height;\r\n\t\t\r\n\t\treturn {\r\n\t\t\txy : [x,y],\r\n\t\t\tarrowCls : 'c-tip-tlarrow'\r\n\t\t}\t\r\n\t}\r\n\t/**\r\n\t * @private\r\n\t * 获得在目标下方，右侧对齐的位置信息；\r\n\t * @param {Array} txy 目标位置\r\n\t * @param {Object} tsz 目标大小\r\n\t * @param {Object} sz 本体大小\r\n\t * @reutrn {Object} 具有以下属性的对象：\r\n\t * \t<li> {String} arrowCls : 设定指向箭头使用的CSS\r\n\t *\t<li> {Array} xy 显示位置\r\n\t */\r\n\tvar getTooltipPosInfoByBR = function(txy, tsz, sz){\r\n\t\tvar x = txy[0]-sz.width+tsz.width,\r\n\t\t\ty = txy[1]+tsz.height;\r\n\t\t\r\n\t\treturn {\r\n\t\t\txy : [x,y],\r\n\t\t\tarrowCls : 'c-tip-trarrow'\r\n\t\t}\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * @private\r\n\t * 获得在目标左侧，上边对齐的位置信息；\r\n\t * @param {Array} txy 目标位置\r\n\t * @param {Object} tsz 目标大小\r\n\t * @param {Object} sz 本体大小\r\n\t * @reutrn {Object} 具有以下属性的对象：\r\n\t * \t<li> {String} arrowCls : 设定指向箭头使用的CSS\r\n\t *\t<li> {Array} xy 显示位置\r\n\t */\r\n\tvar getTooltipPosInfoByLT = function(txy, tsz, sz){\r\n\t\tvar x = txy[0]-sz.width,\r\n\t\t\ty = txy[1];\r\n\t\t\r\n\t\treturn {\r\n\t\t\txy : [x,y],\r\n\t\t\tarrowCls : 'c-tip-rtarrow'\r\n\t\t}\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * @private\r\n\t * 获得在目标左侧，下边对齐的位置信息；\r\n\t * @param {Array} txy 目标位置\r\n\t * @param {Object} tsz 目标大小\r\n\t * @param {Object} sz 本体大小\r\n\t * @reutrn {Object} 具有以下属性的对象：\r\n\t * \t<li> {String} arrowCls : 设定指向箭头使用的CSS\r\n\t *\t<li> {Array} xy 显示位置\r\n\t */\r\n\tvar getTooltipPosInfoByLB = function(txy, tsz, sz){\r\n\t\tvar x = txy[0]-sz.width,\r\n\t\t\ty = txy[1]+tsz.height-sz.height;\r\n\t\t\r\n\t\treturn {\r\n\t\t\txy : [x,y],\r\n\t\t\tarrowCls : 'c-tip-rbarrow'\r\n\t\t}\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * @private\r\n\t * 获得在目标左侧，上边对齐的位置信息；\r\n\t * @param {Array} txy 目标位置\r\n\t * @param {Object} tsz 目标大小\r\n\t * @param {Object} sz 本体大小\r\n\t * @reutrn {Object} 具有以下属性的对象：\r\n\t * \t<li> {String} arrowCls : 设定指向箭头使用的CSS\r\n\t *\t<li> {Array} xy 显示位置\r\n\t */\r\n\tvar getTooltipPosInfoByRT = function(txy, tsz, sz){\r\n\t\tvar x = txy[0]+tsz.width,\r\n\t\t\ty = txy[1];\r\n\t\t\r\n\t\treturn {\r\n\t\t\txy : [x,y],\r\n\t\t\tarrowCls : 'c-tip-ltarrow'\r\n\t\t}\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * @private\r\n\t * 获得在目标左侧，下边对齐的位置信息；\r\n\t * @param {Array} txy 目标位置\r\n\t * @param {Object} tsz 目标大小\r\n\t * @param {Object} sz 本体大小\r\n\t * @reutrn {Object} 具有以下属性的对象：\r\n\t * \t<li> {String} arrowCls : 设定指向箭头使用的CSS\r\n\t *\t<li> {Array} xy 显示位置\r\n\t */\r\n\tvar getTooltipPosInfoByRB = function(txy, tsz, sz){\r\n\t\tvar x = txy[0]+tsz.width,\r\n\t\t\ty = txy[1]+tsz.height-sz.height;\r\n\t\t\r\n\t\treturn {\r\n\t\t\txy : [x,y],\r\n\t\t\tarrowCls : 'c-tip-lbarrow'\r\n\t\t}\t\r\n\t}\r\n\t\r\n\tvar POS_HANDLERS = {\r\n\t\t'tl':getTooltipPosInfoByTL,\r\n\t\t'tr':getTooltipPosInfoByTR,\r\n\t\t'bl':getTooltipPosInfoByBL,\r\n\t\t'br':getTooltipPosInfoByBR,\r\n\t\t'lt':getTooltipPosInfoByLT,\r\n\t\t'lb':getTooltipPosInfoByLB,\r\n\t\t'rt':getTooltipPosInfoByRT,\r\n\t\t'rb':getTooltipPosInfoByRB\r\n\t};\r\n\r\n\t/**\r\n\t * @private\r\n\t * 自动计算最佳的显示位置；\r\n\t * 优先级排名：下方左对齐，下方右对齐，上方左对齐，上方右对齐；\r\n\t */\r\n\tvar getTooltipPosInfoByAuto = function(txy, tsz, sz){\r\n\t\tvar me = this,r;\r\n\t\t//TODO 检测是否溢出；\r\n\t\t//下方左侧对齐\r\n//\t\tr = getTooltipPosInfoByBL.call(me, txy, tsz, sz);\r\n\t\t//下方右侧对齐\r\n//\t\tr = getTooltipPosInfoByBR.call(me, txy, tsz, sz);\r\n\t\t//上方左侧对齐\r\n//\t\tr = getTooltipPosInfoByTL.call(me, txy, tsz, sz);\r\n\t\t//上方右侧对齐\r\n//\t\tr = getTooltipPosInfoByTR.call(me, txy, tsz, sz);\r\n\t\t\r\n\t\tr = getTooltipPosInfoByRT.call(me, txy, tsz, sz);\r\n\t\treturn r;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t * 根据目标位置和当前提示信息的大小获得最终提示信息的显示位置和指向箭头策略。\r\n\t *\r\n\t * @reutrn {Object} 具有以下属性的对象：\r\n\t * \t<li> {String} arrowCls : 设定指向箭头使用的CSS\r\n\t *\t<li> {Array} xy 显示位置\r\n\t */\r\n\tvar getTooltipPosInfo = function(target, pos, showArrow){\r\n\t\tvar me = this,\r\n\t\t\tsz = me.el.getSize(),\r\n\t\t\ttxy,tsz,dom,fn,rel;\r\n\t\tif(!target){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif(isE(target)){\r\n\t\t\tdom = target;\r\n\t\t}\r\n\t\telse if(isO(target)){\r\n\t\t\t//是Widget实例\r\n\t\t\tif(isF(target.render)){\r\n\t\t\t\tdom = target.el.dom;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tdom = target.dom;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(isS(target)){\r\n\t\t\tdom = document.getElementById(target);\r\n\t\t}\r\n\t\t//target不存在\r\n\t\tif(!dom){\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\ttxy = DH.getXY(dom);\r\n\t\ttsz = {\r\n\t\t\twidth : DH.getWidth(dom),\r\n\t\t\theight : DH.getHeight(dom)\r\n\t\t};\r\n\t\tfn = POS_HANDLERS[pos];\r\n\t\tif(!isF(fn)){\r\n\t\t\tfn = getTooltipPosInfoByAuto;\r\n\t\t}\r\n\t\trel = fn.call(me, txy,tsz,sz);\r\n\t\tif(false === showArrow){\r\n\t\t\trel.arrowCls = 'c-tip-noarrow';\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\t\r\n\t\r\n\tCmp.define('Cmp.Tooltip',{\r\n\t\textend : 'Cmp.Widget',\r\n\t\tcls : true,\r\n\t\tfactory : function(ext, reqs){\r\n\t\t\tvar superclass = ext.prototype;\r\n\t\t\treturn Cmp.extend(ext, {\r\n\t\t\t\t/**\r\n\t\t\t\t * @public\r\n\t\t\t\t * 在指定显示容器位置旁，显示该提示信息。\r\n\t\t\t\t * 该方法将触发'show'事件\r\n\t\t\t\t * \r\n\t\t\t\t * @param {HTMLElement/Element/Widget/String} el (必须)一个HTMLElement实例或一个Element实例或Widget实例或者是一个HTMLElement的ID字串。\r\n\t\t\t\t * @param {String} pos (可选)位置；默认为自动计算；可以设定以下值\r\n\t\t\t\t * \t\t<li> auto : 自动计算使用下面选项。(默认)\r\n\t\t\t\t *\t\t<li> bl : 在容器下方，且左边对齐\r\n\t\t\t\t *\t\t<li> br : 在容器下方，且右边对齐\r\n\t\t\t\t *\t\t<li> tl : 在容器上方，且左边对齐\r\n\t\t\t\t *\t\t<li> tr : 在容器上方，且右边对齐\r\n\t\t\t\t *\t\t<li> lt : 在容器左侧，且上边对齐\r\n\t\t\t\t *\t\t<li> lb : 在容器左侧，且下边对齐\r\n\t\t\t\t *\t\t<li> rt : 在容器右侧，且上边对齐\r\n\t\t\t\t *\t\t<li> rb : 在容器右侧，且下边对齐\r\n\t\t\t\t * @param {Boolean} showArrow (可选)等于true时将出现指向箭头，否则不出现。默认为true。\r\n\t\t\t\t */\r\n\t\t\t\tshowBy : function(el, pos, showArrow){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(!me.rendered){\r\n\t\t\t\t\t\tme.render(Cmp.getBody());\r\n\t\t\t\t\t\twindow.setTimeout(function(){\r\n\t\t\t\t\t\t\tme.showBy(el, pos, showArrow);\r\n\t\t\t\t\t\t},10);\r\n\t\t\t\t\t\treturn ;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tme.show();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar ps = getTooltipPosInfo.call(me, el, pos, showArrow),\r\n\t\t\t\t\t\tv;\r\n\t\t\t\t\tif(!ps){\r\n\t\t\t\t\t\treturn ;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t//指向箭头策略\r\n\t\t\t\t\tv = ps.arrowCls;\r\n\t\t\t\t\tif(me._arrowCls !== v){\r\n\t\t\t\t\t\tif(me._arrowCls){\r\n\t\t\t\t\t\t\tme.el.removeClass(me._arrowCls);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tme.el.addClass(v);\r\n\t\t\t\t\t\tme._arrowCls = v;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t//位置\r\n\t\t\t\t\tv = ps.xy;\r\n\t\t\t\t\tme.el.setStyle({\r\n\t\t\t\t\t\tleft : v[0]+'px',\r\n\t\t\t\t\t\ttop : v[1]+'px'\r\n\t\t\t\t\t});\r\n\t\t\t\t\t//分发事件\r\n\t\t\t\t\tme.fireEvent('show', me);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @public\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tshow : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tsuperclass.show.call(me);\r\n\t\t\t\t\tif(me.autoHideTask){\r\n\t\t\t\t\t\tme.autoHideTask.run();\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @public\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\thide : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.autoHideTask){\r\n\t\t\t\t\t\tme.autoHideTask.cancel();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsuperclass.hide.call(me);\r\n\t\t\t\t\t//分发事件\r\n\t\t\t\t\tme.fireEvent('hide', me);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 设定提示信息显示的内容\r\n\t\t\t\t *\r\n\t\t\t\t * @param {Object/String} tip 提示信息对象或者只是提示信息的文字内容。当为一个对象时具有以下属性：\r\n\t\t\t\t *\t\t{String} text 提示信息的文字内容\r\n\t\t\t\t *\t\t{Array/String} icon 提示信息中提示图标的CSS样式名或者是这些样式名组成的数组。当没有设定时，将不会显示提示图标。\r\n\t\t\t\t */\r\n\t\t\t\tsetTooltip : function(tip){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\ttx,ic;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(!me.rendered){\r\n\t\t\t\t\t\tme.initTip = tip;\r\n\t\t\t\t\t\treturn ;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(isS(tip)){\r\n\t\t\t\t\t\ttx = tip;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\telse if(isO(tip)){\r\n\t\t\t\t\t\ttx = tip.text;\r\n\t\t\t\t\t\tic = tip.icon;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.bodyBox.update(tx||'&nbsp;');\r\n\t\t\t\t\tif(isS(ic) || isA(ic)){\r\n\t\t\t\t\t\tme.el.removeClass('c-tip-noicon');\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar cs = ['c-tip-icon'];\r\n\t\t\t\t\t\tif(isS(ic)){\r\n\t\t\t\t\t\t\tcs.push(ic);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tcs = cs.concat(ic);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tme.iconBox.setClass(cs);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tme.el.addClass('c-tip-noicon');\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tinitComponent : function(){\r\n\t\t\t\t\tvar me = this,v;\r\n\t\t\t\t\tsuperclass.initComponent.call(me);\r\n\t\t\t\t\tvar cls = ['c-tip'];\r\n\t\t\t\t\tif(isS(me.cls)){\r\n\t\t\t\t\t\tcls.push(me.cls);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(isA(me.cls)){\r\n\t\t\t\t\t\tcls = cls.concat(me.cls);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.cls = cls;\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.addEvents(\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * 当提示信息控件显示后，分发此事件。\r\n\t\t\t\t\t\t * @param {Tooltip} this\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t'show',\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * 当提示信息控件隐藏后，分发此事件。\r\n\t\t\t\t\t\t * @param {Tooltip} this\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t'hide'\r\n\t\t\t\t\t);\r\n\t\t\t\t\t\r\n\t\t\t\t\t//是否需要出现关闭按钮\r\n\t\t\t\t\tme.closable = me.closable === false ? false : true;\r\n\t\t\t\t\t//自动关闭时间\r\n\t\t\t\t\tv = me.closable ? 0:3000;//默认值不同\r\n\t\t\t\t\tv = UV.toInteger(me.autoCloseDelay, v);\r\n\t\t\t\t\tif(v > 999){\r\n\t\t\t\t\t\t//一秒钟以上的显示，才属于正常显示\r\n\t\t\t\t\t\tme.autoHideTask = new Cmp.util.DelayedTask({\r\n\t\t\t\t\t\t\tdelay : v,\r\n\t\t\t\t\t\t\thandler : me.hide,\r\n\t\t\t\t\t\t\tscope : me\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tdelete me.autoCloseDelay;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tdoRender : function(){\r\n\t\t\t\t\tvar me = this,cns;\r\n\t\t\t\t\tsuperclass.doRender.call(me);\r\n\t\t\t\t\tme.el.setHideModal('display');\r\n\t\t\t\t\tme.el.update(HTML_TMP);\r\n\t\t\t\t\tcns = me.el.dom.firstChild.firstChild.childNodes;\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.box = Cmp.get(me.el.dom.firstChild);\r\n\t\t\t\t\tme.iconBox = Cmp.get(cns[0]);\r\n\t\t\t\t\tme.bodyBox = Cmp.get(cns[1]);\r\n\t\t\t\t\tme.closeBox = Cmp.get(cns[2]);\r\n\t\t\t\t\tme.closeBox.on('click', me.onClickClose, me);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(!me.closable){\r\n\t\t\t\t\t\tme.el.addClass('c-tip-noclose');\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(me.initTip){\r\n\t\t\t\t\t\tvar tx,ic;\r\n\t\t\t\t\t\tif(isS(me.initTip)){\r\n\t\t\t\t\t\t\ttx = me.initTip;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if(isO(me.initTip)){\r\n\t\t\t\t\t\t\ttx = me.initTip.text;\r\n\t\t\t\t\t\t\tic = me.initTip.icon;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tme.bodyBox.update(tx || '&nbsp;');\r\n\t\t\t\t\t\tif(ic){\r\n\t\t\t\t\t\t\tme.iconBox.addClass(ic);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tme.el.addClass('c-tip-noicon');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdelete me.initTip;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tme.el.addClass('c-tip-noicon');\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t */\r\n\t\t\t\tonClickClose : function(){\r\n\t\t\t\t\tthis.hide();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n}());","/**\r\n * 窗口显示管理器，负责管理显示窗口的层次；\r\n * \r\n *　\r\n * @static Cmp.WindowMng\r\n * \r\n * @version 2.0.0\r\n * @since 2016-06-10\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\r\n\tvar ACTIVE_Z_INDEX = 100000,\t\t\t\t//活动Window的z-index\r\n\t\tMASK_Z_INDEX = 99990,\t\t\t\t\t//模式窗口出现时，得mask层\r\n\t\tUNACTIVE_Z_INDEX = 99980,\t\t\t\t//非活动Window的最高z-index\r\n\t\tACTION_MASK_Z_INDEX = ACTIVE_Z_INDEX+5;\t//拖动活动窗口时代理div的z-index\r\n\t\r\n\tvar getDefaultXY = function(box, win){\r\n\t\tvar bw = box.getWidth(),\r\n\t\t\tbh = box.getHeight(),\r\n\t\t\tww = win.box.getWidth(),\r\n\t\t\twh = win.box.getHeight(),\r\n\t\t\tx = (bw - ww) / 2,\r\n\t\t\ty = (bh - wh) / 2;\r\n\t\tx = x > 0 ? x : 0,\r\n\t\ty = y > 0 ? y : 0;\r\n\t\t\t\r\n\t\treturn [x,y];\t\r\n\t}\t\r\n\t\r\n\t/**\r\n\t * 设定窗口位置。\r\n\t */\r\n\tvar setWinLeftAndTop = function(win, xy, isCenter){\r\n\t\tvar x,y;\r\n\t\tif(true === isCenter){\r\n\t\t\tvar w = win.el.getWidth(),\r\n\t\t\t\th = win.el.getHeight();\r\n\t\t}\r\n\t\telse{\r\n\t\t\tx = xy[0];\r\n\t\t\ty = xy[1];\r\n\t\t\tif(isN(x)){\r\n\t\t\t\tx = x+'px';\r\n\t\t\t}\r\n\t\t\tif(isN(y)){\r\n\t\t\t\ty = y+'px';\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\twin.el.setStyle({\r\n\t\t\t\ttop : y,\r\n\t\t\t\tleft : x\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\tvar winArray = [],\r\n\t\tactiveWin;\r\n\r\n\t/**\r\n\t * 排列各个窗口的次序。\r\n\t * @param {Window} win 处于最高层的窗口\r\n\t */\r\n\tvar sortWindowLayer = function(win){\r\n\t\tvar me = this,wid,i,len;\r\n\t\tif(win){\r\n\t\t\twid = win.getId();\r\n\t\t\tif(activeWin){\r\n\t\t\t\twinArray.push(activeWin);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor(i=0,len = winArray.length;i<len;i++){\r\n\t\t\t\tif(winArray[i] == wid){\r\n\t\t\t\t\twinArray.splice(i, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\telse if(winArray.length > 0){\r\n\t\t\twid = winArray.pop();\r\n\t\t}\r\n\t\t\r\n\t\tif(wid){\r\n\t\t\tvar sm = false;\r\n\t\t\twin = Cmp.getCmp(wid);\r\n\t\t\tif(win.modal){\r\n\t\t\t\tsm = true;\r\n\t\t\t}\r\n\t\t\twin.el.removeClass('xp-win-unactive');\r\n\t\t\twin.el.setStyle('zIndex', ACTIVE_Z_INDEX);\r\n\t\t\tactiveWin = wid;\r\n\t\t\t\r\n\t\t\tfor(i=0,len = winArray.length;i<len;i++){\r\n\t\t\t\twid = winArray[i];\r\n\t\t\t\twin = Cmp.getCmp(wid);\r\n\t\t\t\tif(win.modal){\r\n\t\t\t\t\tsm = true;\r\n\t\t\t\t}\r\n\t\t\t\twin.el.addClass('xp-win-unactive');\r\n\t\t\t\twin.el.setStyle('zIndex', UNACTIVE_Z_INDEX-len+i);\r\n\t\t\t}\r\n\t\t\tif(!sm){\r\n\t\t\t\tme.hideMask();\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tactiveWin = false;\r\n\t\t\tme.hideMask();\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\tvar Rel = {\r\n\t\t/**\r\n\t\t * 获取用于拖拽操作的遮罩\r\n\t\t * \r\n\t\t */\r\n\t\tgetActiveMask : function(){\r\n\t\t\t//TODO\r\n\t\t\tvar mask = Rel.activeMask;\r\n\t\t\tif(!mask){\r\n\t\t\t\tmask = Rel.getWindowsBox().createChild({\r\n\t\t\t\t\tcls : 'c-win-actmask',\r\n\t\t\t\t\tstyle : {\r\n\t\t\t\t\t\t'zIndex' : ACTION_MASK_Z_INDEX\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tmask.setHideModal('display');\r\n\t\t\t\tRel.activeMask = mask;\r\n\t\t\t}\r\n\t\t\treturn mask;\r\n\t\t},\r\n\t\t/**\r\n\t\t * 设定指定的窗口为焦点状态。\r\n\t\t */\t\r\n\t\tactiveWindow : function(win){\r\n\t\t\t//TODO\r\n\t\t},\r\n\t\t/**\r\n\t\t * 显示指定的窗口，如果窗口已经显示则设定为焦点。\r\n\t\t * @param {Window} win (必须)窗口实例\r\n\t\t * @param {Array} xy (可选)格式如[left,top]的位置数据；如果值为数字类型，则认为是以像素为单位的值，\r\n\t\t *\t\t如果是字符串类型，则认为是可以直接设定到style中的样式属性值。\r\n\t\t * @param {Boolean} isCenter 等于true的时候，认为设定坐标值定位的时当前窗口的中心点位置；否则是左上角。默认为false\r\n\t\t */\r\n\t\tshowWindow : function(win, xy, isCenter){\r\n\t\t\tvar box = Rel.getWindowsBox();\r\n\t\t\tif(win && isF(win.render)){\r\n\t\t\t\twin.render(box);\r\n\t\t\t}\r\n\t\t\t//显示\t\t\t\r\n\t\t\twin.el.setStyle('display', 'block');\r\n\t\t\t\r\n\t\t\tif(true === win.modal){\r\n\t\t\t\tRel.showMask();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//调整位置\r\n\t\t\tif(!xy){\r\n\t\t\t\txy = getDefaultXY(box, win);\r\n\t\t\t\tisCenter = false;\r\n\t\t\t}\r\n\t\t\t//\r\n\t\t\tsetWinLeftAndTop(win, xy, isCenter);\r\n\t\t\t\r\n\t\t\t//排列次序\r\n\t\t\tsortWindowLayer.call(Rel, win);\r\n\t\t\t\r\n\t\t},\r\n\t\t/**\r\n\t\t * 隐藏指定的窗口，并释放所占用的层。\r\n\t\t */\r\n\t\thideWindow : function(win){\r\n\t\t\tif(!win || !win.el || !isF(win.el.hide)){\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar wid = win.getId();\r\n\t\t\twin.el.hide();\r\n\t\t\tif(activeWin === wid){\r\n\t\t\t\tactiveWin = false;\r\n\t\t\t\tsortWindowLayer.call(Rel);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tfor(var i=0,len = winArray.length;i<len;i++){\r\n\t\t\t\t\tif(winArray[i] == wid){\r\n\t\t\t\t\t\twinArray.splice(i, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * 获取绘制窗口时使用的父容器；\r\n\t\t * @return {Element} \r\n\t\t */\r\n\t\tgetWindowsBox : function(){\r\n\t\t\tvar me = this;\r\n\t\t\tif(!me.windowBox){\r\n\t\t\t\tme.windowBox = Cmp.getBody();\r\n\t\t\t}\r\n\t\t\treturn me.windowBox;\r\n\t\t},\r\n\t\t/**\r\n\t\t * 显示遮罩层\r\n\t\t */\r\n\t\tshowMask : function(){\r\n\t\t\tif(!Rel.mask){\r\n\t\t\t\tRel.mask = Rel.getWindowsBox().createChild({\r\n\t\t\t\t\tcls : 'c-win-mask',\r\n\t\t\t\t\tstyle : {\r\n\t\t\t\t\t\t'zIndex' : MASK_Z_INDEX\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tRel.mask.setHideModal('display');\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tRel.mask.show();\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * 隐藏遮罩层\r\n\t\t */\r\n\t\thideMask : function(){\r\n\t\t\tif(Rel.mask){\r\n\t\t\t\tRel.mask.hide();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tCmp.define('Cmp.WindowMng',{\r\n\t\tfactory : function(ext, reqs){\r\n\t\t\treturn Rel;\r\n\t\t}\r\n\t});\r\n}());","/**\r\n * @class Cmp.Window\r\n * @extend Cmp.Widget\r\n * 窗口组件实现类\r\n * <p>\r\n * 构建按钮时可以的属性配置说明如下：\r\n * @cfg {String/Array} cls (可选)自定义添加到窗口容器上的CSS设定；\r\n * @cfg {Boolean} hideHead (可选)等于true时，隐藏头部内容，此时窗口不会出现标题、小工具按钮；并且拖动功能也会失效；默认为false;\r\n * @cfg {String/Array} icon (可选)标题前的小图标设定；默认为空的\r\n * @cfg {String} title (可选)标题文字；\r\n * @cfg {Boolean} closable (可选)等于true时，表示这个窗口是可以被关闭或隐藏的，此时会出现一个关闭的小工具按钮；\r\n * @cfg {Boolean} maxsizeble (可选)等于true时，表示这个窗口是可以被最大化的，此时会出现一个最大化的小工具按钮；\r\n * @cfg {Boolean} modal (可选)等于true时表示该窗口为模式窗口\r\n * @cfg {Boolean} resizeble (可选)等于true时表示可以改变窗口大小。默认为false。\r\n * @cfg {Boolean} movesable (可选)等于true时表示可以改变窗口位置。默认为false。hideHead不等于true时有效；\r\n * @cfg {Object/Button/Array} buttons 位于窗口下部显示的按钮。默认为undefined\r\n * @cfg {String} buttonAlign 底部按钮的横向对齐设定，可设定得值有：'left','center','right'; 默认为:'right'\r\n * @cfg {Widget/Object} content (可选)主内容区显示的部件或可以同过Cmp.create方法创建部件的对象；\r\n * @cfg {String} innerHTML (可选)主内容区所填充的HTML内容；设定content属性后该属性无效；\r\n * @cfg {Number/String} width 窗口宽度\r\n * @cfg {Number/String} height 窗口高度 \r\n * </p>\r\n * \r\n * @version 2.3.0\r\n * @since 2016-06-10\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\tvar DH = Cmp.util.DomHelper;\r\n\t/**\r\n\t * @private 窗口管理模块\r\n\t */\r\n\tvar WindowMng;\r\n\t/**\r\n\t * @private {String} 窗口内部模板\r\n\t */\r\n\tvar HTML;\r\n\tHTML = [];\r\n\tHTML.push('<div class=\"c-win-box\">');\r\n\t//-- Start HEAD\r\n\t\tHTML.push('<div class=\"c-win-head\">');\r\n\t\t\tHTML.push('<div class=\"c-win-headbox\">');\r\n\t\t\t\tHTML.push('<div class=\"c-win-title\"><div class=\"c-win-title-inner\"><i class=\"fa\"></i><strong></strong></div></div>');\r\n\t\t\t\tHTML.push('<div class=\"c-win-tools\"></div>');\r\n\t\t\tHTML.push('</div>');\r\n\t\tHTML.push('</div>');\r\n\t//-- End HEAD\r\n\t\r\n\t//-- Start Inner\r\n\t\tHTML.push('<div class=\"c-win-inner\">');\r\n\t\t\tHTML.push('<div class=\"c-win-innerbox\">');\r\n\t\t\t\tHTML.push('<div class=\"c-win-ml\"></div>');\r\n\t\t\t\tHTML.push('<div class=\"c-win-mm\">');\r\n\t\t\t\t\tHTML.push('<div class=\"c-win-wrap\">');\r\n\t\t\t\t\t\t//窗口主体 \r\n\t\t\t\t\t\tHTML.push('<div class=\"c-win-body\"><div class=\"c-win-body-inner\"></div></div>');\r\n\t\t\t\t\t\t//底部\r\n\t\t\t\t\t\tHTML.push('<div class=\"c-win-foot\"><div class=\"c-win-foot-inner\"></div></div>');\r\n\t\t\t\t\tHTML.push('</div>');//End Warp\r\n\t\t\t\tHTML.push('</div>');\r\n\t\t\t\tHTML.push('<div class=\"c-win-mr\"></div>');\r\n\t\t\t\tHTML.push('<div class=\"c-win-bl\"></div>');\r\n\t\t\t\tHTML.push('<div class=\"c-win-bm\"></div>');\r\n\t\t\t\tHTML.push('<div class=\"c-win-br\"></div>');\r\n\t\t\tHTML.push('</div>');\r\n\t//-- End Inner\t\t\r\n\t\tHTML.push('</div>');\r\n\t\t\r\n\tHTML.push('</div>');\r\n\tHTML = HTML.join('');\r\n\t\r\n\tvar onMouseDownByResize = function(ev){\r\n\t\tvar me = this,\r\n\t\t\tdom = me.el.dom,\r\n\t\t\tdm = ev.target,\r\n\t\t\tcls = dm.className,\r\n\t\t\tmk = WindowMng.getActiveMask();\r\n//\t\tputLog('onMouseDownByResize#className:'+dm.className);\t\r\n\t\t\t\t\r\n\t\t//该窗口设为焦点。\r\n\t\tme.active();\r\n\t\t\r\n\t\t//设定缓存\r\n\t\tme.resizeCache = {\r\n\t\t\tdir : dm.className,\r\n\t\t\tsx : DH.getStyleNumber(dom, 'left'),\r\n\t\t\tsy : DH.getStyleNumber(dom, 'top'),\r\n\t\t\tsw : DH.getWidth(dom),\r\n\t\t\tsh : DH.getHeight(dom),\r\n\t\t\tmx : ev.clientX,\r\n\t\t\tmy : ev.clientY\r\n\t\t};\r\n//\t\tputLog('Window#onMouseDownByResize>resizeCache:'+JSON.stringify(me.resizeCache));\r\n\t\tmk.on('mousemove', onMouseMoveByResize, me);\r\n\t\tmk.on('mouseup', onMouseUpByResize, me);\r\n\t\tmk.show();\r\n\t\tmk.setStyle('cursor', DH.getStyle(dm, 'cursor'));\r\n\t}\r\n\tvar onMouseMoveByResize = function(ev){\r\n\t\tvar me = this,\r\n\t\t\tdom = me.el.dom,\r\n\t\t\tc = me.resizeCache,\r\n\t\t\tdm = ev.target;\r\n\t\t\t\r\n\t\tif('c-win-ml' === c.dir){\r\n\t\t\t//左侧，只关注鼠标横坐标\r\n\t\t\tvar off = ev.clientX - c.mx,\r\n\t\t\t\tx = c.sx+off,\r\n\t\t\t\tw =  c.sw - off;\r\n\t\t\tif(w >= MIN_WIDTH){\r\n\t\t\t\tDH.setStyle(dom, {\r\n\t\t\t\t\tleft : x+'px',\r\n\t\t\t\t\twidth : w + 'px'\r\n\t\t\t\t});\r\n\t\t\t}\t\r\n\t\t}\t\r\n\t\telse if('c-win-mr' === c.dir){\r\n\t\t\t//向右\r\n\t\t\tvar off = ev.clientX - c.mx,\r\n\t\t\t\tw =  c.sw + off;\r\n\t\t\tif(w >= MIN_WIDTH){\r\n\t\t\t\tDH.setStyle(dom, {\r\n\t\t\t\t\twidth : w + 'px'\r\n\t\t\t\t});\t\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if('c-win-bm' === c.dir){\r\n\t\t\t//向下\r\n\t\t\tvar off = ev.clientY - c.my,\r\n\t\t\t\th = c.sh + off;\r\n\t\t\t\t\r\n\t\t\tif(h >= MIN_HEIGHT){\r\n\t\t\t\tDH.setStyle(dom, {\r\n\t\t\t\t\theight : h + 'px'\r\n\t\t\t\t});\t\r\n\t\t\t}\t\r\n\t\t}\r\n\t\telse if('c-win-bl' === c.dir){\r\n\t\t\t//向左下\r\n\t\t\tvar offX = ev.clientX - c.mx,\r\n\t\t\t\toffY = ev.clientY - c.my,\r\n\t\t\t\tx = c.sx+offX,\r\n\t\t\t\tw =  c.sw - offX,\r\n\t\t\t\th = c.sh + offY,\r\n\t\t\t\tr = false,\r\n\t\t\t\to = {};\t\r\n\t\t\tif(w >= MIN_WIDTH){\r\n\t\t\t\to.left = x+'px';\r\n\t\t\t\to.width = w + 'px';\r\n\t\t\t\tr = true;\r\n\t\t\t}\r\n\t\t\tif(h >= MIN_HEIGHT){\r\n\t\t\t\to.height = h + 'px';\r\n\t\t\t\tr = true;\r\n\t\t\t}\r\n\t\t\tif(r){\r\n\t\t\t\tDH.setStyle(dom, o);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if('c-win-br' === c.dir){\r\n\t\t\t//向右下\r\n\t\t\tvar offX = ev.clientX - c.mx,\r\n\t\t\t\toffY = ev.clientY - c.my,\r\n\t\t\t\tw =  c.sw + offX,\r\n\t\t\t\th = c.sh + offY,\r\n\t\t\t\tr = false,\r\n\t\t\t\to = {};\t\r\n\t\t\tif(w >= MIN_WIDTH){\r\n\t\t\t\to.width = w + 'px';\r\n\t\t\t\tr = true;\r\n\t\t\t}\r\n\t\t\tif(h >= MIN_HEIGHT){\r\n\t\t\t\to.height = h + 'px';\r\n\t\t\t\tr = true;\r\n\t\t\t}\r\n\t\t\tif(r){\r\n\t\t\t\tDH.setStyle(dom, o);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tvar onMouseUpByResize = function(ev){\r\n\t\tvar me = this,\r\n\t\t\tmk = WindowMng.getActiveMask();\r\n\t\t\r\n\t\tdelete me.resizeCache;\r\n\t\tmk.un('mousemove', onMouseMoveByResize, me);\r\n\t\tmk.un('mouseup', onMouseUpByResize, me);\r\n\t\tmk.hide();\r\n\t\tme.fireResizeEvent();\r\n\t}\r\n\t/**\r\n\t * 在标题栏中处理当鼠标按下时的处理方法\r\n\t */\r\n\tvar onMouseDownByMove = function(ev){\r\n\t\tvar me = this,\r\n\t\t\tdm = ev.target;\r\n\t\t\tdom = me.el.dom,\r\n\t\t\tmk = WindowMng.getActiveMask();\r\n\t\t\t\t\r\n\t\t//该窗口设为焦点。\r\n\t\tme.active();\r\n\t\t\r\n\t\t//设定缓存\r\n\t\tme.moveCache = {\r\n\t\t\tsx : DH.getStyleNumber(dom, 'left'),\r\n\t\t\tsy : DH.getStyleNumber(dom, 'top'),\r\n\t\t\tmx : ev.clientX,\r\n\t\t\tmy : ev.clientY\r\n\t\t};\r\n\t\tmk.on('mousemove', onMouseMoveByMove, me);\r\n\t\tmk.on('mouseup', onMouseUpByMove, me);\r\n\t\tmk.show();\r\n\t}\r\n\tvar onMouseMoveByMove = function(ev){\r\n\t\tvar me = this,\r\n\t\t\tdom = me.el.dom,\r\n\t\t\tc = me.moveCache;\r\n\t\t\r\n\t\tvar offX = ev.clientX - c.mx,\r\n\t\t\toffY = ev.clientY - c.my,\r\n\t\t\tx = c.sx + offX,\r\n\t\t\ty = c.sy + offY,\r\n\t\t\tr = false;\r\n\t\t\to = {};\r\n\t\t\r\n\t\tif(x >= 0){\r\n\t\t\to.left = x+'px';\r\n\t\t\tr = true;\r\n\t\t}\r\n\t\tif(y >= 0){\r\n\t\t\to.top = y+'px';\r\n\t\t\tr = true;\r\n\t\t}\r\n\t\tif(r){\r\n\t\t\tDH.setStyle(dom, o);\t\r\n\t\t}\r\n\t}\t\r\n\tvar onMouseUpByMove = function(ev){\r\n\t\tvar me = this,\r\n\t\t\tmk = WindowMng.getActiveMask();\r\n\t\tdelete me.moveCache;\r\n\t\tmk.un('mousemove', onMouseMoveByMove, me);\r\n\t\tmk.un('mouseup', onMouseUpByMove, me);\r\n\t\tmk.hide();\r\n\t}\t\t\r\n\tCmp.define('Cmp.Window',{\r\n\t\textend : 'Cmp.Widget',\r\n\t\trequires : [\r\n\t\t\t'Cmp.Button',\r\n\t\t\t'Cmp.WindowMng'\r\n\t\t],\r\n\t\tcls : true,\r\n\t\tfactory : function(ext, reqs){\r\n\t\t\tvar superClass = ext.prototype,\r\n\t\t\t\tButton = reqs[0];\r\n\t\t\tWindowMng = reqs[1];\r\n\t\t\t\r\n\t\t\treturn Cmp.extend(ext, {\r\n\t\t\t\t/**\r\n\t\t\t\t * 设定该窗口为焦点状态。\r\n\t\t\t\t * \r\n\t\t\t\t */\r\n\t\t\t\tactive : function(){\r\n\t\t\t\t\tWindowMng.activeWindow(this);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @public\r\n\t\t\t\t * 重新设定窗口的标题文字。\r\n\t\t\t\t * <p>\r\n\t\t\t\t * 如果设定的是无标题模式，则该设定无效。\r\n\t\t\t\t * \r\n\t\t\t\t * @param {String} title 标题文字 \r\n\t\t\t\t */\r\n\t\t\t\tsetTitle : function(title){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.titleBox){\r\n\t\t\t\t\t\tme.titleBox.update(title || '');\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tme.title = title;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 重新设定窗口图标。\r\n\t\t\t\t * <p>\r\n\t\t\t\t * 如果设定的是无标题模式，则该设定无效。\r\n\t\t\t\t * \r\n\t\t\t\t * @param {String} title 标题文字 \r\n\t\t\t\t */\r\n\t\t\t\tsetIcon : function(icon){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tbox = me.iconBox;\r\n\t\t\t\t\tif(!box){\r\n\t\t\t\t\t\treturn ; \r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(box.icon === icon){\r\n\t\t\t\t\t\treturn ;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(box.icon){\r\n\t\t\t\t\t\tbox.removeClass(box.icon);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(icon){\r\n\t\t\t\t\t\tbox.addClass(icon);\r\n\t\t\t\t\t\tif(!box.icon){\r\n\t\t\t\t\t\t\tme.head.addClass('c-win-headbox-icon');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tif(box.icon){\r\n\t\t\t\t\t\t\tme.head.removeClass('c-win-headbox-icon');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbox.icon = icon;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 在制定的位置显示这个窗口。\r\n\t\t\t\t *\r\n\t\t\t\t * @param {Array} xy 格式如[left,top]的位置数据；如果值为数字类型，则认为是以像素为单位的值，\r\n\t\t\t\t *\t\t如果是字符串类型，则认为是可以直接设定到style中的样式属性值。\r\n\t\t\t\t * @param {Boolean} noCenter 等于true的时候，认为设定坐标值定位的时当前窗口的中心点；否则是左上角\r\n\t\t\t\t */\r\n\t\t\t\tshowAt : function(xy, noCenter){\r\n\t\t\t\t\tWindowMng.showWindow(this, xy, noCenter);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @public\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t * 拦截此方法，需要调用WindowMng#showWindow方法；\r\n\t\t\t\t */\r\n\t\t\t\tshow : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tWindowMng.showWindow(me);\r\n\t\t\t\t\tme.fireEvent('show', me);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @public\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t * 关闭该窗口，但无需销毁。\r\n\t\t\t\t */\r\n\t\t\t\thide : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tWindowMng.hideWindow(me);\r\n\t\t\t\t\tme.fireEvent('hide', me);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 关闭并销毁该窗口。\r\n\t\t\t\t */\r\n\t\t\t\tclose : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tme.hide();\r\n\t\t\t\t\tme.destroy();\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tinitComponent : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tsuperClass.initComponent.call(me);\r\n\t\t\t\t\tvar cls = ['c-win'];\r\n\t\t\t\t\tif(isS(me.cls)){\r\n\t\t\t\t\t\tcls.push(me.cls);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(isA(me.cls)){\r\n\t\t\t\t\t\tcls = cls.concat(me.cls);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.cls = cls;\r\n\t\t\t\t\tme.addEvents(\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * 当窗口关闭或隐藏时分发此事件。\r\n\t\t\t\t\t\t * @param {Window} this\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t'hide',\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * 当窗口显示时分发此事件。\r\n\t\t\t\t\t\t * @param {Window} this\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t'show'\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tdoRender : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tsuperClass.doRender.call(me);\r\n\t\t\t\t\tme.el.setHideModal('display');\r\n\t\t\t\t\tme.el.update(HTML);\r\n\t\t\t\t\tdom = me.el.dom.firstChild;\r\n\t\t\t\t\tme.box = Cmp.get(dom);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(true === me.hideHead){\r\n\t\t\t\t\t\tme.el.addClass('c-win-nohead');\r\n\t\t\t\t\t\t//没有标题时，强制不能改变大小。\r\n\t\t\t\t\t\tme.resizeble = false;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tme.initHead(dom);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.initBody(dom);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(isO(me.buttons) || (isA(me.buttons) && me.buttons.length > 0)){\r\n\t\t\t\t\t\tme.initFoot(dom);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tme.el.addClass('c-win-nofoot');\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(true === me.resizeble){\r\n\t\t\t\t\t\tme.initResizeEvent(dom);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tme.el.addClass('c-win-noresize');\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 渲染头部\r\n\t\t\t\t */\r\n\t\t\t\tinitHead : function(boxDom){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tdom = boxDom.firstChild.firstChild,\r\n\t\t\t\t\t\tddom,btn;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tme.head = Cmp.get(dom);\r\n\t\t\t\t\t\r\n\t\t\t\t\t//标题容器\r\n\t\t\t\t\tme.titleWarp = Cmp.get(dom.firstChild);\r\n\t\t\t\t\tddom = dom.firstChild.firstChild;\r\n\t\t\t\t\tme.titleInner = Cmp.get(ddom);\r\n\t\t\t\t\t\r\n\t\t\t\t\t//标题和图标\r\n\t\t\t\t\tme.iconBox = Cmp.get(ddom.firstChild);\r\n\t\t\t\t\tme.titleBox = Cmp.get(ddom.childNodes[1]);\r\n\t\t\t\t\tme.toolBox= Cmp.get(dom.childNodes[1]);\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.setIcon(me.icon);\r\n\t\t\t\t\tme.setTitle(me.title);\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t//工具 TODO\r\n\t\t\t\t\tif(true === me.closable){\r\n\t\t\t\t\t\tbtn = new Button({\r\n\t\t\t\t\t\t\ticon : ['fa','fa-times'],\r\n\t\t\t\t\t\t\ttitle : '关闭',\r\n\t\t\t\t\t\t\thandler : me.hide,\r\n\t\t\t\t\t\t\tscope : me\r\n\t\t\t\t\t\t}); \r\n\t\t\t\t\t\tbtn.render(me.toolBox);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t//移动窗口绑定事件 movesable\r\n\t\t\t\t\tif(true === me.movesable){\r\n\t\t\t\t\t\tme.titleInner.on('mousedown', onMouseDownByMove, me);\r\n\t\t\t\t\t\tme.head.addClass('c-win-movesable');\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t */\r\n\t\t\t\tinitBody : function(boxDom){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tdom = boxDom.childNodes[1];\r\n\t\t\t\t\tdom = dom.firstChild.childNodes[1].firstChild.firstChild.firstChild;\r\n\t\t\t\t\tme.body = Cmp.get(dom);\r\n\t\t\t\t\tif(isO(me.content)){\r\n\t\t\t\t\t\tif(isF(me.content.render)){\r\n\t\t\t\t\t\t\tme.content.render(me.body);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tCmp.create(me.content, function(o){\r\n\t\t\t\t\t\t\t\tif(o && isF(o.render)){\r\n\t\t\t\t\t\t\t\t\tme.content = 0;\r\n\t\t\t\t\t\t\t\t\tme.content.render(me.body);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(isS(me.innerHTML)){\r\n\t\t\t\t\t\tme.body.update(me.innerHTML);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t */\r\n\t\t\t\tinitFoot : function(boxDom){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tbtns = me.buttons,\r\n\t\t\t\t\t\tdom = boxDom.childNodes[1];\r\n\t\t\t\t\tdom = boxDom.childNodes[1];\r\n\t\t\t\t\tdom = dom.firstChild.childNodes[1].firstChild.childNodes[1].firstChild;\r\n\t\t\t\t\tme.foot = Cmp.get(dom);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(isO(btns) && !isA(btns)){\r\n\t\t\t\t\t\tbtns = [btns];\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar i=0,len = btns.length, b;\r\n\t\t\t\t\tfor(;i<len;i++){\r\n\t\t\t\t\t\tb = btns[i];\r\n\t\t\t\t\t\tif(isO(b)){\r\n\t\t\t\t\t\t\tif(!isF(b.render)){\r\n\t\t\t\t\t\t\t\tb = new Button(b);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tb.render(me.foot);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 初始化改变大小事件\r\n\t\t\t\t */\r\n\t\t\t\tinitResizeEvent : function(boxDom){\r\n\t\t\t\t\tvar me = this,el,\r\n\t\t\t\t\t\tdom = boxDom.childNodes[1].firstChild,\r\n\t\t\t\t\t\tels = {};\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t//向左\r\n\t\t\t\t\tel = Cmp.get(dom.firstChild);\r\n\t\t\t\t\tel.on('mousedown', onMouseDownByResize, me);\r\n\t\t\t\t\tels.l = el;\r\n\t\t\t\t\t\r\n\t\t\t\t\t//向右\r\n\t\t\t\t\tel = Cmp.get(dom.childNodes[2]);\r\n\t\t\t\t\tel.on('mousedown', onMouseDownByResize, me);\r\n\t\t\t\t\tels.r = el;\r\n\t\t\t\t\t\r\n\t\t\t\t\t//向左下\r\n\t\t\t\t\tel = Cmp.get(dom.childNodes[3]);\r\n\t\t\t\t\tel.on('mousedown', onMouseDownByResize, me);\r\n\t\t\t\t\tels.bl = el;\r\n\t\t\t\t\t//向下\r\n\t\t\t\t\tel = Cmp.get(dom.childNodes[4]);\r\n\t\t\t\t\tel.on('mousedown', onMouseDownByResize, me);\r\n\t\t\t\t\tels.b = el;\r\n\t\t\t\t\t\r\n\t\t\t\t\t//向右下\r\n\t\t\t\t\tel = Cmp.get(dom.childNodes[5]);\r\n\t\t\t\t\tel.on('mousedown', onMouseDownByResize, me);\r\n\t\t\t\t\tels.b = el;\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.resizeBoxs = els;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @rewrite\r\n\t\t\t\t */\r\n\t\t\t\tdoDestroy : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tsuperClass.doDestroy.call(me);\r\n\t\t\t\t\t//TODO 移除me.resizeBoxs中的监听事件。\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 分发窗口大小变化事件，并调用onResize方法\r\n\t\t\t\t */\r\n\t\t\t\tfireResizeEvent : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\t\tw = me.el.getWidth(),\r\n\t\t\t\t\t\th = me.el.getHeight();\r\n\t\t\t\t\tme.onResize();\r\n\t\t\t\t\tme.fireEvent('resize', w, h, me);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n}());","/**\r\n * 录入控件基础类\r\n * @class Cmp.form.Field\r\n * @extend Cmp.Widget\r\n *\r\n * <p>\r\n * 构建时可以的属性配置说明如下：\r\n * @cfg {Object} value (可选)初始值。对于具有录入功能的初始值；默认为空的。\r\n * @cfg {String} emptyText (可选)录入控件中的值为空时，出现的提示文字；默认为空的。\r\n * @cfg {String} label (可选)显示标签文字，默认为空的。\r\n * @cfg {String} name (可选)录入值的属性名设定，默认为空的。\r\n * @cfg {Boolean} disabled (可选)等于true时认为初始时为失效的，即不可录入值。默认为false。\r\n * @cfg {Boolean} hideLabel (可选)等于true时，不会绘制标签文字。默认为false\r\n * @cfg {String/Number} labelWidth (可选)标签文字，占用的宽度，如果是一个数值则认为配置的是像素级别的宽度值。默认为: '5rem'；\r\n * </p>\r\n *\r\n * @version 3.0.0\r\n * @since 2016-05-31\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\r\n\tCmp.define('Cmp.form.Field',{\r\n\t\textend : 'Cmp.Widget',\r\n\t\tcls : true,\r\n\t\tfactory : function(ext, reqs){\r\n\t\t\tvar superClazz = ext.prototype;\r\n\t\t\t\r\n\t\t\treturn Cmp.extend(ext, {\r\n\t\t\t\t/**\r\n\t\t\t\t * 置为可用状态\r\n\t\t\t\t */\r\n\t\t\t\tenable : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.disabled){\r\n\t\t\t\t\t\tme.doEnable();\r\n\t\t\t\t\t\tme.disabled = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 置为不可用状态\r\n\t\t\t\t * @final 子类不可重写，需要实现请重写#doDisable()方法\r\n\t\t\t\t */\r\n\t\t\t\tdisable : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(!me.disabled){\r\n\t\t\t\t\t\tme.doDisable();\r\n\t\t\t\t\t\tme.disabled = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 返回true表示当前空间处于失效状态\r\n\t\t\t\t */\r\n\t\t\t\tisDisabled : function(){\r\n\t\t\t\t\treturn this.disabled;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @abstract\r\n\t\t\t\t * 设定值\r\n\t\t\t\t * @param {Object} value\r\n\t\t\t\t */\r\n\t\t\t\tsetValue : Cmp.emptyFn,\r\n\t\t\t\t/**\r\n\t\t\t\t * @abstract\r\n\t\t\t\t * 获得当前录入的值\r\n\t\t\t\t * @return {Object} value\r\n\t\t\t\t */\r\n\t\t\t\tgetValue : Cmp.emptyFn,\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tinitComponent : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tvar cls = ['c-fd'];\r\n\t\t\t\t\tif(isS(me.cls)){\r\n\t\t\t\t\t\tcls.push(me.cls);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(isA(me.cls)){\r\n\t\t\t\t\t\tcls = cls.concat(me.cls);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.cls = cls;\r\n\t\t\t\t\tsuperClazz.initComponent.call(me);\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.addEvents(\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * 当值发生改变时，分发此事件。\r\n\t\t\t\t\t\t * @param {Object} value 变化后的值\r\n\t\t\t\t\t\t * @param {Field} this\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t'changed'\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tdoRender : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tsuperClazz.doRender.call(me);\r\n\t\t\t\t\t//\r\n\t\t\t\t\tme.hideLabel = !!me.hideLabel;\r\n\t\t\t\t\tvar el, lw = '0px';\r\n\t\t\t\t\tif(!me.hideLabel){\r\n\t\t\t\t\t\tlw = me.labelWidth;\r\n\t\t\t\t\t\tif(isN(lw)){\r\n\t\t\t\t\t\t\tlw = lw+'px'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!isS(lw)){\r\n\t\t\t\t\t\t\tlw = '5rem';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tel = me.el.createChild({\r\n\t\t\t\t\t\t\tcls : 'c-fd-lb',\r\n\t\t\t\t\t\t\tstyle : {\r\n\t\t\t\t\t\t\t\twidth : lw\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\thtml : '<strong>'+(me.label||'')+'</strong><i></i><b></b>'\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tme.labelBox = Cmp.get(el.dom.firstChild);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tel = me.el.createChild({\r\n\t\t\t\t\t\tcls : 'c-fd-inbox',\r\n\t\t\t\t\t\tstyle : {\r\n\t\t\t\t\t\t\tpaddingLeft : lw\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\thtml : '<div class=\"c-fd-inwarp\"></div>'\r\n\t\t\t\t\t});\r\n\t\t\t\t\tme.inputBox = Cmp.get(el.dom.firstChild);\r\n\t\t\t\t\tme.renderInput(me.inputBox);\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.errorBox = me.inputBox.createChild({\r\n\t\t\t\t\t\tcls : 'c-fd-error-msg'\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.el.setStyle({\r\n\t\t\t\t\t\tminWidth : lw\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\tel = !!me.disabled;\r\n\t\t\t\t\tme.disabled = false;\r\n\t\t\t\t\tif(el){\r\n\t\t\t\t\t\tme.disable();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(me.value != undefined){\r\n\t\t\t\t\t\tel = me.value;\r\n\t\t\t\t\t\tme.value = undefined;\r\n\t\t\t\t\t\tme.setValue(el);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 执行将本空间置为可用状态样式的切换实现方法\r\n\t\t\t\t * 子类重写时需要先调用超类\r\n\t\t\t\t */\r\n\t\t\t\tdoEnable : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.el){\r\n\t\t\t\t\t\tme.el.removeClass('c-fd-disabled');\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 执行将本空间置为失效状态样式的切换实现方法\r\n\t\t\t\t * 子类重写时需要先调用超类\r\n\t\t\t\t */\r\n\t\t\t\tdoDisable : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.el){\r\n\t\t\t\t\t\tme.el.addClass('c-fd-disabled');\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 设置到错误状态，并显示指定的错误信息\r\n\t\t\t\t */\r\n\t\t\t\tshowError : function(msg){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(!me._hasError){\r\n\t\t\t\t\t\tme._hasError = true;\r\n\t\t\t\t\t\tme.el.addClass('c-fd-error');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.updateErrorMsg(msg);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 退出错误状态，并隐藏指定的错误信息。\r\n\t\t\t\t */\r\n\t\t\t\thideError : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me._hasError){\r\n\t\t\t\t\t\tme._hasError = false;\r\n\t\t\t\t\t\tme.el.removeClass('c-fd-error');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.updateErrorMsg();\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 更新错误信息。\r\n\t\t\t\t */\r\n\t\t\t\tupdateErrorMsg : function(msg){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.errorBox){\r\n\t\t\t\t\t\tme.errorBox.update(msg||'');\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @abstract\r\n\t\t\t\t * @private\r\n\t\t\t\t * 子类负责实现的绘制录入控件\r\n\t\t\t\t *\r\n\t\t\t\t * @param {Element} el 渲染Input控件的承载Dom封装对象;它为一个div节点。\r\n\t\t\t\t */\r\n\t\t\t\trenderInput : Cmp.emptyFn\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n}());","/**\r\n * 单行文字录入控件类\r\n * @class Cmp.form.TextField\r\n * @extend Cmp.form.Field\r\n *\r\n * <p>\r\n * 构建时可以的属性配置说明如下：\r\n * @cfg {Object} value (可选)初始值。对于具有录入功能的初始值；默认为空的。\r\n * @cfg {String} emptyText (可选)录入控件中的值为空时，出现的提示文字；默认为空的。\r\n * @cfg {String} label (可选)显示标签文字，默认为空的。\r\n * @cfg {String} name (可选)录入值的属性名设定，默认为空的。\r\n * @cfg {Boolean} disabled (可选)等于true时认为初始时为失效的，即不可录入值。默认为false。\r\n * @cfg {Boolean} hideLabel (可选)等于true时，不会绘制标签文字。默认为false\r\n * @cfg {String/Number} labelWidth (可选)标签文字，占用的宽度，如果是一个数值则认为配置的是像素级别的宽度值。默认为: '5rem'；\r\n * @cfg {Boolean} readOnly 等于true时，为只读状态。\r\n * </p>\r\n *\r\n * @version 3.0.0\r\n * @since 2016-05-31\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\t\r\n\tCmp.define('Cmp.form.TextField',{\r\n\t\textend : 'Cmp.form.Field',\r\n\t\tcls : true,\r\n\t\t\r\n\t\tfactory : function(ext, reqs){\r\n\t\t\tvar superClazz = ext.prototype;\r\n\t\t\t\r\n\t\t\treturn Cmp.extend(ext, {\r\n\t\t\t\t/**\r\n\t\t\t\t * 获得当前录入的值\r\n\t\t\t\t * @return {String} value 录入值\r\n\t\t\t\t */\r\n\t\t\t\tgetValue : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.input){\r\n\t\t\t\t\t\treturn me.input.dom.value;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\treturn me.value;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsetValue : function(value){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.input){\r\n\t\t\t\t\t\tme.input.dom.value = value || '';\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 设定当前录入控件的 readOnly状态值\r\n\t\t\t\t */\r\n\t\t\t\tsetReadOnly : function(readOnly){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\treadOnly = !!readOnly;\r\n\t\t\t\t\tif(me.input){\r\n\t\t\t\t\t\tif(readOnly){\r\n\t\t\t\t\t\t\tme.input.dom.readOnly = true;\r\n\t\t\t\t\t\t\tme.inputBox.addClass('c-fd-readonly');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tme.input.dom.readOnly = false;\r\n\t\t\t\t\t\t\tme.inputBox.removeClass('c-fd-readonly');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.readOnly = readOnly;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tinitComponent : function(){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tcls = me.cls;\r\n\t\t\t\t\tif(isA(cls)){\r\n\t\t\t\t\t\tcls.unshift('c-tfd');\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(isS(cls)){\r\n\t\t\t\t\t\tcls = ['c-tfd', cls];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tcls = 'c-tfd';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.cls = cls;\r\n\t\t\t\t\tsuperClazz.initComponent.call(me);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\trenderInput : function(box){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tsuperClazz.renderInput.call(me, box);\r\n\t\t\t\t\tme.input = box.createChild({\r\n\t\t\t\t\t\ttag : 'input',\r\n\t\t\t\t\t\tatts : {\r\n\t\t\t\t\t\t\tplaceholder : me.emptyText || '',\r\n\t\t\t\t\t\t\ttype : 'password' === me.type ? 'password' : 'text',\r\n\t\t\t\t\t\t\tname : me.name || '',\r\n\t\t\t\t\t\t\tmaxLength : me.maxLength || undefined\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(me.readOnly){\r\n\t\t\t\t\t\tme.input.dom.readOnly = true;\r\n\t\t\t\t\t\tbox.addClass('c-fd-readonly');\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.input.on('blur', me.onInputBlur, me);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(me.value){\r\n\t\t\t\t\t\tvar v = me.value;\r\n\t\t\t\t\t\tdelete me.value;\r\n\t\t\t\t\t\tme.setValue(v);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 响应录入失去焦点时的处理方法。\r\n\t\t\t\t */\r\n\t\t\t\tonInputBlur : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tme.fireEvent('changed', me.getValue(), me);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tdoDisable : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tsuperClazz.doDisable.call(me);\r\n\t\t\t\t\tme.input.dom.disabled = true;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tdoEnable : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tsuperClazz.doEnable.call(me);\r\n\t\t\t\t\tme.input.dom.disabled = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n}());","/**\r\n * 具有触发器的录入控件；该控件为一个抽象实现类\r\n * @class Cmp.form.Trigger\r\n * @extend Cmp.form.TextField\r\n * \r\n * <p>\r\n * 构建时可以的属性配置说明如下：\r\n * @cfg {Object} value (可选)初始值。对于具有录入功能的初始值；默认为空的。\r\n * @cfg {String} emptyText (可选)录入控件中的值为空时，出现的提示文字；默认为空的。\r\n * @cfg {String} label (可选)显示标签文字，默认为空的。\r\n * @cfg {String} name (可选)录入值的属性名设定，默认为空的。\r\n * @cfg {Boolean} disabled (可选)等于true时认为初始时为失效的，即不可录入值。默认为false。\r\n * @cfg {Boolean} hideLabel (可选)等于true时，不会绘制标签文字。默认为false\r\n * @cfg {String/Number} labelWidth (可选)标签文字，占用的宽度，如果是一个数值则认为配置的是像素级别的宽度值。默认为: '5rem'；\r\n * @cfg {Boolean} readOnly 等于true时，为只读状态。\r\n * @cfg {String} btnIcon 触发器按钮图标的自定义样式名，默认为undefined；如果自行定义，需要注意该图标在禁用时的样式。\r\n * \t\t\t\t如：设定CSS为：'my-btn-icon'；则禁用时的CSS为 '.c-fd-disabled .my-btn-icon'\r\n * @cfg {String} btnType 触发器按钮图标类型，当没有设定btnIcon值时有效；可以设定的有:\r\n * \t\t\t\t'search'|'left'|'right'|'up'|'down'|'calendar'|'gear'; 默认为为：'search'\r\n * </p>\r\n * \r\n * @version 3.0.0\r\n * @since 2016-05-31\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\tvar ICON_MAP = {\r\n\t\t'search' : 'fa-search',\r\n\t\t'left' : 'fa-angle-left',\r\n\t\t'right' : 'fa-angle-right',\r\n\t\t'up' : 'fa-angle-up',\r\n\t\t'down' : 'fa-angle-down',\r\n\t\t'calendar' : 'fa-calendar',\r\n\t\t'gear' : 'gear'\r\n\t};\r\n\r\n\tCmp.define('Cmp.form.Trigger',{\r\n\t\textend : 'Cmp.form.TextField',\r\n\t\tcls : true,\r\n\t\t\r\n\t\tfactory : function(ext, reqs){\r\n\t\t\tvar superClazz = ext.prototype;\r\n\t\t\t\r\n\t\t\treturn Cmp.extend(ext, {\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tinitComponent : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tvar cls = ['c-trg'];\r\n\t\t\t\t\tif(isS(me.cls)){\r\n\t\t\t\t\t\tcls.push(me.cls);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(isA(me.cls)){\r\n\t\t\t\t\t\tcls = cls.concat(me.cls);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.cls = cls;\r\n\t\t\t\t\tsuperClazz.initComponent.call(me);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\trenderInput : function(box){\r\n\t\t\t\t\tvar me = this,cls = ['c-trg-btn','fa'];\r\n\t\t\t\t\tsuperClazz.renderInput.call(me, box);\r\n\t\t\t\t\tif(isA(me.btnIcon)){\r\n\t\t\t\t\t\tcls = cls.concat(me.btnIcon);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(isS(me.btnIcon)){\r\n\t\t\t\t\t\tcls.push(me.btnIcon);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tcls.push(ICON_MAP[me.btnType] || ICON_MAP['search']);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.trigetBtn = box.createChild({\r\n\t\t\t\t\t\tcls : cls\r\n\t\t\t\t\t});\r\n\t\t\t\t\tme.trigetBtn.on('click', me.onClickTrigger, me);\r\n\t\t\t\t\tif(me.readOnly){\r\n\t\t\t\t\t\tme.input.on('click', me.onClickTrigger, me);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @final 子类不要重写该方法\r\n\t\t\t\t */\r\n\t\t\t\tonClickTrigger : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(!me.disaebed){\r\n\t\t\t\t\t\tme.doClickTrigger();\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @abstract 该方法需要子类实现剩余功能。\r\n\t\t\t\t * 当不在失效状态且点击了触发器所调用方法。如果当前处于readOnly状态，那么在点击录入控件时也会调用该方法。\r\n\t\t\t\t */\r\n\t\t\t\tdoClickTrigger : Cmp.emptyFn\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n}());","/**\r\n * @class Cmp.form.DateField\r\n * @extend Cmp.form.Trigger\r\n * \r\n * 日期选择控件实现类\r\n * <p>\r\n * 构建时可以的属性配置说明如下：\r\n * @cfg {Object} value (可选)初始值。对于具有录入功能的初始值；默认为空的。\r\n * @cfg {String} emptyText (可选)录入控件中的值为空时，出现的提示文字；默认为空的。\r\n * @cfg {String} label (可选)显示标签文字，默认为空的。\r\n * @cfg {String} name (可选)录入值的属性名设定，默认为空的。\r\n * @cfg {Boolean} disabled (可选)等于true时认为初始时为失效的，即不可录入值。默认为false。\r\n * @cfg {Boolean} hideLabel (可选)等于true时，不会绘制标签文字。默认为false\r\n * @cfg {String/Number} labelWidth (可选)标签文字，占用的宽度，如果是一个数值则认为配置的是像素级别的宽度值。默认为: '5rem'；\r\n * @cfg {Boolean} readOnly 等于true时，为只读状态。\r\n * @cfg {Date} minValue 最早日期值设定，默认为：1970-01-01\r\n * @cfg {Date} maxValue 最晚日期值设定，默认为：2099-01-01\r\n * </p>\r\n */\r\n(function(){\r\n\t\r\n\tvar dateList;\r\n\t\r\n\tvar getDateList = function(listClazz){\r\n\t\tif(dateList){\r\n\t\t\treturn dateList;\r\n\t\t}\r\n\t\tvar rel = {\r\n\t\t\twarp : Cmp.getBody().createChild({cls:'c-datefield-listwarp'}),\r\n\t\t\tdataList : new listClazz({\r\n\t\t\t\tcls : 'c-detelist-tlarrow'\r\n\t\t\t}),\r\n\t\t\tmask : Cmp.getBody().createMask('ComboxMask', 900000),\r\n\t\t\tshowed : false\r\n\t\t};\r\n\t\trel.invokeCallback = function(date){\r\n\t\t\tif(isF(rel.callback)){\r\n\t\t\t\trel.callback.call(rel.scope, date);\r\n\t\t\t}\r\n\t\t}\r\n\t\trel.dataList.on('clickday', rel.invokeCallback, rel);\r\n\t\trel.warp.setHideModal('display');\r\n\t\trel.dataList.render(rel.warp);\r\n\t\trel.warp.hide();\r\n\t\t\r\n\t\t/**\r\n\t\t * 设定选中的时间\r\n\t\t * @param {Data} date 时间对象；如果不设定，则说明没有被选中的。\r\n\t\t */\r\n\t\trel.setValue = function(value, refresh){\r\n\t\t\trel.dataList.setValue(value, refresh);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * 设定取值范围\r\n\t\t * @param {Date} min 最早日期设定，默认为: 1970年1月1日\r\n\t\t * @param {Date} max 最晚日期设定，默认为: 2099年12月31日\r\n\t\t */\r\n\t\trel.setValueRange = function(min, max){\r\n\t\t\trel.dataList.setValueRange(min, max);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * 返回true表示DataList已经显示\r\n\t\t * \r\n\t\t */\r\n\t\trel.isShowed = function(){\r\n\t\t\treturn rel.showed;\r\n\t\t}\r\n\t\trel.hide = function(){\r\n\t\t\tvar me = this;\r\n\t\t\trel.showed = false;\r\n\t\t\trel.warp.hide();\r\n\t\t\trel.mask.hide();\r\n\t\t\trel.mask.un('click', rel.invokeCallback, rel);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * 在指定的位置显示，并绑定回调方法。\r\n\t\t * @param {Array} xy 格式如[left,top]的位置数据\r\n\t\t * @param {Function} callback 绑定的回调方法\r\n\t\t * @param {Object} scope 调用回调方法时的this对象设定。\r\n\t\t */\r\n\t\trel.show = function(xy, callback, scope){\r\n\t\t\tif(rel.isShowed()){\r\n\t\t\t\treturn ;\r\n\t\t\t}\r\n\t\t\trel.showed = true;\r\n\t\t\trel.warp.setStyle({\r\n\t\t\t\tleft : xy[0]+'px',\r\n\t\t\t\ttop : xy[1]+'px'\r\n\t\t\t});\r\n\t\t\trel.warp.show();\r\n\t\t\trel.mask.show();\r\n\t\t\trel.mask.on('click', rel.invokeCallback, rel);\r\n\t\t\trel.callback = callback;\r\n\t\t\trel.scope = scope;\r\n\t\t}\r\n\t\t\r\n\t\tdateList = rel;\r\n\t\treturn dateList;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tvar toString = function(date){\r\n\t\tvar rel = [],v;\r\n\t\trel.push(date.getFullYear());\t\r\n\t\trel.push('年');\r\n\t\tv = date.getMonth()+1;\r\n\t\tif(v < 10){\r\n\t\t\trel.push('0');\t\r\n\t\t}\r\n\t\trel.push(v);\t\r\n\t\trel.push('月');\r\n\t\tv = date.getDate();\r\n\t\tif(v < 10){\r\n\t\t\trel.push('0');\t\r\n\t\t}\r\n\t\trel.push(v);\t\r\n\t\trel.push('日');\r\n\t\t\r\n\t\treturn rel.join('');\r\n\t}\r\n\t\r\n\tvar equals = function(d1, d2){\r\n\t\tif(d1 === d2){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tCmp.define('Cmp.form.DateField',{\r\n\t\textend : 'Cmp.form.Trigger',\r\n\t\trequires : [\r\n\t\t\t'Cmp.DateList'\r\n\t\t],\r\n\t\tcls : true,\r\n\t\tfactory : function(ext, reqs){\r\n\t\t\tvar superClazz = ext.prototype,\r\n\t\t\t\tdateListClazz = reqs[0];\r\n\t\t\treturn Cmp.extend(ext, {\r\n\t\t\t\t/**\r\n\t\t\t\t * @public\r\n\t\t\t\t * 设定最早日期，\r\n\t\t\t\t * @param {Date} minValue 最早日期值设定，默认为：1970-01-01\r\n\t\t\t\t */\r\n\t\t\t\tsetMinValue : function(minValue){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tme.setValueRange(minValue, me.maxValue);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @public\r\n\t\t\t\t * 设定最早日期，\r\n\t\t\t\t * @param {Date} maxValue 最晚日期值设定，默认为：2099-01-01\r\n\t\t\t\t */\r\n\t\t\t\tsetMaxValue : function(maxValue){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tme.setValueRange(me.minValue, maxValue);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @public\r\n\t\t\t\t * 设定取值范围\r\n\t\t\t\t * @param {Date} minValue 最早日期值设定，默认为：1970-01-01\r\n\t\t\t\t * @param {Date} maxValue 最晚日期值设定，默认为：2099-01-01\r\n\t\t\t\t */\r\n\t\t\t\tsetValueRange : function(minValue, maxValue){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tv = minValue;\r\n\t\t\t\t\tif(!isD(v)){\r\n\t\t\t\t\t\tv = new Date(1970,0,1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.minValue = v;\r\n\t\t\t\t\tv = maxValue;\r\n\t\t\t\t\tif(!isD(v)){\r\n\t\t\t\t\t\tv = new Date(2099, 11, 31);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.maxValue = v;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(me.minValue.getTime() > me.maxValue.getTime()){\r\n\t\t\t\t\t\tv = me.minValue;\r\n\t\t\t\t\t\tme.minValue = me.maxValue;\r\n\t\t\t\t\t\tme.maxValue = v;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tv = me.value; \r\n\t\t\t\t\tif(isD(v)){\r\n\t\t\t\t\t\tv = v.getTime(); \r\n\t\t\t\t\t\tif(v > me.maxValue.getTime()){\r\n\t\t\t\t\t\t\tme.value = me.maxValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if(v < me.minValue.getTime()){\r\n\t\t\t\t\t\t\tme.value = me.minValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tgetValue : function(){\r\n\t\t\t\t\treturn this.value;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tsetValue : function(value){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(isD(value)){\r\n\t\t\t\t\t\tme.value = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tme.value = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(me.input){\r\n\t\t\t\t\t\tme.input.dom.value = me.value ? toString(me.value) : '';\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tinitComponent : function(){\r\n\t\t\t\t\tvar me = this,v;\r\n\t\t\t\t\tme.btnType = 'calendar';\r\n\t\t\t\t\tme.readOnly = true;\r\n\t\t\t\t\tv = me.cls;\r\n\t\t\t\t\tif(isA(v)){\r\n\t\t\t\t\t\tv.unshift('c-datefield');\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(isS(v)){\r\n\t\t\t\t\t\tv = ['c-datefield', v];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tv = 'c-datefield';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.cls = v;\r\n\t\t\t\t\t\r\n\t\t\t\t\tsuperClazz.initComponent.call(me);\r\n\t\t\t\t\tv = me.minValue;\r\n\t\t\t\t\tif(!isD(v)){\r\n\t\t\t\t\t\tv = new Date(1970,0,1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.minValue = v;\r\n\t\t\t\t\t\r\n\t\t\t\t\tv = me.maxValue;\r\n\t\t\t\t\tif(!isD(v)){\r\n\t\t\t\t\t\tv = new Date(2099, 11, 31);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.maxValue = v;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(me.minValue.getTime() > me.maxValue.getTime()){\r\n\t\t\t\t\t\tv = me.minValue;\r\n\t\t\t\t\t\tme.minValue = me.maxValue;\r\n\t\t\t\t\t\tme.maxValue = v;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.addEvents(\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * 当展开的日期列表被收缩后，分发此事件\r\n\t\t\t\t\t\t * @param {DateField} this\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t'collect',\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * 当日期列表被展开显示后，分发此事件\r\n\t\t\t\t\t\t * @param {DateField} this\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t'extend'\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tdoClickTrigger : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(me.extended){\r\n\t\t\t\t\t\tme.doCollect();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tme.doExtend();\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t */\r\n\t\t\t\tdoExtend : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(!me.extended){\r\n\t\t\t\t\t\tme.extended = true;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar list = me.getDateList(),\r\n\t\t\t\t\t\t\th = me.input.getHeight(),\r\n\t\t\t\t\t\t\txy = me.input.getXY();\r\n\t\t\t\t\t\tlist.setValueRange(me.minValue, me.maxValue);\t\r\n\t\t\t\t\t\tlist.setValue(me.getValue(), true);\r\n\t\t\t\t\t\tlist.show([xy[0], xy[1]+h], me.doListCallback, me);\r\n\t\t\t\t\t\tme.el.addClass('c-datefield-extended');\r\n\t\t\t\t\t\tme.fireEvent('extend', me);\r\n\t\t\t\t\t}\t\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t */\r\n\t\t\t\tdoListCallback : function(value){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tov = me.value;\r\n\t\t\t\t\tif(isD(value)){\r\n\t\t\t\t\t\tme.value = value;\r\n\t\t\t\t\t\tme.input.dom.value = toString(value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.doCollect();\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(isD(value) && !equals(ov, value)){\r\n\t\t\t\t\t\tme.fireEvent('changed', value, ov, me);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t */\r\n\t\t\t\tdoCollect : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(!!me.extended){\r\n\t\t\t\t\t\tme.extended = false;\r\n\t\t\t\t\t\tvar list = me.getDateList();\r\n\t\t\t\t\t\tlist.hide();\r\n\t\t\t\t\t\tme.el.removeClass('c-datefield-extended');\r\n\t\t\t\t\t\tme.fireEvent('collect', me);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t */\r\n\t\t\t\tgetDateList : function(){\r\n\t\t\t\t\treturn getDateList(dateListClazz);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n}());","/**\r\n * @class Cmp.form.DateRange\r\n * @extend Cmp.form.Field\r\n * 可以输入两个日期，表示开始日期和结束日期的录入控件\r\n *\r\n * <p>\r\n * 构建时可以的属性配置说明如下：\r\n * @cfg {Object} value (可选)初始值。对于具有录入功能的初始值；默认为空的。\r\n * @cfg {String} label (可选)显示标签文字，默认为空的。\r\n * @cfg {String} name (可选)录入值的属性名设定，默认为空的。\r\n * @cfg {Boolean} disabled (可选)等于true时认为初始时为失效的，即不可录入值。默认为false。\r\n * @cfg {Boolean} hideLabel (可选)等于true时，不会绘制标签文字。默认为false\r\n * @cfg {String/Number} labelWidth (可选)标签文字，占用的宽度，如果是一个数值则认为配置的是像素级别的宽度值。默认为: '9rem'；\r\n * @cfg {String/Number} inputWidth (可选)每个日期录入控件所占用的宽度，如果是一个数值则认为配置的是像素级别的宽度值。默认为: '9rem'；\r\n * @cfg {String} startEmptyText (可选)开始日期录入控件中的值为空时，出现的提示文字；默认为'起始日期'。\r\n * @cfg {String} endEmptyText (可选)结束日期录入控件中的值为空时，出现的提示文字；默认为'截止日期'。\r\n * @cfg {String} text (可选)开始日期与结束日期录入控件之间的文字；默认为'至'\r\n * @cfg {Date} minValue 日期范围中的最早日期值设定，默认为：1970-01-01\r\n * @cfg {Date} maxValue 日期范围中的最晚日期值设定，默认为：2099-12-31\r\n * \r\n * </p>\r\n *\r\n * @version 3.0.0\r\n * @since 2016-05-31\r\n * @author Jinhai\r\n */\r\n (function(){\r\n \t//一天所经历的毫秒数\r\n \tvar DAY_TIMES = 86400000;\r\n \t/**\r\n \t * 获得指定日期的下一天日期值\r\n \t */\r\n \tvar toNextDay = function(d){\r\n \t\tvar t = d.getTime() + DAY_TIMES;\r\n \t\treturn new Date(t);\r\n \t}\r\n \t/**\r\n \t * 获得指定日期的上一天日期值\r\n \t */\r\n \tvar toBackDay = function(d){\r\n \t\tvar t = d.getTime() - DAY_TIMES;\r\n \t\treturn new Date(t);\r\n \t}\r\n \r\n \tCmp.define('Cmp.form.DateRange',{\r\n \t\textend : 'Cmp.form.Field',\r\n \t\trequires : [\r\n\t\t\t'Cmp.form.DateField'\r\n\t\t],\r\n\t\tcls : true,\r\n\t\tfactory : function(ext, reqs){\r\n\t\t\tvar superClazz = ext.prototype,\r\n\t\t\t\tdateFieldClazz = reqs[0];\r\n\t\t\t\r\n\t\t\treturn Cmp.extend(ext, {\r\n\t\t\t\t/**\r\n\t\t\t\t * 设定日期设定范围，设定对象属性如下\r\n\t\t\t\t * \t{Date} minValue 日期范围中的最早日期值设定，默认为：1970-01-01\r\n\t\t\t\t * \t{Date} maxValue 日期范围中的最晚日期值设定，默认为：2099-12-31\r\n\t\t\t\t * \r\n\t\t\t\t * @param {Object} range 日期范围设定\r\n\t\t\t\t */\r\n\t\t\t\tsetValueRange : function(range){\r\n\t\t\t\t\trange = range || {};\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tmin = isD(range.minValue) ? range.minValue : new Date(1970,0,1),\r\n\t\t\t\t\t\tmax = isD(range.maxValue) ? range.maxValue : new Date(2099,11, 31),\r\n\t\t\t\t\t\tsv,ev,time;\r\n\t\t\t\t\r\n\t\t\t\t\tme.minValue = min;\r\n\t\t\t\t\tme.maxValue = max;\r\n\t\t\t\t\r\n\t\t\t\t\tif(!me.startInput){\r\n\t\t\t\t\t\t//还没有绘制，则不再继续\r\n\t\t\t\t\t\treturn ;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tmin = min.getTime(),\r\n\t\t\t\t\tmax = max.getTime(),\r\n\t\t\t\t\tsv = me.startInput.getValue(),\r\n\t\t\t\t\tev = me.endInput.getValue();\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(sv){\r\n\t\t\t\t\t\t//如果开始日期超出范围，则设定值为最早日期为它的值\r\n\t\t\t\t\t\ttime = sv.getTime();\r\n\t\t\t\t\t\tif(time < min || time > max){\r\n\t\t\t\t\t\t\tme.startInput.setValue(me.minValue);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} \r\n\t\t\t\t\t\r\n\t\t\t\t\tif(ev){\r\n\t\t\t\t\t\t//如果结束日期超出范围，则设定最晚日期为它的值\r\n\t\t\t\t\t\ttime = ev.getTime();\r\n\t\t\t\t\t\tif(time < min || time > max){\r\n\t\t\t\t\t\t\tme.endInput.setValue(me.maxValue);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t//设定开始日期和结束日期的范围\r\n\t\t\t\t\tme.startInput.setValueRange(me.minValue, toBackDay(me.maxValue));\r\n\t\t\t\t\tme.endInput.setValueRange(toNextDay(me.minValue), me.maxValue);\r\n\t\t\t\t\t\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 设定值;为一个对象，属性说明如下：\r\n\t\t\t\t * \t{Date} start : 开始日期，默认为空的\r\n\t\t\t\t * \t{Date} end : 结束日期，默认为空的\r\n\t\t\t\t * \r\n\t\t\t\t * @param {Object} value \r\n\t\t\t\t */\r\n\t\t\t\tsetValue : function(value){\r\n\t\t\t\t\tvalue = value || {};\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tsv = value.start,\r\n\t\t\t\t\t\tev = value.end;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(me.startInput && me.endInput){\r\n\t\t\t\t\t\tme.startInput.setValue(sv);\r\n\t\t\t\t\t\tif(isD(sv)){\r\n\t\t\t\t\t\t\tme.endInput.setMinValue(toNextDay(sv));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tme.endInput.setMinValue(toNextDay(me.minValue));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tme.endInput.setValue(ev);\r\n\t\t\t\t\t\tif(isD(ev)){\r\n\t\t\t\t\t\t\tme.startInput.setMaxValue(toBackDay(ev));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tme.startInput.setMaxValue(toBackDay(me.maxValue));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\t//还没有绘制 \r\n\t\t\t\t\t\tme.value = value;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 获得当前录入的值\r\n\t\t\t\t * @return {Object} value 为一个对象，属性说明如下：\r\n\t\t\t\t * \t{Date} start : 开始日期\r\n\t\t\t\t * \t{Date} end : 结束日期\r\n\t\t\t\t */\r\n\t\t\t\tgetValue : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.startInput && me.endInput){\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tstart : me.startInput.getValue(),\r\n\t\t\t\t\t\t\tend : me.endInput.getValue()\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\treturn me.value;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tinitComponent : function(){\r\n\t\t\t\t\tvar me = this,v,cls;\r\n\t\t\t\t\tcls = ['c-daterange'];\r\n\t\t\t\t\tif(isS(me.cls)){\r\n\t\t\t\t\t\tcls.push(me.cls);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(isA(me.cls)){\r\n\t\t\t\t\t\tcls = cls.concat(me.cls);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.cls = cls;\r\n\t\t\t\t\tsuperClazz.initComponent.call(me);\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tv = me.minValue;\r\n\t\t\t\t\tif(!isD(v)){\r\n\t\t\t\t\t\tv = new Date(1970,0,1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.minValue = v;\r\n\t\t\t\t\t\r\n\t\t\t\t\tv = me.maxValue;\r\n\t\t\t\t\tif(!isD(v)){\r\n\t\t\t\t\t\tv = new Date(2099, 11, 31);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.maxValue = v;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @abstract\r\n\t\t\t\t * @private\r\n\t\t\t\t * 子类负责实现的绘制录入控件\r\n\t\t\t\t *\r\n\t\t\t\t * @param {Element} el 渲染Input控件的承载Dom封装对象;它为一个div节点。\r\n\t\t\t\t */\r\n\t\t\t\trenderInput : function(el){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tsuperClazz.renderInput.call(me, el);\r\n\t\t\t\t\tvar w = me.inputWidth;\r\n\t\t\t\t\tif(isN(w)){\r\n\t\t\t\t\t\tw = w+'px';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.startBox = el.createChild({\r\n\t\t\t\t\t\tcls : 'c-daterange-start'\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.textBox = el.createChild({\r\n\t\t\t\t\t\ttag : 'span',\r\n\t\t\t\t\t\tcls : 'c-daterange-text',\r\n\t\t\t\t\t\thtml : me.text || '至'\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.endBox = el.createChild({\r\n\t\t\t\t\t\tcls : 'c-daterange-end'\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(isS(w)){\r\n\t\t\t\t\t\tme.startBox.setStyle('width', w);\r\n\t\t\t\t\t\tme.endBox.setStyle('width', w);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.startInput = new dateFieldClazz({\r\n\t\t\t\t\t\thideLabel : true,\r\n\t\t\t\t\t\tminValue : me.minValue,\r\n\t\t\t\t\t\tmaxValue : toBackDay(me.maxValue), \r\n\t\t\t\t\t\temptyText : me.startEmptyText || '起始日期'\r\n\t\t\t\t\t});\r\n\t\t\t\t\tme.startInput.render(me.startBox);\r\n\t\t\t\t\tme.endInput = new dateFieldClazz({\r\n\t\t\t\t\t\thideLabel : true,\r\n\t\t\t\t\t\tminValue : toNextDay(me.minValue),\r\n\t\t\t\t\t\tmaxValue : me.maxValue, \r\n\t\t\t\t\t\temptyText : me.endEmptyText || '截止日期'\r\n\t\t\t\t\t});\r\n\t\t\t\t\tme.endInput.render(me.endBox);\r\n\t\t\t\t\t\r\n\t\t\t\t\t//开始控件与结束控件事件联动\r\n\t\t\t\t\tme.startInput.on('changed', me.onStartValueChanged, me);\r\n\t\t\t\t\tme.endInput.on('changed', me.onEndValueChanged, me);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(me.value){\r\n\t\t\t\t\t\tv = me.value;\r\n\t\t\t\t\t\tdelete me.value;\r\n\t\t\t\t\t\tme.setValue(v);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 响应开始日期值变化事件的处理方法\r\n\t\t\t\t */\r\n\t\t\t\tonStartValueChanged : function(newValue, oldValue, field){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\t//导致结束日期的最小日期变化\r\n\t\t\t\t\tme.endInput.setMinValue(toNextDay(newValue));\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 响应结束日期值变化事件的处理方法\r\n\t\t\t\t */\r\n\t\t\t\tonEndValueChanged : function(newValue, oldValue, field){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\t//导致开始日期的最晚日期变化\r\n\t\t\t\t\tme.startInput.setMaxValue(toBackDay(newValue));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n \t});\r\n }());","/**\r\n * @class Cmp.form.ComboBox\r\n * @extend Cmp.form.Trigger\r\n * \r\n * 下拉框单选控件实现类\r\n * <p>\r\n * 构建时可以的属性配置说明如下：\r\n * @cfg {Object} value (可选)初始值。对于具有录入功能的初始值；默认为空的。\r\n * @cfg {String} emptyText (可选)录入控件中的值为空时，出现的提示文字；默认为空的。\r\n * @cfg {String} label (可选)显示标签文字，默认为空的。\r\n * @cfg {String} name (可选)录入值的属性名设定，默认为空的。\r\n * @cfg {Boolean} disabled (可选)等于true时认为初始时为失效的，即不可录入值。默认为false。\r\n * @cfg {Boolean} hideLabel (可选)等于true时，不会绘制标签文字。默认为false\r\n * @cfg {String/Number} labelWidth (可选)标签文字，占用的宽度，如果是一个数值则认为配置的是像素级别的宽度值。默认为: '5rem'；\r\n * @cfg {Boolean} readOnly 等于true时，为只读状态。\r\n * @cfg {Array} options (可选)构建候选项的数据对象组成的数组。数组中每一个对象为一个候选项，候选项排列顺序等于数组顺序。\r\n *\t\t每一项的数据可以分成连中形式，一种是值；另一种是对象。\r\n *\t\t\t第一种范例：['','A','B','C'];\r\n *\t\t\t第二种范例：[{value:'',text:'不知道'},{value:'A',text:'选项A'}，{value:'B',text:'选项B'},{value:'C',text:'选项C'}]\r\n * </p>\r\n */\r\n(function(){\r\n\r\n\tCmp.define('Cmp.form.ComboBox',{\r\n\t\textend : 'Cmp.form.Trigger',\r\n\t\trequires : [\r\n\t\t\t'Cmp.util.ArrayTableModel'\r\n\t\t],\r\n\t\tcls : true,\r\n\t\tfactory : function(ext, reqs){\r\n\t\t\tvar superClazz = ext.prototype,\r\n\t\t\t\tmodelClazz = reqs[0];\r\n\t\t\t\r\n\t\t\treturn Cmp.extend(ext, {\r\n\t\t\t\t/**\r\n\t\t\t\t * @public\r\n\t\t\t\t * 重新设定选项；\r\n\t\t\t\t * @param {Array} ops 新设定选项\r\n\t\t\t\t */\r\n\t\t\t\tsetOptions : function(ops){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(!me.input){\r\n\t\t\t\t\t\tme.options = ops;\r\n\t\t\t\t\t\treturn ;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tvar\ti = 0,\r\n\t\t\t\t\t\tlen = isA(ops) ? ops.length : 0,\r\n\t\t\t\t\t\to,v,t,\r\n\t\t\t\t\t\tvs = [],\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\tfor(;i<len;i++){\r\n\t\t\t\t\t\to = ops[i];\r\n\t\t\t\t\t\tif(isO(o)){\r\n\t\t\t\t\t\t\tv = o.value;\r\n\t\t\t\t\t\t\tt = undefined === o.text ?  v : o.text;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if(isS(o)){\r\n\t\t\t\t\t\t\tt = v = o;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(undefined === v || null === v){\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(v === me.value){\r\n\t\t\t\t\t\t\tflag = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvs.push([v,t]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.data.reload(vs);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(flag){\r\n\t\t\t\t\t\t//之前设定的值还有效，无需处理\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\t//之前设定的值已经不存在于新的候选项中\r\n\t\t\t\t\t\tme.value = undefined;\r\n\t\t\t\t\t\tme.input.dom.value = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn me;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tsetValue : function(value){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.value === value){\r\n\t\t\t\t\t\treturn ;\r\n\t\t\t\t\t}\t\t\t\r\n\t\t\t\t\tme.value = value;\r\n\t\t\t\t\tif(me.data){\r\n\t\t\t\t\t\tvar v = me.data.find(me.valueIndex, value);\r\n\t\t\t\t\t\tif(v && v.length > 0){\r\n\t\t\t\t\t\t\tv = v[0];\r\n\t\t\t\t\t\t\tv = v.get(me.textIndex);\r\n\t\t\t\t\t\t\tme.input.dom.value = v;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar its = me.optionItems,\r\n\t\t\t\t\t\t\t\ti = 0, len = isA(its) ? its.length : 0,\r\n\t\t\t\t\t\t\t\tit,ix;\r\n\t\t\t\t\t\t\tfor(;i<len;i++){\r\n\t\t\t\t\t\t\t\tit = its[i];\r\n\t\t\t\t\t\t\t\tif(it.value === value){\r\n\t\t\t\t\t\t\t\t\tit.active();\r\n\t\t\t\t\t\t\t\t\tix = i;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\t\tit.unactive();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(ix > -1){\r\n\t\t\t\t\t\t\t\tme.activeOption = its[ix];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tif(me.activeOption){\r\n\t\t\t\t\t\t\t\tme.activeOption.unactive();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tme.input.dom.value = '';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.fireEvent('changed', value, me);\r\n\t\t\t\t},\t\r\n\t\t\t\t/**\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tgetValue : function(){\r\n\t\t\t\t\treturn this.value;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 根据传入的选项值，获得该选项值显示的文字；\r\n\t\t\t\t * @param {Object} value\r\n\t\t\t\t */\r\n\t\t\t\tgetTextByValue : function(value){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.data){\r\n\t\t\t\t\t\tvar r = me.data.getById(value);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn r ? r.get(me.textIndex) : value;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 收缩候选项列表\r\n\t\t\t\t */\r\n\t\t\t\tcollect : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.extended){\r\n\t\t\t\t\t\tme.extended = false;\r\n\t\t\t\t\t\tvar mask = me.getBodyMask();\r\n\t\t\t\t\t\tmask.hide();\r\n\t\t\t\t\t\tme.el.removeClass('c-cbx-extended');\r\n\t\t\t\t\t\tmask.un('click', me.collect, me);\r\n\t\t\t\t\t\tme.box.hide();\r\n\t\t\t\t\t}\r\n\t\t\t\t},\t\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 展开候选项列表\r\n\t\t\t\t */\r\n\t\t\t\textend : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(!me.extended){\r\n\t\t\t\t\t\tme.extended = true;\r\n\t\t\t\t\t\tvar w = me.input.getWidth(),\r\n\t\t\t\t\t\t\th = me.input.getHeight(),\r\n\t\t\t\t\t\t\txy = me.input.getXY();\r\n\t\t\t\t\t\tme.box.setLeftTop(xy[0], xy[1]+h);\t\r\n\t\t\t\t\t\tme.box.setWidth(w);\r\n\t\t\t\t\t\tme.box.show();\r\n\t\t\t\t\t\tme.el.addClass('c-cbx-extended');\r\n\t\t\t\t\t\twindow.setTimeout(function(){\r\n\t\t\t\t\t\t\tvar mask = me.getBodyMask();\r\n\t\t\t\t\t\t\tmask.show();\r\n\t\t\t\t\t\t\tmask.on('click', me.collect, me);\r\n\t\t\t\t\t\t}, 10);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tdoClickTrigger : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(me.extended){\r\n\t\t\t\t\t\tme.collect();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tme.extend();\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tinitComponent : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tvar cls = ['c-cbx'];\r\n\t\t\t\t\tif(isS(me.cls)){\r\n\t\t\t\t\t\tcls.push(me.cls);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(isA(me.cls)){\r\n\t\t\t\t\t\tcls = cls.concat(me.cls);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.cls = cls;\r\n\t\t\t\t\tme.readOnly = false !== me.readOnly;\r\n\t\t\t\t\tme.btnType = 'down';\r\n\t\t\t\t\tsuperClazz.initComponent.call(me);\r\n\t\t\t\t\t\r\n\t\t\t\t\t//构建数据\r\n\t\t\t\t\tif(!isO(me.data) || isA(me.options)){\r\n\t\t\t\t\t\tvar i=0, \r\n\t\t\t\t\t\t\tlen = isA(me.options) ? me.options.length : 0, \r\n\t\t\t\t\t\t\to,v,t, \r\n\t\t\t\t\t\t\tvs = [];\r\n\t\t\t\t\t\tfor(;i<len;i++){\r\n\t\t\t\t\t\t\to = me.options[i];\r\n\t\t\t\t\t\t\tif(isO(o)){\r\n\t\t\t\t\t\t\t\tv = o.value;\r\n\t\t\t\t\t\t\t\tt = o.text !== undefined ? o.text : v+'';\r\n\t\t\t\t\t\t\t\tvs.push([v,t]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\tv = o,\r\n\t\t\t\t\t\t\t\tt = v ? v+'' : '';\r\n\t\t\t\t\t\t\t\tvs.push([v,t]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tme.data = new modelClazz({\r\n\t\t\t\t\t\t\tkeies : ['value','text'],\r\n\t\t\t\t\t\t\tidIndex : 0,\r\n\t\t\t\t\t\t\tvalues : vs\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tme.valueIndex = 'value';\r\n\t\t\t\t\t\tme.textIndex = 'text';\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tme.valueIndex = me.valueIndex || 'value';\r\n\t\t\t\t\t\tme.textIndex = me.textIndex || me.valueIndex;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(me.data && isF(me.data.on)){\r\n\t\t\t\t\t\tme.data.on('changed', me.renderOptionItems, me);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\trenderInput : function(box){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tsuperClazz.renderInput.call(me, box);\r\n\t\t\t\t\tme.getBodyMask();\r\n\t\t\t\t\tme.renderOptionView();\r\n\t\t\t\t\tme.renderOptionItems();\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 渲染用于遮挡BODY的遮罩层。该方法将会创建bodyMask属性\r\n\t\t\t\t */\r\n\t\t\t\tgetBodyMask : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(!me.bodyMask){\r\n\t\t\t\t\t\tme.bodyMask = Cmp.getBody().createMask('ComboxMask', 900000);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn me.bodyMask;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 绘制显示候选项的承载容器\r\n\t\t\t\t */\r\n\t\t\t\trenderOptionView : function(){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tcls = ['c-cbx-opbox'];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tif(me.styleCls){\r\n\t\t\t\t\t\tcls.push(me.styleCls);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(me.sizeCls){\r\n\t\t\t\t\t\tcls.push(me.sizeCls);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tme.box = Cmp.getBody().createChild({\r\n\t\t\t\t\t\tcls : cls\r\n\t\t\t\t\t});\r\n\t\t\t\t\tme.warp = me.box.createChild({\r\n\t\t\t\t\t\tcls : 'c-cbx-opwarp'\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.box.setHideModal('display');\r\n\t\t\t\t\tme.box.hide();\r\n\t\t\t\t\tme.box.on('click', me.collect, me);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 重新绘制各个项。\r\n\t\t\t\t */\r\n\t\t\t\trenderOptionItems : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(me.optionItems){\r\n\t\t\t\t\t\t//移除之前绘制的候选项\r\n\t\t\t\t\t\tfor(var i=0, len = me.optionItems.length; i<len; i++){\r\n\t\t\t\t\t\t\tme.optionItems[i].remove();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar rs = me.data ? me.data.getRecords() : [],\r\n\t\t\t\t\t\ti=0, len = rs.length,o,\r\n\t\t\t\t\t\titems = [];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tfor(;i<len;i++){\r\n\t\t\t\t\t\to = me.renderOptionItem(me.warp, rs[i]);\r\n\t\t\t\t\t\tif(o){\r\n\t\t\t\t\t\t\titems.push(o);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.optionItems = items;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 绘制一个候选项\r\n\t\t\t\t */\r\n\t\t\t\trenderOptionItem : function(box, r){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tel,rel,\r\n\t\t\t\t\t\tv = r.get(me.valueIndex),\r\n\t\t\t\t\t\tt = r.get(me.textIndex);\r\n\t\t\t\t\tel = box.createChild({\r\n\t\t\t\t\t\tcls : 'c-cbx-op-item',\r\n\t\t\t\t\t\tatts : {\r\n\t\t\t\t\t\t\tvalue : v,\r\n\t\t\t\t\t\t\ttitle : t\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\thtml : t\r\n\t\t\t\t\t});\r\n\t\t\t\t\trel = {\r\n\t\t\t\t\t\tel : el,\r\n\t\t\t\t\t\tvalue : v,\r\n\t\t\t\t\t\tactived : false\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\trel.active = function(){\r\n\t\t\t\t\t\tif(!rel.actived){\r\n\t\t\t\t\t\t\trel.el.addClass('c-cbx-op-item-active');\r\n\t\t\t\t\t\t\trel.actived = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tme.activeOption = rel;\r\n\t\t\t\t\t}\r\n\t\t\t\t\trel.unactive = function(){\r\n\t\t\t\t\t\tif(rel.actived){\r\n\t\t\t\t\t\t\trel.el.removeClass('c-cbx-op-item-active');\r\n\t\t\t\t\t\t\trel.actived = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tme.activeOption = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\trel.remove = function(){\r\n\t\t\t\t\t\tif(rel.el){\r\n\t\t\t\t\t\t\trel.el.remove();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\trel.clickItem = function(){\r\n\t\t\t\t\t\tif(me.activeOption){\r\n\t\t\t\t\t\t\tme.activeOption.unactive();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\trel.active();\r\n\t\t\t\t\t\tme.setValue(rel.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\trel.el.on('click', rel.clickItem, rel);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(me.value == v){\r\n\t\t\t\t\t\trel.active();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn rel;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t * 防止重复分发事件，覆盖该方法\r\n\t\t\t\t */\r\n\t\t\t\tonInputBlur : Cmp.emptyFn\r\n\t\t\t});\r\n\t\t}\r\n\t\r\n\t});\r\n}());","/**\r\n * 一个多选选择录入控件类\r\n * @class Cmp.form.Checkbox\r\n * @extend Cmp.form.Field\r\n *\r\n * <p>\r\n * 构建时可以的属性配置说明如下：\r\n * @cfg {Object} value (可选)初始值。对于具有录入功能的初始值；默认为空的。\r\n * @cfg {String} text (可选)右侧提示文字；默认为空的。\r\n * @cfg {String} label (可选)显示标签文字，默认为空的。\r\n * @cfg {String} name (可选)录入值的属性名设定，默认为空的。\r\n * @cfg {Boolean} disabled (可选)等于true时认为初始时为失效的，即不可录入值。默认为false。\r\n * @cfg {Boolean} hideLabel (可选)等于true时，不会绘制标签文字。默认为false\r\n * @cfg {String/Number} labelWidth (可选)标签文字，占用的宽度，如果是一个数值则认为配置的是像素级别的宽度值。默认为: '5rem'；\r\n * @cfg {Boolean/String} checked (可选)等于true或'true'时，该控件处于选中状态；等于false或'false'时处于非选中状态；\r\n *\t\t\t\t等于'half'处于半选状态。默认为false;\r\n * </p>\r\n *\r\n * @version 3.0.0\r\n * @since 2016-05-31\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\t\r\n\tCmp.define('Cmp.form.Checkbox',{\r\n\t\textend : 'Cmp.form.Field',\r\n\t\tcls : true,\r\n\t\tfactory : function(ext, reqs){\r\n\t\t\tvar superClazz = ext.prototype;\r\n\t\t\t\r\n\t\t\treturn Cmp.extend(ext, {\r\n\t\t\t\t/**\r\n\t\t\t\t * 获得当前录入的值\r\n\t\t\t\t * @return {String} value 选中状态值；'checked'为选中，'half'为半选；false为非选中。\r\n\t\t\t\t */\r\n\t\t\t\tgetValue : function(){\r\n\t\t\t\t\treturn this.checkMode;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 设定值\r\n\t\t\t\t * @param {String} value 选中状态值；'checked'为选中，'half'为半选；false为非选中。\r\n\t\t\t\t */\r\n\t\t\t\tsetValue : function(value){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif('true' === value || true === value){\r\n\t\t\t\t\t\tvalue = 'checked'\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if('false' === value){\r\n\t\t\t\t\t\tvalue = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(me.checkMode === value){\r\n\t\t\t\t\t\treturn ; \r\n\t\t\t\t\t}\r\n\t\t\t\t\tif('checked' === value){\r\n\t\t\t\t\t\tme.toCheckedMode();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if('half' === value){\r\n\t\t\t\t\t\tme.toHalfCheckedMode();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tme.toUncheckedMode();\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 返回true表示当前为选中状态;\r\n\t\t\t\t * 注意：半选状态不属于选中状态\r\n\t\t\t\t * @return {Boolean}\r\n\t\t\t\t */\r\n\t\t\t\tisCheckeded : function(){\r\n\t\t\t\t\treturn 'checked' === this.checkMode;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 返回true表示当前为半选中状态\r\n\t\t\t\t * @return {Boolean}\r\n\t\t\t\t */\r\n\t\t\t\tisHalfChecked : function(){\r\n\t\t\t\t\treturn 'half' === this.checkMode;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 返回true表示当前为非选中状态\r\n\t\t\t\t * 注意：半选状态不属于非选中状态\r\n\t\t\t\t * @return {Boolean}\r\n\t\t\t\t */\r\n\t\t\t\tisUnchecked : function(){\r\n\t\t\t\t\treturn false === this.checkMode;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tinitComponent : function(){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tcls = me.cls;\r\n\t\t\t\t\tif(isA(cls)){\r\n\t\t\t\t\t\tcls.unshift('c-checkbox');\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(isS(cls)){\r\n\t\t\t\t\t\tcls = ['c-checkbox', cls];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tcls = 'c-checkbox';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.cls = cls;\r\n\t\t\t\t\tsuperClazz.initComponent.call(me);\r\n\t\t\t\t\tcls = me.checked;\r\n\t\t\t\t\tif('half' === cls){\r\n\t\t\t\t\t\tcls = 'half';\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(true === cls || 'true' === cls){\r\n\t\t\t\t\t\tcls = 'checked';\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tcls = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.checkMode = cls;\r\n\t\t\t\t\tdelete me.checked;\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.addEvents(\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * 当点击录入控件，将要切换选中状态之前，发送次事件；\r\n\t\t\t\t\t\t * 如果监听器返回false将放弃本次选中状态的切换\r\n\t\t\t\t\t\t *\r\n\t\t\t\t\t\t * @param {String} checkmode 当前的选中状态值；'checked'为选中，'half'为半选；false为非选中。\r\n\t\t\t\t\t\t * @param {String} afterCheckmode 之后将要选中状态值；'checked'为选中，'half'为半选；false为非选中。\r\n\t\t\t\t\t\t * @param {Checkbox} this\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t'click'\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\trenderInput : function(box){\r\n\t\t\t\t\t//text\r\n\t\t\t\t\tvar me = this,dom;\r\n\t\t\t\t\tme.warp = box.createChild({\r\n\t\t\t\t\t\tcls : 'c-checkbox-warp',\r\n\t\t\t\t\t\thtml : '<div class=\"c-checkbox-input\"></div><div class=\"c-checkbox-text\"></div>'\r\n\t\t\t\t\t});\r\n\t\t\t\t\tdom = me.warp.dom;\r\n\t\t\t\t\tme.checkbox = Cmp.get(dom.firstChild);\r\n\t\t\t\t\tme.textBox = Cmp.get(dom.childNodes[1]);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(isS(me.text)){\r\n\t\t\t\t\t\tme.textBox.update(me.text);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(false !== me.checkMode){\r\n\t\t\t\t\t\tme.warp.addClass('c-checkbox-'+me.checkMode);\r\n\t\t\t\t\t\tif('half' === me.checkMode){\r\n\t\t\t\t\t\t\tme.checkbox.update('<span class=\"c-checkbox-half-outer\"></span><span class=\"c-checkbox-half-inner\"></span>');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.checkbox.on('click', me.onClickInput, me);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t */\r\n\t\t\t\tonClickInput : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.isDisabled()){\r\n\t\t\t\t\t\treturn ; \r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(false !== me.fireEvent('click', me.checkMode, (me.isCheckeded() ? false:'checked'),me)){\r\n\t\t\t\t\t\t//允许切换\r\n\t\t\t\t\t\tif(me.isCheckeded()){\r\n\t\t\t\t\t\t\tme.toUncheckedMode();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tme.toCheckedMode();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @public\r\n\t\t\t\t * 切换至选中状态，并分发'changed'事件\r\n\t\t\t\t */\r\n\t\t\t\ttoCheckedMode : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.isCheckeded()){\r\n\t\t\t\t\t\treturn me;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(false !== me.checkMode){\r\n\t\t\t\t\t\tme.warp.removeClass('c-checkbox-'+me.checkMode);\r\n\t\t\t\t\t\tme.checkbox.update('');\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.checkMode = 'checked';\r\n\t\t\t\t\tme.warp.addClass('c-checkbox-'+me.checkMode);\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.fireEvent('changed', me.checkMode, me);\r\n\t\t\t\t\treturn me;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @public\r\n\t\t\t\t * 切换至半选中状态，并分发'changed'事件\r\n\t\t\t\t */\r\n\t\t\t\ttoHalfCheckedMode : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.isHalfChecked()){\r\n\t\t\t\t\t\treturn me;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(false !== me.checkMode){\r\n\t\t\t\t\t\tme.warp.removeClass('c-checkbox-'+me.checkMode);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.checkMode = 'half';\r\n\t\t\t\t\tme.warp.addClass('c-checkbox-'+me.checkMode);\r\n\t\t\t\t\tme.checkbox.update('<span class=\"c-checkbox-half-outer\"></span><span class=\"c-checkbox-half-inner\"></span>');\r\n\t\t\t\t\tme.fireEvent('changed', me.checkMode, me);\r\n\t\t\t\t\treturn me;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @public\r\n\t\t\t\t * 切换至非选中状态，并分发'changed'事件\r\n\t\t\t\t */\r\n\t\t\t\ttoUncheckedMode : function(){\r\n\t\t\t\t\tvar me = this;\r\n\t\t\t\t\tif(me.isUnchecked()){\r\n\t\t\t\t\t\treturn me;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.warp.removeClass('c-checkbox-'+me.checkMode);\r\n\t\t\t\t\tme.checkbox.update('');\r\n\t\t\t\t\tme.checkMode = false;\r\n\t\t\t\t\tme.fireEvent('changed', me.checkMode, me);\r\n\t\t\t\t\treturn me;\r\n\t\t\t\t}\r\n\t\t\t}); \r\n\t\t}\r\n\t});\r\n}());","/**\r\n * 多选选择录入组控件类\r\n * @class Cmp.form.CheckboxGroup\r\n * @extend Cmp.form.Field\r\n *\r\n * <p>\r\n * 构建时可以的属性配置说明如下：\r\n * @cfg {Array} value (可选)初始时处于选中的选项；每一项为一个值\r\n * @cfg {String} text (可选)右侧提示文字；默认为空的。\r\n * @cfg {Array} options (可选)候选项对象组成的数组。每一个对象具有以下两个属性\r\n *\t\t{String} value (必须)选项值\r\n *\t\t{String} text (可选)选项显示文字,默认等于value\r\n * @cfg {Boolean} disabled (可选)等于true时认为初始时为失效的，即不可录入值。默认为false。\r\n * @cfg {Boolean} hideLabel (可选)等于true时，不会绘制标签文字。默认为false\r\n * @cfg {String/Number} labelWidth (可选)标签文字占用的宽度，如果是一个数值则认为配置的是像素级别的宽度值。默认为: '5rem'；\r\n * @cfg {Boolean} showAll (可选)等于true时，显示表示全选Checkbox控件；默认为true；\r\n * @cfg {String/Number} optionWidth (可选)每一候选项所占用的宽度；\r\n * </p>\r\n *\r\n * @version 3.0.0\r\n * @since 2016-05-31\r\n * @author Jinhai\r\n */\r\n(function(){\r\n\tCmp.define('Cmp.form.CheckboxGroup',{\r\n\t\textend : 'Cmp.form.Field',\r\n\t\tcls : true,\r\n\t\trequires : [\r\n\t\t\t'Cmp.form.Checkbox'\r\n\t\t],\r\n\t\tfactory : function(ext, reqs){\r\n\t\t\tvar superClazz = ext.prototype,\r\n\t\t\t\tcheckboxClazz = reqs[0];\r\n\t\t\treturn Cmp.extend(ext, {\r\n\t\t\t\t/**\r\n\t\t\t\t * 重新设定选项，\r\n\t\t\t\t * @param {Array} options 候选项对象组成的数组。每一个对象具有以下两个属性\r\n\t\t\t\t *\t\t{String} value (必须)选项值\r\n\t\t\t\t *\t\t{String} text (可选)选项显示文字,默认等于value\r\n\t\t\t\t */\r\n\t\t\t\tsetOptions : function(options){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tips = me.inputs,\r\n\t\t\t\t\t\tlen,op,vv,tx,\r\n\t\t\t\t\t\ti, ip;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t//删除之前已经存在的\r\n\t\t\t\t\tif(ips){\r\n\t\t\t\t\t\tfor(i in ips){\r\n\t\t\t\t\t\t\tip = ips[i];\r\n\t\t\t\t\t\t\top = Cmp.get(ip.field.el.dom.parentNode);\r\n\t\t\t\t\t\t\tip.field.destroy();\r\n\t\t\t\t\t\t\top.remove();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tme.inputCount = 0;\t\r\n\t\t\t\t\t\tme.inputs = {};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.allInput.toUncheckedMode();\r\n\t\t\t\t\tfor(i=0, len = isA(options) ? options.length : 0; i<len; i++){\r\n\t\t\t\t\t\top = options[i];\r\n\t\t\t\t\t\tif(isO(op)){\r\n\t\t\t\t\t\t\tvv = op.value;\r\n\t\t\t\t\t\t\tif(vv == undefined){\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttx = op.text;\r\n\t\t\t\t\t\t\tif(!tx){\r\n\t\t\t\t\t\t\t\ttx = vv;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if(isS(op)){\r\n\t\t\t\t\t\t\ttx = vv = op;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tip = me.appendCheckbox(tx);\r\n\t\t\t\t\t\tif(ip){\r\n\t\t\t\t\t\t\tme.inputs[ip.getId()] = {\r\n\t\t\t\t\t\t\t\tfield : ip,\r\n\t\t\t\t\t\t\t\tvalue : vv,\r\n\t\t\t\t\t\t\t\tchecked : false\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tme.inputCount++;\r\n\t\t\t\t\t\t}\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * 获得当前录入的值\r\n\t\t\t\t * @return {Array} value 被选中的选项值组成的数组。\r\n\t\t\t\t */\r\n\t\t\t\tgetValue : function(){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tops = me.inputs,\r\n\t\t\t\t\t\ti,op,rel = [];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tfor(i in ops){\r\n\t\t\t\t\t\top = ops[i];\r\n\t\t\t\t\t\tif(op.checked){\r\n\t\t\t\t\t\t\trel.push(op.value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\treturn rel;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @public\r\n\t\t\t\t * 设定当前选中的候选项\r\n\t\t\t\t */\r\n\t\t\t\tsetValue : function(vs){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tops = me.inputs,\r\n\t\t\t\t\t\tcount = isA(vs) ? vs.length : 0,\r\n\t\t\t\t\t\ti,op,vv;\r\n\t\t\t\t\tif(me.selectCount === 0 && count === 0){\r\n\t\t\t\t\t\treturn ;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.onValueChangeding = true;\r\n\t\t\t\t\tfor(i in ops){\r\n\t\t\t\t\t\top = ops[i];\r\n\t\t\t\t\t\tif(count > 0 && vs.indexOf(op.value) > -1){\r\n\t\t\t\t\t\t\top.checked = true;\r\n\t\t\t\t\t\t\top.field.toCheckedMode();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\top.checked = false;\r\n\t\t\t\t\t\t\top.field.toUncheckedMode();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.selectCount = count;\t\r\n\t\t\t\t\tif(0 === me.selectCount){\r\n\t\t\t\t\t\t//一个没选\r\n\t\t\t\t\t\tme.allInput.toUncheckedMode();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(me.inputCount === me.selectCount){\r\n\t\t\t\t\t\t//全选\r\n\t\t\t\t\t\tme.allInput.toCheckedMode();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\t//半选\r\n\t\t\t\t\t\tme.allInput.toHalfCheckedMode();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.onValueChangeding = false;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\tinitComponent : function(){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tcls = me.cls;\r\n\t\t\t\t\tif(isA(cls)){\r\n\t\t\t\t\t\tcls.unshift('c-checkboxgroup');\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(isS(cls)){\r\n\t\t\t\t\t\tcls = ['c-checkboxgroup', cls];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tcls = 'c-checkboxgroup';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.cls = cls;\r\n\t\t\t\t\tsuperClazz.initComponent.call(me);\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * @overwrite\r\n\t\t\t\t */\r\n\t\t\t\trenderInput : function(box){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tops = me.options,op,fo,tx,vv,\r\n\t\t\t\t\t\ti = 0,\r\n\t\t\t\t\t\tlen = isA(ops) ? ops.length : 0;\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.allInputBox = box.createChild({\r\n\t\t\t\t\t\tcls : 'c-checkboxgroup-allinputbox'\r\n\t\t\t\t\t});\r\n\t\t\t\t\tme.allInput = new checkboxClazz({\r\n\t\t\t\t\t\thideLabel : true,\r\n\t\t\t\t\t\ttext : '全选'\r\n\t\t\t\t\t});\r\n\t\t\t\t\tme.allInput.on('changed', me.onAllSelectChanged, me);\r\n\t\t\t\t\tme.allInput.render(me.allInputBox);\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.optionBox = box.createChild({\r\n\t\t\t\t\t\tcls : 'c-checkboxgroup-optionbox'\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\tme.inputs = {};\r\n\t\t\t\t\tme.inputCount = 0;\r\n\t\t\t\t\tme.selectCount = 0;\r\n\t\t\t\t\tfor(;i<len;i++){\r\n\t\t\t\t\t\top = ops[i];\r\n\t\t\t\t\t\tif(isO(op)){\r\n\t\t\t\t\t\t\tvv = op.value;\r\n\t\t\t\t\t\t\tif(!vv){\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttx = op.text;\r\n\t\t\t\t\t\t\tif(!tx){\r\n\t\t\t\t\t\t\t\ttx = vv;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if(isS(op)){\r\n\t\t\t\t\t\t\ttx = vv = op;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfo = me.appendCheckbox(tx);\r\n\t\t\t\t\t\tif(fo){\r\n\t\t\t\t\t\t\tme.inputs[fo.getId()] = {\r\n\t\t\t\t\t\t\t\tfield : fo,\r\n\t\t\t\t\t\t\t\tvalue : vv,\r\n\t\t\t\t\t\t\t\tchecked : false\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tme.inputCount++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(isA(me.value)){\r\n\t\t\t\t\t\tme.setValue(me.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 向选项区域内添加一个Checkbox\r\n\t\t\t\t */\r\n\t\t\t\tappendCheckbox : function(text){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tel = me.optionBox,\r\n\t\t\t\t\t\tbox,rel;\r\n\t\t\t\t\t\r\n\t\t\t\t\tbox = el.createChild({\r\n\t\t\t\t\t\tcls : 'c-checkboxgroup-optionitem'\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\trel = new checkboxClazz({\r\n\t\t\t\t\t\thideLabel : true,\r\n\t\t\t\t\t\ttext : text\r\n\t\t\t\t\t});\r\n\t\t\t\t\trel.on('changed', me.onOptionValueChanged, me);\r\n\t\t\t\t\trel.render(box);\r\n\t\t\t\t\treturn rel;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 全选控件的选中状态发生改变\r\n\t\t\t\t */\r\n\t\t\t\tonAllSelectChanged : function(checkModue, field){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tinputs = me.inputs,\r\n\t\t\t\t\t\ti,op;\r\n\t\t\t\t\tif(me.onOptionValueChanging\r\n\t\t\t\t\t\t|| me.onValueChangeding){\r\n\t\t\t\t\t\treturn ;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.onAllSelectChanging = true;\r\n\t\t\t\t\tif(field.isCheckeded()){\r\n\t\t\t\t\t\tme.selectCount = me.inputCount;\r\n\t\t\t\t\t\tfor(i in inputs){\r\n\t\t\t\t\t\t\top = inputs[i];\r\n\t\t\t\t\t\t\top.checked = true;\r\n\t\t\t\t\t\t\top.field.toCheckedMode();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tme.selectCount = 0;\r\n\t\t\t\t\t\tfor(i in inputs){\r\n\t\t\t\t\t\t\top = inputs[i];\r\n\t\t\t\t\t\t\top.checked = false;\r\n\t\t\t\t\t\t\top.field.toUncheckedMode();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.onAllSelectChanging = false;\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * @private\r\n\t\t\t\t * 选项的选中状态发生改变\r\n\t\t\t\t */\r\n\t\t\t\tonOptionValueChanged : function(checkModue, field){\r\n\t\t\t\t\tvar me = this,\r\n\t\t\t\t\t\tinputs = me.inputs,\r\n\t\t\t\t\t\tcid = field.getId(),\r\n\t\t\t\t\t\top = inputs[cid];\r\n\t\t\t\t\tif(me.onAllSelectChanging \r\n\t\t\t\t\t\t|| me.onValueChangeding\r\n\t\t\t\t\t\t|| !op){\r\n\t\t\t\t\t\treturn ;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\tif(field.isCheckeded()){\r\n\t\t\t\t\t\top.checked = true;\r\n\t\t\t\t\t\tme.selectCount++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\top.checked = false;\r\n\t\t\t\t\t\tme.selectCount--;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.onOptionValueChanging = true;\r\n\t\t\t\t\tif(0 === me.selectCount){\r\n\t\t\t\t\t\t//一个没选\r\n\t\t\t\t\t\tme.allInput.toUncheckedMode();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(me.inputCount === me.selectCount){\r\n\t\t\t\t\t\t//全选\r\n\t\t\t\t\t\tme.allInput.toCheckedMode();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\t//半选\r\n\t\t\t\t\t\tme.allInput.toHalfCheckedMode();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tme.onOptionValueChanging = false;\r\n\t\t\t\t}\r\n\t\t\t});\t\r\n\t\t}\r\n\t});\r\n}());"]}